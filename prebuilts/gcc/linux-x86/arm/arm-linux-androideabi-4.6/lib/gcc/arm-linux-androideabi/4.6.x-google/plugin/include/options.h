/* This file is auto-generated by opth-gen.awk.  */

#ifndef OPTIONS_H
#define OPTIONS_H

#include "flag-types.h"

#if !defined(IN_LIBGCC2) && !defined(IN_TARGET_LIBS) && !defined(IN_RTS)
#ifndef GENERATOR_FILE
#if !defined(GCC_DRIVER) && !defined(IN_LIBGCC2) && !defined(IN_TARGET_LIBS)
struct GTY(()) gcc_options
#else
struct gcc_options
#endif
{
#endif
#ifdef GENERATOR_FILE
extern HOST_WIDE_INT frame_larger_than_size;
#else
  HOST_WIDE_INT x_frame_larger_than_size;
#define frame_larger_than_size global_options.x_frame_larger_than_size
#endif
#ifdef GENERATOR_FILE
extern HOST_WIDE_INT larger_than_size;
#else
  HOST_WIDE_INT x_larger_than_size;
#define larger_than_size global_options.x_larger_than_size
#endif
#ifdef GENERATOR_FILE
extern bool exit_after_options;
#else
  bool x_exit_after_options;
#define exit_after_options global_options.x_exit_after_options
#endif
#ifdef GENERATOR_FILE
extern bool flag_dump_all_passed;
#else
  bool x_flag_dump_all_passed;
#define flag_dump_all_passed global_options.x_flag_dump_all_passed
#endif
#ifdef GENERATOR_FILE
extern bool flag_opts_finished;
#else
  bool x_flag_opts_finished;
#define flag_opts_finished global_options.x_flag_opts_finished
#endif
#ifdef GENERATOR_FILE
extern bool flag_warn_unused_result;
#else
  bool x_flag_warn_unused_result;
#define flag_warn_unused_result global_options.x_flag_warn_unused_result
#endif
#ifdef GENERATOR_FILE
extern bool generate_debug_line_table;
#else
  bool x_generate_debug_line_table;
#define generate_debug_line_table global_options.x_generate_debug_line_table
#endif
#ifdef GENERATOR_FILE
extern bool use_gnu_debug_info_extensions;
#else
  bool x_use_gnu_debug_info_extensions;
#define use_gnu_debug_info_extensions global_options.x_use_gnu_debug_info_extensions
#endif
#ifdef GENERATOR_FILE
extern bool warn_frame_larger_than;
#else
  bool x_warn_frame_larger_than;
#define warn_frame_larger_than global_options.x_warn_frame_larger_than
#endif
#ifdef GENERATOR_FILE
extern bool warn_larger_than;
#else
  bool x_warn_larger_than;
#define warn_larger_than global_options.x_warn_larger_than
#endif
#ifdef GENERATOR_FILE
extern char *help_enum_printed;
#else
  char * x_help_enum_printed;
#define help_enum_printed global_options.x_help_enum_printed
#endif
#ifdef GENERATOR_FILE
extern char *help_printed;
#else
  char * x_help_printed;
#define help_printed global_options.x_help_printed
#endif
#ifdef GENERATOR_FILE
extern const char *main_input_basename;
#else
  const char * x_main_input_basename;
#define main_input_basename global_options.x_main_input_basename
#endif
#ifdef GENERATOR_FILE
extern const char *main_input_filename;
#else
  const char * x_main_input_filename;
#define main_input_filename global_options.x_main_input_filename
#endif
#ifdef GENERATOR_FILE
extern enum debug_info_levels debug_info_level;
#else
  enum debug_info_levels x_debug_info_level;
#define debug_info_level global_options.x_debug_info_level
#endif
#ifdef GENERATOR_FILE
extern enum debug_info_type write_symbols;
#else
  enum debug_info_type x_write_symbols;
#define write_symbols global_options.x_write_symbols
#endif
#ifdef GENERATOR_FILE
extern enum debug_struct_file debug_struct_generic[DINFO_USAGE_NUM_ENUMS];
#else
  enum debug_struct_file x_debug_struct_generic[DINFO_USAGE_NUM_ENUMS];
#define debug_struct_generic global_options.x_debug_struct_generic
#endif
#ifdef GENERATOR_FILE
extern enum debug_struct_file debug_struct_ordinary[DINFO_USAGE_NUM_ENUMS];
#else
  enum debug_struct_file x_debug_struct_ordinary[DINFO_USAGE_NUM_ENUMS];
#define debug_struct_ordinary global_options.x_debug_struct_ordinary
#endif
#ifdef GENERATOR_FILE
extern enum graph_dump_types graph_dump_format;
#else
  enum graph_dump_types x_graph_dump_format;
#define graph_dump_format global_options.x_graph_dump_format
#endif
#ifdef GENERATOR_FILE
extern enum stack_check_type flag_stack_check;
#else
  enum stack_check_type x_flag_stack_check;
#define flag_stack_check global_options.x_flag_stack_check
#endif
#ifdef GENERATOR_FILE
extern enum vect_verbosity_levels user_vect_verbosity_level;
#else
  enum vect_verbosity_levels x_user_vect_verbosity_level;
#define user_vect_verbosity_level global_options.x_user_vect_verbosity_level
#endif
#ifdef GENERATOR_FILE
extern int *param_values;
#else
  int * x_param_values;
#define param_values global_options.x_param_values
#endif
#ifdef GENERATOR_FILE
extern int flag_complex_method;
#else
  int x_flag_complex_method;
#define flag_complex_method global_options.x_flag_complex_method
#endif
#ifdef GENERATOR_FILE
extern int flag_debug_asm;
#else
  int x_flag_debug_asm;
#define flag_debug_asm global_options.x_flag_debug_asm
#endif
#ifdef GENERATOR_FILE
extern int flag_dump_rtl_in_asm;
#else
  int x_flag_dump_rtl_in_asm;
#define flag_dump_rtl_in_asm global_options.x_flag_dump_rtl_in_asm
#endif
#ifdef GENERATOR_FILE
extern int flag_evaluation_order;
#else
  int x_flag_evaluation_order;
#define flag_evaluation_order global_options.x_flag_evaluation_order
#endif
#ifdef GENERATOR_FILE
extern int flag_gen_aux_info;
#else
  int x_flag_gen_aux_info;
#define flag_gen_aux_info global_options.x_flag_gen_aux_info
#endif
#ifdef GENERATOR_FILE
extern int flag_generate_lto;
#else
  int x_flag_generate_lto;
#define flag_generate_lto global_options.x_flag_generate_lto
#endif
#ifdef GENERATOR_FILE
extern int flag_print_asm_name;
#else
  int x_flag_print_asm_name;
#define flag_print_asm_name global_options.x_flag_print_asm_name
#endif
#ifdef GENERATOR_FILE
extern int flag_shlib;
#else
  int x_flag_shlib;
#define flag_shlib global_options.x_flag_shlib
#endif
#ifdef GENERATOR_FILE
extern int main_input_baselength;
#else
  int x_main_input_baselength;
#define main_input_baselength global_options.x_main_input_baselength
#endif
#ifdef GENERATOR_FILE
extern int optimize;
#else
  int x_optimize;
#define optimize global_options.x_optimize
#endif
#ifdef GENERATOR_FILE
extern int optimize_fast;
#else
  int x_optimize_fast;
#define optimize_fast global_options.x_optimize_fast
#endif
#ifdef GENERATOR_FILE
extern int optimize_size;
#else
  int x_optimize_size;
#define optimize_size global_options.x_optimize_size
#endif
#ifdef GENERATOR_FILE
extern int rtl_dump_and_exit;
#else
  int x_rtl_dump_and_exit;
#define rtl_dump_and_exit global_options.x_rtl_dump_and_exit
#endif
#ifdef GENERATOR_FILE
extern int target_flags;
#else
  int x_target_flags;
#define target_flags global_options.x_target_flags
#endif
#ifdef GENERATOR_FILE
extern unsigned int help_columns;
#else
  unsigned int x_help_columns;
#define help_columns global_options.x_help_columns
#endif
#ifdef GENERATOR_FILE
extern unsigned int initial_max_fld_align;
#else
  unsigned int x_initial_max_fld_align;
#define initial_max_fld_align global_options.x_initial_max_fld_align
#endif
#ifdef GENERATOR_FILE
extern void *flag_instrument_functions_exclude_files;
#else
  void * x_flag_instrument_functions_exclude_files;
#define flag_instrument_functions_exclude_files global_options.x_flag_instrument_functions_exclude_files
#endif
#ifdef GENERATOR_FILE
extern void *flag_instrument_functions_exclude_functions;
#else
  void * x_flag_instrument_functions_exclude_functions;
#define flag_instrument_functions_exclude_functions global_options.x_flag_instrument_functions_exclude_functions
#endif
#ifdef GENERATOR_FILE
extern int help_flag;
#else
  int x_help_flag;
#define help_flag global_options.x_help_flag
#endif
#ifdef GENERATOR_FILE
extern int flag_preprocess_only;
#else
  int x_flag_preprocess_only;
#define flag_preprocess_only global_options.x_flag_preprocess_only
#endif
#ifdef GENERATOR_FILE
extern int warn_abi;
#else
  int x_warn_abi;
#define warn_abi global_options.x_warn_abi
#endif
#ifdef GENERATOR_FILE
extern int warn_address;
#else
  int x_warn_address;
#define warn_address global_options.x_warn_address
#endif
#ifdef GENERATOR_FILE
extern int warn_aggregate_return;
#else
  int x_warn_aggregate_return;
#define warn_aggregate_return global_options.x_warn_aggregate_return
#endif
#ifdef GENERATOR_FILE
extern int warn_array_bounds;
#else
  int x_warn_array_bounds;
#define warn_array_bounds global_options.x_warn_array_bounds
#endif
#ifdef GENERATOR_FILE
extern int warn_assign_intercept;
#else
  int x_warn_assign_intercept;
#define warn_assign_intercept global_options.x_warn_assign_intercept
#endif
#ifdef GENERATOR_FILE
extern int warn_attributes;
#else
  int x_warn_attributes;
#define warn_attributes global_options.x_warn_attributes
#endif
#ifdef GENERATOR_FILE
extern int warn_bad_function_cast;
#else
  int x_warn_bad_function_cast;
#define warn_bad_function_cast global_options.x_warn_bad_function_cast
#endif
#ifdef GENERATOR_FILE
extern int warn_cxx_compat;
#else
  int x_warn_cxx_compat;
#define warn_cxx_compat global_options.x_warn_cxx_compat
#endif
#ifdef GENERATOR_FILE
extern int warn_cxx0x_compat;
#else
  int x_warn_cxx0x_compat;
#define warn_cxx0x_compat global_options.x_warn_cxx0x_compat
#endif
#ifdef GENERATOR_FILE
extern int warn_cast_align;
#else
  int x_warn_cast_align;
#define warn_cast_align global_options.x_warn_cast_align
#endif
#ifdef GENERATOR_FILE
extern int warn_cast_qual;
#else
  int x_warn_cast_qual;
#define warn_cast_qual global_options.x_warn_cast_qual
#endif
#ifdef GENERATOR_FILE
extern int warn_char_subscripts;
#else
  int x_warn_char_subscripts;
#define warn_char_subscripts global_options.x_warn_char_subscripts
#endif
#ifdef GENERATOR_FILE
extern int warn_clobbered;
#else
  int x_warn_clobbered;
#define warn_clobbered global_options.x_warn_clobbered
#endif
#ifdef GENERATOR_FILE
extern int warn_conversion;
#else
  int x_warn_conversion;
#define warn_conversion global_options.x_warn_conversion
#endif
#ifdef GENERATOR_FILE
extern int warn_conversion_null;
#else
  int x_warn_conversion_null;
#define warn_conversion_null global_options.x_warn_conversion_null
#endif
#ifdef GENERATOR_FILE
extern int warn_coverage_mismatch;
#else
  int x_warn_coverage_mismatch;
#define warn_coverage_mismatch global_options.x_warn_coverage_mismatch
#endif
#ifdef GENERATOR_FILE
extern int warn_cpp;
#else
  int x_warn_cpp;
#define warn_cpp global_options.x_warn_cpp
#endif
#ifdef GENERATOR_FILE
extern int warn_ctor_dtor_privacy;
#else
  int x_warn_ctor_dtor_privacy;
#define warn_ctor_dtor_privacy global_options.x_warn_ctor_dtor_privacy
#endif
#ifdef GENERATOR_FILE
extern int warn_declaration_after_statement;
#else
  int x_warn_declaration_after_statement;
#define warn_declaration_after_statement global_options.x_warn_declaration_after_statement
#endif
#ifdef GENERATOR_FILE
extern int warn_deprecated;
#else
  int x_warn_deprecated;
#define warn_deprecated global_options.x_warn_deprecated
#endif
#ifdef GENERATOR_FILE
extern int warn_deprecated_decl;
#else
  int x_warn_deprecated_decl;
#define warn_deprecated_decl global_options.x_warn_deprecated_decl
#endif
#ifdef GENERATOR_FILE
extern int warn_disabled_optimization;
#else
  int x_warn_disabled_optimization;
#define warn_disabled_optimization global_options.x_warn_disabled_optimization
#endif
#ifdef GENERATOR_FILE
extern int warn_div_by_zero;
#else
  int x_warn_div_by_zero;
#define warn_div_by_zero global_options.x_warn_div_by_zero
#endif
#ifdef GENERATOR_FILE
extern int warn_double_promotion;
#else
  int x_warn_double_promotion;
#define warn_double_promotion global_options.x_warn_double_promotion
#endif
#ifdef GENERATOR_FILE
extern int warn_ecpp;
#else
  int x_warn_ecpp;
#define warn_ecpp global_options.x_warn_ecpp
#endif
#ifdef GENERATOR_FILE
extern int warn_empty_body;
#else
  int x_warn_empty_body;
#define warn_empty_body global_options.x_warn_empty_body
#endif
#ifdef GENERATOR_FILE
extern int warn_enum_compare;
#else
  int x_warn_enum_compare;
#define warn_enum_compare global_options.x_warn_enum_compare
#endif
#ifdef GENERATOR_FILE
extern int warnings_are_errors;
#else
  int x_warnings_are_errors;
#define warnings_are_errors global_options.x_warnings_are_errors
#endif
#ifdef GENERATOR_FILE
extern int extra_warnings;
#else
  int x_extra_warnings;
#define extra_warnings global_options.x_extra_warnings
#endif
#ifdef GENERATOR_FILE
extern int flag_extraneous_semicolon;
#else
  int x_flag_extraneous_semicolon;
#define flag_extraneous_semicolon global_options.x_flag_extraneous_semicolon
#endif
#ifdef GENERATOR_FILE
extern int flag_fatal_errors;
#else
  int x_flag_fatal_errors;
#define flag_fatal_errors global_options.x_flag_fatal_errors
#endif
#ifdef GENERATOR_FILE
extern int warn_float_equal;
#else
  int x_warn_float_equal;
#define warn_float_equal global_options.x_warn_float_equal
#endif
#ifdef GENERATOR_FILE
extern int warn_format_contains_nul;
#else
  int x_warn_format_contains_nul;
#define warn_format_contains_nul global_options.x_warn_format_contains_nul
#endif
#ifdef GENERATOR_FILE
extern int warn_format_extra_args;
#else
  int x_warn_format_extra_args;
#define warn_format_extra_args global_options.x_warn_format_extra_args
#endif
#ifdef GENERATOR_FILE
extern int warn_format_nonliteral;
#else
  int x_warn_format_nonliteral;
#define warn_format_nonliteral global_options.x_warn_format_nonliteral
#endif
#ifdef GENERATOR_FILE
extern int warn_format_security;
#else
  int x_warn_format_security;
#define warn_format_security global_options.x_warn_format_security
#endif
#ifdef GENERATOR_FILE
extern int warn_format_y2k;
#else
  int x_warn_format_y2k;
#define warn_format_y2k global_options.x_warn_format_y2k
#endif
#ifdef GENERATOR_FILE
extern int warn_format_zero_length;
#else
  int x_warn_format_zero_length;
#define warn_format_zero_length global_options.x_warn_format_zero_length
#endif
#ifdef GENERATOR_FILE
extern int warn_ignored_qualifiers;
#else
  int x_warn_ignored_qualifiers;
#define warn_ignored_qualifiers global_options.x_warn_ignored_qualifiers
#endif
#ifdef GENERATOR_FILE
extern int warn_implicit;
#else
  int x_warn_implicit;
#define warn_implicit global_options.x_warn_implicit
#endif
#ifdef GENERATOR_FILE
extern int warn_implicit_function_declaration;
#else
  int x_warn_implicit_function_declaration;
#define warn_implicit_function_declaration global_options.x_warn_implicit_function_declaration
#endif
#ifdef GENERATOR_FILE
extern int warn_implicit_int;
#else
  int x_warn_implicit_int;
#define warn_implicit_int global_options.x_warn_implicit_int
#endif
#ifdef GENERATOR_FILE
extern int warn_init_self;
#else
  int x_warn_init_self;
#define warn_init_self global_options.x_warn_init_self
#endif
#ifdef GENERATOR_FILE
extern int warn_inline;
#else
  int x_warn_inline;
#define warn_inline global_options.x_warn_inline
#endif
#ifdef GENERATOR_FILE
extern int warn_int_to_pointer_cast;
#else
  int x_warn_int_to_pointer_cast;
#define warn_int_to_pointer_cast global_options.x_warn_int_to_pointer_cast
#endif
#ifdef GENERATOR_FILE
extern int warn_invalid_offsetof;
#else
  int x_warn_invalid_offsetof;
#define warn_invalid_offsetof global_options.x_warn_invalid_offsetof
#endif
#ifdef GENERATOR_FILE
extern int warn_jump_misses_init;
#else
  int x_warn_jump_misses_init;
#define warn_jump_misses_init global_options.x_warn_jump_misses_init
#endif
#ifdef GENERATOR_FILE
extern int warn_logical_op;
#else
  int x_warn_logical_op;
#define warn_logical_op global_options.x_warn_logical_op
#endif
#ifdef GENERATOR_FILE
extern int warn_long_long;
#else
  int x_warn_long_long;
#define warn_long_long global_options.x_warn_long_long
#endif
#ifdef GENERATOR_FILE
extern int warn_main;
#else
  int x_warn_main;
#define warn_main global_options.x_warn_main
#endif
#ifdef GENERATOR_FILE
extern int warn_maybe_uninitialized;
#else
  int x_warn_maybe_uninitialized;
#define warn_maybe_uninitialized global_options.x_warn_maybe_uninitialized
#endif
#ifdef GENERATOR_FILE
extern int warn_missing_braces;
#else
  int x_warn_missing_braces;
#define warn_missing_braces global_options.x_warn_missing_braces
#endif
#ifdef GENERATOR_FILE
extern int warn_missing_declarations;
#else
  int x_warn_missing_declarations;
#define warn_missing_declarations global_options.x_warn_missing_declarations
#endif
#ifdef GENERATOR_FILE
extern int warn_missing_field_initializers;
#else
  int x_warn_missing_field_initializers;
#define warn_missing_field_initializers global_options.x_warn_missing_field_initializers
#endif
#ifdef GENERATOR_FILE
extern int warn_missing_format_attribute;
#else
  int x_warn_missing_format_attribute;
#define warn_missing_format_attribute global_options.x_warn_missing_format_attribute
#endif
#ifdef GENERATOR_FILE
extern int warn_missing_noreturn;
#else
  int x_warn_missing_noreturn;
#define warn_missing_noreturn global_options.x_warn_missing_noreturn
#endif
#ifdef GENERATOR_FILE
extern int warn_missing_parameter_type;
#else
  int x_warn_missing_parameter_type;
#define warn_missing_parameter_type global_options.x_warn_missing_parameter_type
#endif
#ifdef GENERATOR_FILE
extern int warn_missing_prototypes;
#else
  int x_warn_missing_prototypes;
#define warn_missing_prototypes global_options.x_warn_missing_prototypes
#endif
#ifdef GENERATOR_FILE
extern int warn_mudflap;
#else
  int x_warn_mudflap;
#define warn_mudflap global_options.x_warn_mudflap
#endif
#ifdef GENERATOR_FILE
extern int warn_narrowing;
#else
  int x_warn_narrowing;
#define warn_narrowing global_options.x_warn_narrowing
#endif
#ifdef GENERATOR_FILE
extern int warn_nested_externs;
#else
  int x_warn_nested_externs;
#define warn_nested_externs global_options.x_warn_nested_externs
#endif
#ifdef GENERATOR_FILE
extern int warn_noexcept;
#else
  int x_warn_noexcept;
#define warn_noexcept global_options.x_warn_noexcept
#endif
#ifdef GENERATOR_FILE
extern int warn_nontemplate_friend;
#else
  int x_warn_nontemplate_friend;
#define warn_nontemplate_friend global_options.x_warn_nontemplate_friend
#endif
#ifdef GENERATOR_FILE
extern int warn_nonvdtor;
#else
  int x_warn_nonvdtor;
#define warn_nonvdtor global_options.x_warn_nonvdtor
#endif
#ifdef GENERATOR_FILE
extern int warn_nonnull;
#else
  int x_warn_nonnull;
#define warn_nonnull global_options.x_warn_nonnull
#endif
#ifdef GENERATOR_FILE
extern int warn_old_style_cast;
#else
  int x_warn_old_style_cast;
#define warn_old_style_cast global_options.x_warn_old_style_cast
#endif
#ifdef GENERATOR_FILE
extern int warn_old_style_declaration;
#else
  int x_warn_old_style_declaration;
#define warn_old_style_declaration global_options.x_warn_old_style_declaration
#endif
#ifdef GENERATOR_FILE
extern int warn_old_style_definition;
#else
  int x_warn_old_style_definition;
#define warn_old_style_definition global_options.x_warn_old_style_definition
#endif
#ifdef GENERATOR_FILE
extern int flag_newer;
#else
  int x_flag_newer;
#define flag_newer global_options.x_flag_newer
#endif
#ifdef GENERATOR_FILE
extern int warn_overflow;
#else
  int x_warn_overflow;
#define warn_overflow global_options.x_warn_overflow
#endif
#ifdef GENERATOR_FILE
extern int warn_overlength_strings;
#else
  int x_warn_overlength_strings;
#define warn_overlength_strings global_options.x_warn_overlength_strings
#endif
#ifdef GENERATOR_FILE
extern int warn_overloaded_virtual;
#else
  int x_warn_overloaded_virtual;
#define warn_overloaded_virtual global_options.x_warn_overloaded_virtual
#endif
#ifdef GENERATOR_FILE
extern int warn_override_init;
#else
  int x_warn_override_init;
#define warn_override_init global_options.x_warn_override_init
#endif
#ifdef GENERATOR_FILE
extern int warn_packed;
#else
  int x_warn_packed;
#define warn_packed global_options.x_warn_packed
#endif
#ifdef GENERATOR_FILE
extern int warn_packed_bitfield_compat;
#else
  int x_warn_packed_bitfield_compat;
#define warn_packed_bitfield_compat global_options.x_warn_packed_bitfield_compat
#endif
#ifdef GENERATOR_FILE
extern int warn_padded;
#else
  int x_warn_padded;
#define warn_padded global_options.x_warn_padded
#endif
#ifdef GENERATOR_FILE
extern int warn_parentheses;
#else
  int x_warn_parentheses;
#define warn_parentheses global_options.x_warn_parentheses
#endif
#ifdef GENERATOR_FILE
extern int warn_pmf2ptr;
#else
  int x_warn_pmf2ptr;
#define warn_pmf2ptr global_options.x_warn_pmf2ptr
#endif
#ifdef GENERATOR_FILE
extern int warn_pointer_arith;
#else
  int x_warn_pointer_arith;
#define warn_pointer_arith global_options.x_warn_pointer_arith
#endif
#ifdef GENERATOR_FILE
extern int warn_pointer_sign;
#else
  int x_warn_pointer_sign;
#define warn_pointer_sign global_options.x_warn_pointer_sign
#endif
#ifdef GENERATOR_FILE
extern int warn_pointer_to_int_cast;
#else
  int x_warn_pointer_to_int_cast;
#define warn_pointer_to_int_cast global_options.x_warn_pointer_to_int_cast
#endif
#ifdef GENERATOR_FILE
extern int warn_pragmas;
#else
  int x_warn_pragmas;
#define warn_pragmas global_options.x_warn_pragmas
#endif
#ifdef GENERATOR_FILE
extern int warn_property_assign_default;
#else
  int x_warn_property_assign_default;
#define warn_property_assign_default global_options.x_warn_property_assign_default
#endif
#ifdef GENERATOR_FILE
extern int warn_protocol;
#else
  int x_warn_protocol;
#define warn_protocol global_options.x_warn_protocol
#endif
#ifdef GENERATOR_FILE
extern int warn_psabi;
#else
  int x_warn_psabi;
#define warn_psabi global_options.x_warn_psabi
#endif
#ifdef GENERATOR_FILE
extern int warn_real_conversion;
#else
  int x_warn_real_conversion;
#define warn_real_conversion global_options.x_warn_real_conversion
#endif
#ifdef GENERATOR_FILE
extern int warn_redundant_decls;
#else
  int x_warn_redundant_decls;
#define warn_redundant_decls global_options.x_warn_redundant_decls
#endif
#ifdef GENERATOR_FILE
extern int flag_redundant;
#else
  int x_flag_redundant;
#define flag_redundant global_options.x_flag_redundant
#endif
#ifdef GENERATOR_FILE
extern int warn_reorder;
#else
  int x_warn_reorder;
#define warn_reorder global_options.x_warn_reorder
#endif
#ifdef GENERATOR_FILE
extern int warn_return_type;
#else
  int x_warn_return_type;
#define warn_return_type global_options.x_warn_return_type
#endif
#ifdef GENERATOR_FILE
extern int warn_ripa_opt_mismatch;
#else
  int x_warn_ripa_opt_mismatch;
#define warn_ripa_opt_mismatch global_options.x_warn_ripa_opt_mismatch
#endif
#ifdef GENERATOR_FILE
extern int warn_selector;
#else
  int x_warn_selector;
#define warn_selector global_options.x_warn_selector
#endif
#ifdef GENERATOR_FILE
extern int warn_self_assign;
#else
  int x_warn_self_assign;
#define warn_self_assign global_options.x_warn_self_assign
#endif
#ifdef GENERATOR_FILE
extern int warn_self_assign_non_pod;
#else
  int x_warn_self_assign_non_pod;
#define warn_self_assign_non_pod global_options.x_warn_self_assign_non_pod
#endif
#ifdef GENERATOR_FILE
extern int warn_sequence_point;
#else
  int x_warn_sequence_point;
#define warn_sequence_point global_options.x_warn_sequence_point
#endif
#ifdef GENERATOR_FILE
extern int warn_shadow;
#else
  int x_warn_shadow;
#define warn_shadow global_options.x_warn_shadow
#endif
#ifdef GENERATOR_FILE
extern int warn_shadow_compatible_local;
#else
  int x_warn_shadow_compatible_local;
#define warn_shadow_compatible_local global_options.x_warn_shadow_compatible_local
#endif
#ifdef GENERATOR_FILE
extern int warn_shadow_local;
#else
  int x_warn_shadow_local;
#define warn_shadow_local global_options.x_warn_shadow_local
#endif
#ifdef GENERATOR_FILE
extern int warn_sign_compare;
#else
  int x_warn_sign_compare;
#define warn_sign_compare global_options.x_warn_sign_compare
#endif
#ifdef GENERATOR_FILE
extern int warn_sign_conversion;
#else
  int x_warn_sign_conversion;
#define warn_sign_conversion global_options.x_warn_sign_conversion
#endif
#ifdef GENERATOR_FILE
extern int warn_sign_promo;
#else
  int x_warn_sign_promo;
#define warn_sign_promo global_options.x_warn_sign_promo
#endif
#ifdef GENERATOR_FILE
extern int warn_stack_protect;
#else
  int x_warn_stack_protect;
#define warn_stack_protect global_options.x_warn_stack_protect
#endif
#ifdef GENERATOR_FILE
extern int warn_strict_aliasing;
#else
  int x_warn_strict_aliasing;
#define warn_strict_aliasing global_options.x_warn_strict_aliasing
#endif
#ifdef GENERATOR_FILE
extern int warn_strict_null_sentinel;
#else
  int x_warn_strict_null_sentinel;
#define warn_strict_null_sentinel global_options.x_warn_strict_null_sentinel
#endif
#ifdef GENERATOR_FILE
extern int warn_strict_overflow;
#else
  int x_warn_strict_overflow;
#define warn_strict_overflow global_options.x_warn_strict_overflow
#endif
#ifdef GENERATOR_FILE
extern int warn_strict_prototypes;
#else
  int x_warn_strict_prototypes;
#define warn_strict_prototypes global_options.x_warn_strict_prototypes
#endif
#ifdef GENERATOR_FILE
extern int warn_strict_selector_match;
#else
  int x_warn_strict_selector_match;
#define warn_strict_selector_match global_options.x_warn_strict_selector_match
#endif
#ifdef GENERATOR_FILE
extern int warn_suggest_attribute_const;
#else
  int x_warn_suggest_attribute_const;
#define warn_suggest_attribute_const global_options.x_warn_suggest_attribute_const
#endif
#ifdef GENERATOR_FILE
extern int warn_suggest_attribute_noreturn;
#else
  int x_warn_suggest_attribute_noreturn;
#define warn_suggest_attribute_noreturn global_options.x_warn_suggest_attribute_noreturn
#endif
#ifdef GENERATOR_FILE
extern int warn_suggest_attribute_pure;
#else
  int x_warn_suggest_attribute_pure;
#define warn_suggest_attribute_pure global_options.x_warn_suggest_attribute_pure
#endif
#ifdef GENERATOR_FILE
extern int warn_switch;
#else
  int x_warn_switch;
#define warn_switch global_options.x_warn_switch
#endif
#ifdef GENERATOR_FILE
extern int warn_switch_default;
#else
  int x_warn_switch_default;
#define warn_switch_default global_options.x_warn_switch_default
#endif
#ifdef GENERATOR_FILE
extern int warn_switch_enum;
#else
  int x_warn_switch_enum;
#define warn_switch_enum global_options.x_warn_switch_enum
#endif
#ifdef GENERATOR_FILE
extern int warn_sync_nand;
#else
  int x_warn_sync_nand;
#define warn_sync_nand global_options.x_warn_sync_nand
#endif
#ifdef GENERATOR_FILE
extern int warn_synth;
#else
  int x_warn_synth;
#define warn_synth global_options.x_warn_synth
#endif
#ifdef GENERATOR_FILE
extern int warn_system_headers;
#else
  int x_warn_system_headers;
#define warn_system_headers global_options.x_warn_system_headers
#endif
#ifdef GENERATOR_FILE
extern int warn_thread_attr_bind_param;
#else
  int x_warn_thread_attr_bind_param;
#define warn_thread_attr_bind_param global_options.x_warn_thread_attr_bind_param
#endif
#ifdef GENERATOR_FILE
extern int warn_thread_mismatched_lock_acq_rel;
#else
  int x_warn_thread_mismatched_lock_acq_rel;
#define warn_thread_mismatched_lock_acq_rel global_options.x_warn_thread_mismatched_lock_acq_rel
#endif
#ifdef GENERATOR_FILE
extern int warn_thread_mismatched_lock_order;
#else
  int x_warn_thread_mismatched_lock_order;
#define warn_thread_mismatched_lock_order global_options.x_warn_thread_mismatched_lock_order
#endif
#ifdef GENERATOR_FILE
extern int warn_thread_reentrant_lock;
#else
  int x_warn_thread_reentrant_lock;
#define warn_thread_reentrant_lock global_options.x_warn_thread_reentrant_lock
#endif
#ifdef GENERATOR_FILE
extern int warn_thread_safety;
#else
  int x_warn_thread_safety;
#define warn_thread_safety global_options.x_warn_thread_safety
#endif
#ifdef GENERATOR_FILE
extern int warn_thread_unguarded_func;
#else
  int x_warn_thread_unguarded_func;
#define warn_thread_unguarded_func global_options.x_warn_thread_unguarded_func
#endif
#ifdef GENERATOR_FILE
extern int warn_thread_unguarded_var;
#else
  int x_warn_thread_unguarded_var;
#define warn_thread_unguarded_var global_options.x_warn_thread_unguarded_var
#endif
#ifdef GENERATOR_FILE
extern int warn_unsupported_lock_name;
#else
  int x_warn_unsupported_lock_name;
#define warn_unsupported_lock_name global_options.x_warn_unsupported_lock_name
#endif
#ifdef GENERATOR_FILE
extern int warn_thread_optimization;
#else
  int x_warn_thread_optimization;
#define warn_thread_optimization global_options.x_warn_thread_optimization
#endif
#ifdef GENERATOR_FILE
extern int warn_traditional;
#else
  int x_warn_traditional;
#define warn_traditional global_options.x_warn_traditional
#endif
#ifdef GENERATOR_FILE
extern int warn_traditional_conversion;
#else
  int x_warn_traditional_conversion;
#define warn_traditional_conversion global_options.x_warn_traditional_conversion
#endif
#ifdef GENERATOR_FILE
extern int warn_trampolines;
#else
  int x_warn_trampolines;
#define warn_trampolines global_options.x_warn_trampolines
#endif
#ifdef GENERATOR_FILE
extern int warn_type_limits;
#else
  int x_warn_type_limits;
#define warn_type_limits global_options.x_warn_type_limits
#endif
#ifdef GENERATOR_FILE
extern int warn_undeclared_selector;
#else
  int x_warn_undeclared_selector;
#define warn_undeclared_selector global_options.x_warn_undeclared_selector
#endif
#ifdef GENERATOR_FILE
extern int warn_uninitialized;
#else
  int x_warn_uninitialized;
#define warn_uninitialized global_options.x_warn_uninitialized
#endif
#ifdef GENERATOR_FILE
extern int warn_unsafe_loop_optimizations;
#else
  int x_warn_unsafe_loop_optimizations;
#define warn_unsafe_loop_optimizations global_options.x_warn_unsafe_loop_optimizations
#endif
#ifdef GENERATOR_FILE
extern int warn_unsuffixed_float_constants;
#else
  int x_warn_unsuffixed_float_constants;
#define warn_unsuffixed_float_constants global_options.x_warn_unsuffixed_float_constants
#endif
#ifdef GENERATOR_FILE
extern int warn_unused;
#else
  int x_warn_unused;
#define warn_unused global_options.x_warn_unused
#endif
#ifdef GENERATOR_FILE
extern int warn_unused_but_set_parameter;
#else
  int x_warn_unused_but_set_parameter;
#define warn_unused_but_set_parameter global_options.x_warn_unused_but_set_parameter
#endif
#ifdef GENERATOR_FILE
extern int warn_unused_but_set_variable;
#else
  int x_warn_unused_but_set_variable;
#define warn_unused_but_set_variable global_options.x_warn_unused_but_set_variable
#endif
#ifdef GENERATOR_FILE
extern int warn_unused_function;
#else
  int x_warn_unused_function;
#define warn_unused_function global_options.x_warn_unused_function
#endif
#ifdef GENERATOR_FILE
extern int warn_unused_label;
#else
  int x_warn_unused_label;
#define warn_unused_label global_options.x_warn_unused_label
#endif
#ifdef GENERATOR_FILE
extern int warn_unused_parameter;
#else
  int x_warn_unused_parameter;
#define warn_unused_parameter global_options.x_warn_unused_parameter
#endif
#ifdef GENERATOR_FILE
extern int warn_unused_result;
#else
  int x_warn_unused_result;
#define warn_unused_result global_options.x_warn_unused_result
#endif
#ifdef GENERATOR_FILE
extern int warn_unused_value;
#else
  int x_warn_unused_value;
#define warn_unused_value global_options.x_warn_unused_value
#endif
#ifdef GENERATOR_FILE
extern int warn_unused_variable;
#else
  int x_warn_unused_variable;
#define warn_unused_variable global_options.x_warn_unused_variable
#endif
#ifdef GENERATOR_FILE
extern int warn_vla;
#else
  int x_warn_vla;
#define warn_vla global_options.x_warn_vla
#endif
#ifdef GENERATOR_FILE
extern int warn_volatile_register_var;
#else
  int x_warn_volatile_register_var;
#define warn_volatile_register_var global_options.x_warn_volatile_register_var
#endif
#ifdef GENERATOR_FILE
extern int warn_write_strings;
#else
  int x_warn_write_strings;
#define warn_write_strings global_options.x_warn_write_strings
#endif
#ifdef GENERATOR_FILE
extern const char *aux_info_file_name;
#else
  const char *x_aux_info_file_name;
#define aux_info_file_name global_options.x_aux_info_file_name
#endif
#ifdef GENERATOR_FILE
extern const char *aux_base_name;
#else
  const char *x_aux_base_name;
#define aux_base_name global_options.x_aux_base_name
#endif
#ifdef GENERATOR_FILE
extern const char *dump_base_name;
#else
  const char *x_dump_base_name;
#define dump_base_name global_options.x_dump_base_name
#endif
#ifdef GENERATOR_FILE
extern const char *dump_dir_name;
#else
  const char *x_dump_dir_name;
#define dump_dir_name global_options.x_dump_dir_name
#endif
#ifdef GENERATOR_FILE
extern int flag_pic;
#else
  int x_flag_pic;
#define flag_pic global_options.x_flag_pic
#endif
#ifdef GENERATOR_FILE
extern int flag_pie;
#else
  int x_flag_pie;
#define flag_pie global_options.x_flag_pie
#endif
#ifdef GENERATOR_FILE
extern int flag_abi_version;
#else
  int x_flag_abi_version;
#define flag_abi_version global_options.x_flag_abi_version
#endif
#ifdef GENERATOR_FILE
extern int flag_access_control;
#else
  int x_flag_access_control;
#define flag_access_control global_options.x_flag_access_control
#endif
#ifdef GENERATOR_FILE
extern int align_functions;
#else
  int x_align_functions;
#define align_functions global_options.x_align_functions
#endif
#ifdef GENERATOR_FILE
extern int align_jumps;
#else
  int x_align_jumps;
#define align_jumps global_options.x_align_jumps
#endif
#ifdef GENERATOR_FILE
extern int align_labels;
#else
  int x_align_labels;
#define align_labels global_options.x_align_labels
#endif
#ifdef GENERATOR_FILE
extern int align_loops;
#else
  int x_align_loops;
#define align_loops global_options.x_align_loops
#endif
#ifdef GENERATOR_FILE
extern int flag_no_asm;
#else
  int x_flag_no_asm;
#define flag_no_asm global_options.x_flag_no_asm
#endif
#ifdef GENERATOR_FILE
extern int flag_assert;
#else
  int x_flag_assert;
#define flag_assert global_options.x_flag_assert
#endif
#ifdef GENERATOR_FILE
extern int flag_associative_math;
#else
  int x_flag_associative_math;
#define flag_associative_math global_options.x_flag_associative_math
#endif
#ifdef GENERATOR_FILE
extern int flag_asynchronous_unwind_tables;
#else
  int x_flag_asynchronous_unwind_tables;
#define flag_asynchronous_unwind_tables global_options.x_flag_asynchronous_unwind_tables
#endif
#ifdef GENERATOR_FILE
extern int flag_auto_inc_dec;
#else
  int x_flag_auto_inc_dec;
#define flag_auto_inc_dec global_options.x_flag_auto_inc_dec
#endif
#ifdef GENERATOR_FILE
extern int flag_bootstrap_classes;
#else
  int x_flag_bootstrap_classes;
#define flag_bootstrap_classes global_options.x_flag_bootstrap_classes
#endif
#ifdef GENERATOR_FILE
extern int flag_bounds_check;
#else
  int x_flag_bounds_check;
#define flag_bounds_check global_options.x_flag_bounds_check
#endif
#ifdef GENERATOR_FILE
extern int flag_branch_on_count_reg;
#else
  int x_flag_branch_on_count_reg;
#define flag_branch_on_count_reg global_options.x_flag_branch_on_count_reg
#endif
#ifdef GENERATOR_FILE
extern int flag_branch_probabilities;
#else
  int x_flag_branch_probabilities;
#define flag_branch_probabilities global_options.x_flag_branch_probabilities
#endif
#ifdef GENERATOR_FILE
extern int flag_branch_target_load_optimize;
#else
  int x_flag_branch_target_load_optimize;
#define flag_branch_target_load_optimize global_options.x_flag_branch_target_load_optimize
#endif
#ifdef GENERATOR_FILE
extern int flag_branch_target_load_optimize2;
#else
  int x_flag_branch_target_load_optimize2;
#define flag_branch_target_load_optimize2 global_options.x_flag_branch_target_load_optimize2
#endif
#ifdef GENERATOR_FILE
extern int flag_btr_bb_exclusive;
#else
  int x_flag_btr_bb_exclusive;
#define flag_btr_bb_exclusive global_options.x_flag_btr_bb_exclusive
#endif
#ifdef GENERATOR_FILE
extern int flag_no_builtin;
#else
  int x_flag_no_builtin;
#define flag_no_builtin global_options.x_flag_no_builtin
#endif
#ifdef GENERATOR_FILE
extern void *common_deferred_options;
#else
  void *x_common_deferred_options;
#define common_deferred_options global_options.x_common_deferred_options
#endif
#ifdef GENERATOR_FILE
extern int flag_caller_saves;
#else
  int x_flag_caller_saves;
#define flag_caller_saves global_options.x_flag_caller_saves
#endif
#ifdef GENERATOR_FILE
extern int flag_callgraph_profiles_sections;
#else
  int x_flag_callgraph_profiles_sections;
#define flag_callgraph_profiles_sections global_options.x_flag_callgraph_profiles_sections
#endif
#ifdef GENERATOR_FILE
extern int flag_check_data_deps;
#else
  int x_flag_check_data_deps;
#define flag_check_data_deps global_options.x_flag_check_data_deps
#endif
#ifdef GENERATOR_FILE
extern int flag_check_new;
#else
  int x_flag_check_new;
#define flag_check_new global_options.x_flag_check_new
#endif
#ifdef GENERATOR_FILE
extern int flag_check_references;
#else
  int x_flag_check_references;
#define flag_check_references global_options.x_flag_check_references
#endif
#ifdef GENERATOR_FILE
extern int flag_clone_hot_version_paths;
#else
  int x_flag_clone_hot_version_paths;
#define flag_clone_hot_version_paths global_options.x_flag_clone_hot_version_paths
#endif
#ifdef GENERATOR_FILE
extern int flag_combine_stack_adjustments;
#else
  int x_flag_combine_stack_adjustments;
#define flag_combine_stack_adjustments global_options.x_flag_combine_stack_adjustments
#endif
#ifdef GENERATOR_FILE
extern int flag_no_common;
#else
  int x_flag_no_common;
#define flag_no_common global_options.x_flag_no_common
#endif
#ifdef GENERATOR_FILE
extern int flag_compare_debug;
#else
  int x_flag_compare_debug;
#define flag_compare_debug global_options.x_flag_compare_debug
#endif
#ifdef GENERATOR_FILE
extern const char *flag_compare_debug_opt;
#else
  const char *x_flag_compare_debug_opt;
#define flag_compare_debug_opt global_options.x_flag_compare_debug_opt
#endif
#ifdef GENERATOR_FILE
extern int flag_compare_elim_after_reload;
#else
  int x_flag_compare_elim_after_reload;
#define flag_compare_elim_after_reload global_options.x_flag_compare_elim_after_reload
#endif
#ifdef GENERATOR_FILE
extern int flag_conserve_space;
#else
  int x_flag_conserve_space;
#define flag_conserve_space global_options.x_flag_conserve_space
#endif
#ifdef GENERATOR_FILE
extern int flag_conserve_stack;
#else
  int x_flag_conserve_stack;
#define flag_conserve_stack global_options.x_flag_conserve_stack
#endif
#ifdef GENERATOR_FILE
extern int max_constexpr_depth;
#else
  int x_max_constexpr_depth;
#define max_constexpr_depth global_options.x_max_constexpr_depth
#endif
#ifdef GENERATOR_FILE
extern int flag_cprop_registers;
#else
  int x_flag_cprop_registers;
#define flag_cprop_registers global_options.x_flag_cprop_registers
#endif
#ifdef GENERATOR_FILE
extern int flag_crossjumping;
#else
  int x_flag_crossjumping;
#define flag_crossjumping global_options.x_flag_crossjumping
#endif
#ifdef GENERATOR_FILE
extern int flag_cse_follow_jumps;
#else
  int x_flag_cse_follow_jumps;
#define flag_cse_follow_jumps global_options.x_flag_cse_follow_jumps
#endif
#ifdef GENERATOR_FILE
extern int flag_cx_fortran_rules;
#else
  int x_flag_cx_fortran_rules;
#define flag_cx_fortran_rules global_options.x_flag_cx_fortran_rules
#endif
#ifdef GENERATOR_FILE
extern int flag_cx_limited_range;
#else
  int x_flag_cx_limited_range;
#define flag_cx_limited_range global_options.x_flag_cx_limited_range
#endif
#ifdef GENERATOR_FILE
extern int flag_data_sections;
#else
  int x_flag_data_sections;
#define flag_data_sections global_options.x_flag_data_sections
#endif
#ifdef GENERATOR_FILE
extern int flag_dce;
#else
  int x_flag_dce;
#define flag_dce global_options.x_flag_dce
#endif
#ifdef GENERATOR_FILE
extern int flag_deduce_init_list;
#else
  int x_flag_deduce_init_list;
#define flag_deduce_init_list global_options.x_flag_deduce_init_list
#endif
#ifdef GENERATOR_FILE
extern int flag_defer_pop;
#else
  int x_flag_defer_pop;
#define flag_defer_pop global_options.x_flag_defer_pop
#endif
#ifdef GENERATOR_FILE
extern int flag_delayed_branch;
#else
  int x_flag_delayed_branch;
#define flag_delayed_branch global_options.x_flag_delayed_branch
#endif
#ifdef GENERATOR_FILE
extern int flag_delete_null_pointer_checks;
#else
  int x_flag_delete_null_pointer_checks;
#define flag_delete_null_pointer_checks global_options.x_flag_delete_null_pointer_checks
#endif
#ifdef GENERATOR_FILE
extern int flag_devirtualize;
#else
  int x_flag_devirtualize;
#define flag_devirtualize global_options.x_flag_devirtualize
#endif
#ifdef GENERATOR_FILE
extern int flag_diagnostics_show_option;
#else
  int x_flag_diagnostics_show_option;
#define flag_diagnostics_show_option global_options.x_flag_diagnostics_show_option
#endif
#ifdef GENERATOR_FILE
extern int flag_dse;
#else
  int x_flag_dse;
#define flag_dse global_options.x_flag_dse
#endif
#ifdef GENERATOR_FILE
extern const char *flag_dump_final_insns;
#else
  const char *x_flag_dump_final_insns;
#define flag_dump_final_insns global_options.x_flag_dump_final_insns
#endif
#ifdef GENERATOR_FILE
extern const char *flag_dump_go_spec;
#else
  const char *x_flag_dump_go_spec;
#define flag_dump_go_spec global_options.x_flag_dump_go_spec
#endif
#ifdef GENERATOR_FILE
extern int flag_dump_noaddr;
#else
  int x_flag_dump_noaddr;
#define flag_dump_noaddr global_options.x_flag_dump_noaddr
#endif
#ifdef GENERATOR_FILE
extern int flag_dump_passes;
#else
  int x_flag_dump_passes;
#define flag_dump_passes global_options.x_flag_dump_passes
#endif
#ifdef GENERATOR_FILE
extern int flag_dump_unnumbered;
#else
  int x_flag_dump_unnumbered;
#define flag_dump_unnumbered global_options.x_flag_dump_unnumbered
#endif
#ifdef GENERATOR_FILE
extern int flag_dump_unnumbered_links;
#else
  int x_flag_dump_unnumbered_links;
#define flag_dump_unnumbered_links global_options.x_flag_dump_unnumbered_links
#endif
#ifdef GENERATOR_FILE
extern int flag_dwarf2_cfi_asm;
#else
  int x_flag_dwarf2_cfi_asm;
#define flag_dwarf2_cfi_asm global_options.x_flag_dwarf2_cfi_asm
#endif
#ifdef GENERATOR_FILE
extern int flag_early_inlining;
#else
  int x_flag_early_inlining;
#define flag_early_inlining global_options.x_flag_early_inlining
#endif
#ifdef GENERATOR_FILE
extern int flag_elide_constructors;
#else
  int x_flag_elide_constructors;
#define flag_elide_constructors global_options.x_flag_elide_constructors
#endif
#ifdef GENERATOR_FILE
extern int flag_eliminate_dwarf2_dups;
#else
  int x_flag_eliminate_dwarf2_dups;
#define flag_eliminate_dwarf2_dups global_options.x_flag_eliminate_dwarf2_dups
#endif
#ifdef GENERATOR_FILE
extern int flag_debug_only_used_symbols;
#else
  int x_flag_debug_only_used_symbols;
#define flag_debug_only_used_symbols global_options.x_flag_debug_only_used_symbols
#endif
#ifdef GENERATOR_FILE
extern int flag_eliminate_unused_debug_types;
#else
  int x_flag_eliminate_unused_debug_types;
#define flag_eliminate_unused_debug_types global_options.x_flag_eliminate_unused_debug_types
#endif
#ifdef GENERATOR_FILE
extern int flag_emit_class_debug_always;
#else
  int x_flag_emit_class_debug_always;
#define flag_emit_class_debug_always global_options.x_flag_emit_class_debug_always
#endif
#ifdef GENERATOR_FILE
extern int flag_emit_class_files;
#else
  int x_flag_emit_class_files;
#define flag_emit_class_files global_options.x_flag_emit_class_files
#endif
#ifdef GENERATOR_FILE
extern int flag_enable_icf_debug;
#else
  int x_flag_enable_icf_debug;
#define flag_enable_icf_debug global_options.x_flag_enable_icf_debug
#endif
#ifdef GENERATOR_FILE
extern int flag_enforce_eh_specs;
#else
  int x_flag_enforce_eh_specs;
#define flag_enforce_eh_specs global_options.x_flag_enforce_eh_specs
#endif
#ifdef GENERATOR_FILE
extern int flag_exceptions;
#else
  int x_flag_exceptions;
#define flag_exceptions global_options.x_flag_exceptions
#endif
#ifdef GENERATOR_FILE
extern enum excess_precision flag_excess_precision_cmdline;
#else
  enum excess_precision x_flag_excess_precision_cmdline;
#define flag_excess_precision_cmdline global_options.x_flag_excess_precision_cmdline
#endif
#ifdef GENERATOR_FILE
extern int flag_expensive_optimizations;
#else
  int x_flag_expensive_optimizations;
#define flag_expensive_optimizations global_options.x_flag_expensive_optimizations
#endif
#ifdef GENERATOR_FILE
extern int flag_filelist_file;
#else
  int x_flag_filelist_file;
#define flag_filelist_file global_options.x_flag_filelist_file
#endif
#ifdef GENERATOR_FILE
extern int flag_finite_math_only;
#else
  int x_flag_finite_math_only;
#define flag_finite_math_only global_options.x_flag_finite_math_only
#endif
#ifdef GENERATOR_FILE
extern int flag_float_store;
#else
  int x_flag_float_store;
#define flag_float_store global_options.x_flag_float_store
#endif
#ifdef GENERATOR_FILE
extern int flag_new_for_scope;
#else
  int x_flag_new_for_scope;
#define flag_new_for_scope global_options.x_flag_new_for_scope
#endif
#ifdef GENERATOR_FILE
extern int flag_force_classes_archive_check;
#else
  int x_flag_force_classes_archive_check;
#define flag_force_classes_archive_check global_options.x_flag_force_classes_archive_check
#endif
#ifdef GENERATOR_FILE
extern int flag_forward_propagate;
#else
  int x_flag_forward_propagate;
#define flag_forward_propagate global_options.x_flag_forward_propagate
#endif
#ifdef GENERATOR_FILE
extern enum fp_contract_mode flag_fp_contract_mode;
#else
  enum fp_contract_mode x_flag_fp_contract_mode;
#define flag_fp_contract_mode global_options.x_flag_fp_contract_mode
#endif
#ifdef GENERATOR_FILE
extern int flag_friend_injection;
#else
  int x_flag_friend_injection;
#define flag_friend_injection global_options.x_flag_friend_injection
#endif
#ifdef GENERATOR_FILE
extern int flag_no_function_cse;
#else
  int x_flag_no_function_cse;
#define flag_no_function_cse global_options.x_flag_no_function_cse
#endif
#ifdef GENERATOR_FILE
extern int flag_function_sections;
#else
  int x_flag_function_sections;
#define flag_function_sections global_options.x_flag_function_sections
#endif
#ifdef GENERATOR_FILE
extern int flag_gcse;
#else
  int x_flag_gcse;
#define flag_gcse global_options.x_flag_gcse
#endif
#ifdef GENERATOR_FILE
extern int flag_gcse_after_reload;
#else
  int x_flag_gcse_after_reload;
#define flag_gcse_after_reload global_options.x_flag_gcse_after_reload
#endif
#ifdef GENERATOR_FILE
extern int flag_gcse_las;
#else
  int x_flag_gcse_las;
#define flag_gcse_las global_options.x_flag_gcse_las
#endif
#ifdef GENERATOR_FILE
extern int flag_gcse_lm;
#else
  int x_flag_gcse_lm;
#define flag_gcse_lm global_options.x_flag_gcse_lm
#endif
#ifdef GENERATOR_FILE
extern int flag_gcse_sm;
#else
  int x_flag_gcse_sm;
#define flag_gcse_sm global_options.x_flag_gcse_sm
#endif
#ifdef GENERATOR_FILE
extern int flag_no_gnu_keywords;
#else
  int x_flag_no_gnu_keywords;
#define flag_no_gnu_keywords global_options.x_flag_no_gnu_keywords
#endif
#ifdef GENERATOR_FILE
extern int flag_gnu89_inline;
#else
  int x_flag_gnu89_inline;
#define flag_gnu89_inline global_options.x_flag_gnu89_inline
#endif
#ifdef GENERATOR_FILE
extern int flag_graphite;
#else
  int x_flag_graphite;
#define flag_graphite global_options.x_flag_graphite
#endif
#ifdef GENERATOR_FILE
extern int flag_graphite_identity;
#else
  int x_flag_graphite_identity;
#define flag_graphite_identity global_options.x_flag_graphite_identity
#endif
#ifdef GENERATOR_FILE
extern int flag_guess_branch_prob;
#else
  int x_flag_guess_branch_prob;
#define flag_guess_branch_prob global_options.x_flag_guess_branch_prob
#endif
#ifdef GENERATOR_FILE
extern int flag_hash_synchronization;
#else
  int x_flag_hash_synchronization;
#define flag_hash_synchronization global_options.x_flag_hash_synchronization
#endif
#ifdef GENERATOR_FILE
extern int flag_no_ident;
#else
  int x_flag_no_ident;
#define flag_no_ident global_options.x_flag_no_ident
#endif
#ifdef GENERATOR_FILE
extern int flag_if_conversion;
#else
  int x_flag_if_conversion;
#define flag_if_conversion global_options.x_flag_if_conversion
#endif
#ifdef GENERATOR_FILE
extern int flag_if_conversion2;
#else
  int x_flag_if_conversion2;
#define flag_if_conversion2 global_options.x_flag_if_conversion2
#endif
#ifdef GENERATOR_FILE
extern int flag_implement_inlines;
#else
  int x_flag_implement_inlines;
#define flag_implement_inlines global_options.x_flag_implement_inlines
#endif
#ifdef GENERATOR_FILE
extern int flag_implicit_inline_templates;
#else
  int x_flag_implicit_inline_templates;
#define flag_implicit_inline_templates global_options.x_flag_implicit_inline_templates
#endif
#ifdef GENERATOR_FILE
extern int flag_implicit_templates;
#else
  int x_flag_implicit_templates;
#define flag_implicit_templates global_options.x_flag_implicit_templates
#endif
#ifdef GENERATOR_FILE
extern int flag_indirect_classes;
#else
  int x_flag_indirect_classes;
#define flag_indirect_classes global_options.x_flag_indirect_classes
#endif
#ifdef GENERATOR_FILE
extern int flag_indirect_dispatch;
#else
  int x_flag_indirect_dispatch;
#define flag_indirect_dispatch global_options.x_flag_indirect_dispatch
#endif
#ifdef GENERATOR_FILE
extern int flag_indirect_inlining;
#else
  int x_flag_indirect_inlining;
#define flag_indirect_inlining global_options.x_flag_indirect_inlining
#endif
#ifdef GENERATOR_FILE
extern int flag_inhibit_size_directive;
#else
  int x_flag_inhibit_size_directive;
#define flag_inhibit_size_directive global_options.x_flag_inhibit_size_directive
#endif
#ifdef GENERATOR_FILE
extern int flag_no_inline;
#else
  int x_flag_no_inline;
#define flag_no_inline global_options.x_flag_no_inline
#endif
#ifdef GENERATOR_FILE
extern int flag_inline_functions;
#else
  int x_flag_inline_functions;
#define flag_inline_functions global_options.x_flag_inline_functions
#endif
#ifdef GENERATOR_FILE
extern int flag_inline_functions_called_once;
#else
  int x_flag_inline_functions_called_once;
#define flag_inline_functions_called_once global_options.x_flag_inline_functions_called_once
#endif
#ifdef GENERATOR_FILE
extern int flag_inline_hot_caller;
#else
  int x_flag_inline_hot_caller;
#define flag_inline_hot_caller global_options.x_flag_inline_hot_caller
#endif
#ifdef GENERATOR_FILE
extern int flag_inline_small_functions;
#else
  int x_flag_inline_small_functions;
#define flag_inline_small_functions global_options.x_flag_inline_small_functions
#endif
#ifdef GENERATOR_FILE
extern int flag_instrument_function_entry_exit;
#else
  int x_flag_instrument_function_entry_exit;
#define flag_instrument_function_entry_exit global_options.x_flag_instrument_function_entry_exit
#endif
#ifdef GENERATOR_FILE
extern int flag_ipa_cp;
#else
  int x_flag_ipa_cp;
#define flag_ipa_cp global_options.x_flag_ipa_cp
#endif
#ifdef GENERATOR_FILE
extern int flag_ipa_cp_clone;
#else
  int x_flag_ipa_cp_clone;
#define flag_ipa_cp_clone global_options.x_flag_ipa_cp_clone
#endif
#ifdef GENERATOR_FILE
extern int flag_ipa_matrix_reorg;
#else
  int x_flag_ipa_matrix_reorg;
#define flag_ipa_matrix_reorg global_options.x_flag_ipa_matrix_reorg
#endif
#ifdef GENERATOR_FILE
extern int flag_ipa_profile;
#else
  int x_flag_ipa_profile;
#define flag_ipa_profile global_options.x_flag_ipa_profile
#endif
#ifdef GENERATOR_FILE
extern int flag_ipa_pta;
#else
  int x_flag_ipa_pta;
#define flag_ipa_pta global_options.x_flag_ipa_pta
#endif
#ifdef GENERATOR_FILE
extern int flag_ipa_pure_const;
#else
  int x_flag_ipa_pure_const;
#define flag_ipa_pure_const global_options.x_flag_ipa_pure_const
#endif
#ifdef GENERATOR_FILE
extern int flag_ipa_reference;
#else
  int x_flag_ipa_reference;
#define flag_ipa_reference global_options.x_flag_ipa_reference
#endif
#ifdef GENERATOR_FILE
extern int flag_ipa_sra;
#else
  int x_flag_ipa_sra;
#define flag_ipa_sra global_options.x_flag_ipa_sra
#endif
#ifdef GENERATOR_FILE
extern int flag_ipa_struct_reorg;
#else
  int x_flag_ipa_struct_reorg;
#define flag_ipa_struct_reorg global_options.x_flag_ipa_struct_reorg
#endif
#ifdef GENERATOR_FILE
extern enum ira_algorithm flag_ira_algorithm;
#else
  enum ira_algorithm x_flag_ira_algorithm;
#define flag_ira_algorithm global_options.x_flag_ira_algorithm
#endif
#ifdef GENERATOR_FILE
extern int flag_ira_loop_pressure;
#else
  int x_flag_ira_loop_pressure;
#define flag_ira_loop_pressure global_options.x_flag_ira_loop_pressure
#endif
#ifdef GENERATOR_FILE
extern enum ira_region flag_ira_region;
#else
  enum ira_region x_flag_ira_region;
#define flag_ira_region global_options.x_flag_ira_region
#endif
#ifdef GENERATOR_FILE
extern int flag_ira_share_save_slots;
#else
  int x_flag_ira_share_save_slots;
#define flag_ira_share_save_slots global_options.x_flag_ira_share_save_slots
#endif
#ifdef GENERATOR_FILE
extern int flag_ira_share_spill_slots;
#else
  int x_flag_ira_share_spill_slots;
#define flag_ira_share_spill_slots global_options.x_flag_ira_share_spill_slots
#endif
#ifdef GENERATOR_FILE
extern int flag_ira_verbose;
#else
  int x_flag_ira_verbose;
#define flag_ira_verbose global_options.x_flag_ira_verbose
#endif
#ifdef GENERATOR_FILE
extern int flag_ivopts;
#else
  int x_flag_ivopts;
#define flag_ivopts global_options.x_flag_ivopts
#endif
#ifdef GENERATOR_FILE
extern int flag_jni;
#else
  int x_flag_jni;
#define flag_jni global_options.x_flag_jni
#endif
#ifdef GENERATOR_FILE
extern int flag_jump_tables;
#else
  int x_flag_jump_tables;
#define flag_jump_tables global_options.x_flag_jump_tables
#endif
#ifdef GENERATOR_FILE
extern int flag_keep_inline_dllexport;
#else
  int x_flag_keep_inline_dllexport;
#define flag_keep_inline_dllexport global_options.x_flag_keep_inline_dllexport
#endif
#ifdef GENERATOR_FILE
extern int flag_keep_inline_functions;
#else
  int x_flag_keep_inline_functions;
#define flag_keep_inline_functions global_options.x_flag_keep_inline_functions
#endif
#ifdef GENERATOR_FILE
extern int flag_keep_static_consts;
#else
  int x_flag_keep_static_consts;
#define flag_keep_static_consts global_options.x_flag_keep_static_consts
#endif
#ifdef GENERATOR_FILE
extern int flag_lax_vector_conversions;
#else
  int x_flag_lax_vector_conversions;
#define flag_lax_vector_conversions global_options.x_flag_lax_vector_conversions
#endif
#ifdef GENERATOR_FILE
extern int flag_leading_underscore;
#else
  int x_flag_leading_underscore;
#define flag_leading_underscore global_options.x_flag_leading_underscore
#endif
#ifdef GENERATOR_FILE
extern int flag_loop_block;
#else
  int x_flag_loop_block;
#define flag_loop_block global_options.x_flag_loop_block
#endif
#ifdef GENERATOR_FILE
extern int flag_loop_flatten;
#else
  int x_flag_loop_flatten;
#define flag_loop_flatten global_options.x_flag_loop_flatten
#endif
#ifdef GENERATOR_FILE
extern int flag_loop_interchange;
#else
  int x_flag_loop_interchange;
#define flag_loop_interchange global_options.x_flag_loop_interchange
#endif
#ifdef GENERATOR_FILE
extern int flag_loop_parallelize_all;
#else
  int x_flag_loop_parallelize_all;
#define flag_loop_parallelize_all global_options.x_flag_loop_parallelize_all
#endif
#ifdef GENERATOR_FILE
extern int flag_loop_strip_mine;
#else
  int x_flag_loop_strip_mine;
#define flag_loop_strip_mine global_options.x_flag_loop_strip_mine
#endif
#ifdef GENERATOR_FILE
extern int flag_lto_compression_level;
#else
  int x_flag_lto_compression_level;
#define flag_lto_compression_level global_options.x_flag_lto_compression_level
#endif
#ifdef GENERATOR_FILE
extern int flag_lto_partition_1to1;
#else
  int x_flag_lto_partition_1to1;
#define flag_lto_partition_1to1 global_options.x_flag_lto_partition_1to1
#endif
#ifdef GENERATOR_FILE
extern int flag_lto_partition_balanced;
#else
  int x_flag_lto_partition_balanced;
#define flag_lto_partition_balanced global_options.x_flag_lto_partition_balanced
#endif
#ifdef GENERATOR_FILE
extern int flag_lto_partition_none;
#else
  int x_flag_lto_partition_none;
#define flag_lto_partition_none global_options.x_flag_lto_partition_none
#endif
#ifdef GENERATOR_FILE
extern int flag_lto_report;
#else
  int x_flag_lto_report;
#define flag_lto_report global_options.x_flag_lto_report
#endif
#ifdef GENERATOR_FILE
extern const char *flag_lto;
#else
  const char *x_flag_lto;
#define flag_lto global_options.x_flag_lto
#endif
#ifdef GENERATOR_FILE
extern int flag_ltrans;
#else
  int x_flag_ltrans;
#define flag_ltrans global_options.x_flag_ltrans
#endif
#ifdef GENERATOR_FILE
extern const char *ltrans_output_list;
#else
  const char *x_ltrans_output_list;
#define ltrans_output_list global_options.x_ltrans_output_list
#endif
#ifdef GENERATOR_FILE
extern int flag_errno_math;
#else
  int x_flag_errno_math;
#define flag_errno_math global_options.x_flag_errno_math
#endif
#ifdef GENERATOR_FILE
extern int flag_max_errors;
#else
  int x_flag_max_errors;
#define flag_max_errors global_options.x_flag_max_errors
#endif
#ifdef GENERATOR_FILE
extern int mem_report;
#else
  int x_mem_report;
#define mem_report global_options.x_mem_report
#endif
#ifdef GENERATOR_FILE
extern int flag_merge_constants;
#else
  int x_flag_merge_constants;
#define flag_merge_constants global_options.x_flag_merge_constants
#endif
#ifdef GENERATOR_FILE
extern int flag_merge_debug_strings;
#else
  int x_flag_merge_debug_strings;
#define flag_merge_debug_strings global_options.x_flag_merge_debug_strings
#endif
#ifdef GENERATOR_FILE
extern int flag_modulo_sched;
#else
  int x_flag_modulo_sched;
#define flag_modulo_sched global_options.x_flag_modulo_sched
#endif
#ifdef GENERATOR_FILE
extern int flag_modulo_sched_allow_regmoves;
#else
  int x_flag_modulo_sched_allow_regmoves;
#define flag_modulo_sched_allow_regmoves global_options.x_flag_modulo_sched_allow_regmoves
#endif
#ifdef GENERATOR_FILE
extern int flag_move_loop_invariants;
#else
  int x_flag_move_loop_invariants;
#define flag_move_loop_invariants global_options.x_flag_move_loop_invariants
#endif
#ifdef GENERATOR_FILE
extern int flag_ms_extensions;
#else
  int x_flag_ms_extensions;
#define flag_ms_extensions global_options.x_flag_ms_extensions
#endif
#ifdef GENERATOR_FILE
extern int flag_mudflap;
#else
  int x_flag_mudflap;
#define flag_mudflap global_options.x_flag_mudflap
#endif
#ifdef GENERATOR_FILE
extern int flag_mudflap_ignore_reads;
#else
  int x_flag_mudflap_ignore_reads;
#define flag_mudflap_ignore_reads global_options.x_flag_mudflap_ignore_reads
#endif
#ifdef GENERATOR_FILE
extern int flag_nil_receivers;
#else
  int x_flag_nil_receivers;
#define flag_nil_receivers global_options.x_flag_nil_receivers
#endif
#ifdef GENERATOR_FILE
extern int flag_non_call_exceptions;
#else
  int x_flag_non_call_exceptions;
#define flag_non_call_exceptions global_options.x_flag_non_call_exceptions
#endif
#ifdef GENERATOR_FILE
extern int flag_no_nonansi_builtin;
#else
  int x_flag_no_nonansi_builtin;
#define flag_no_nonansi_builtin global_options.x_flag_no_nonansi_builtin
#endif
#ifdef GENERATOR_FILE
extern int flag_nothrow_opt;
#else
  int x_flag_nothrow_opt;
#define flag_nothrow_opt global_options.x_flag_nothrow_opt
#endif
#ifdef GENERATOR_FILE
extern int flag_objc_abi;
#else
  int x_flag_objc_abi;
#define flag_objc_abi global_options.x_flag_objc_abi
#endif
#ifdef GENERATOR_FILE
extern int flag_objc_call_cxx_cdtors;
#else
  int x_flag_objc_call_cxx_cdtors;
#define flag_objc_call_cxx_cdtors global_options.x_flag_objc_call_cxx_cdtors
#endif
#ifdef GENERATOR_FILE
extern int flag_objc_direct_dispatch;
#else
  int x_flag_objc_direct_dispatch;
#define flag_objc_direct_dispatch global_options.x_flag_objc_direct_dispatch
#endif
#ifdef GENERATOR_FILE
extern int flag_objc_exceptions;
#else
  int x_flag_objc_exceptions;
#define flag_objc_exceptions global_options.x_flag_objc_exceptions
#endif
#ifdef GENERATOR_FILE
extern int flag_objc_gc;
#else
  int x_flag_objc_gc;
#define flag_objc_gc global_options.x_flag_objc_gc
#endif
#ifdef GENERATOR_FILE
extern int flag_objc_nilcheck;
#else
  int x_flag_objc_nilcheck;
#define flag_objc_nilcheck global_options.x_flag_objc_nilcheck
#endif
#ifdef GENERATOR_FILE
extern int flag_objc_sjlj_exceptions;
#else
  int x_flag_objc_sjlj_exceptions;
#define flag_objc_sjlj_exceptions global_options.x_flag_objc_sjlj_exceptions
#endif
#ifdef GENERATOR_FILE
extern int flag_objc1_only;
#else
  int x_flag_objc1_only;
#define flag_objc1_only global_options.x_flag_objc1_only
#endif
#ifdef GENERATOR_FILE
extern int flag_omit_frame_pointer;
#else
  int x_flag_omit_frame_pointer;
#define flag_omit_frame_pointer global_options.x_flag_omit_frame_pointer
#endif
#ifdef GENERATOR_FILE
extern int flag_openmp;
#else
  int x_flag_openmp;
#define flag_openmp global_options.x_flag_openmp
#endif
#ifdef GENERATOR_FILE
extern int flag_opt_info;
#else
  int x_flag_opt_info;
#define flag_opt_info global_options.x_flag_opt_info
#endif
#ifdef GENERATOR_FILE
extern int flag_optimize_locality;
#else
  int x_flag_optimize_locality;
#define flag_optimize_locality global_options.x_flag_optimize_locality
#endif
#ifdef GENERATOR_FILE
extern int flag_regmove;
#else
  int x_flag_regmove;
#define flag_regmove global_options.x_flag_regmove
#endif
#ifdef GENERATOR_FILE
extern int flag_optimize_sibling_calls;
#else
  int x_flag_optimize_sibling_calls;
#define flag_optimize_sibling_calls global_options.x_flag_optimize_sibling_calls
#endif
#ifdef GENERATOR_FILE
extern int flag_optimize_sci;
#else
  int x_flag_optimize_sci;
#define flag_optimize_sci global_options.x_flag_optimize_sci
#endif
#ifdef GENERATOR_FILE
extern int flag_pack_struct;
#else
  int x_flag_pack_struct;
#define flag_pack_struct global_options.x_flag_pack_struct
#endif
#ifdef GENERATOR_FILE
extern int flag_partial_inlining;
#else
  int x_flag_partial_inlining;
#define flag_partial_inlining global_options.x_flag_partial_inlining
#endif
#ifdef GENERATOR_FILE
extern int flag_pcc_struct_return;
#else
  int x_flag_pcc_struct_return;
#define flag_pcc_struct_return global_options.x_flag_pcc_struct_return
#endif
#ifdef GENERATOR_FILE
extern int flag_peel_loops;
#else
  int x_flag_peel_loops;
#define flag_peel_loops global_options.x_flag_peel_loops
#endif
#ifdef GENERATOR_FILE
extern int flag_no_peephole;
#else
  int x_flag_no_peephole;
#define flag_no_peephole global_options.x_flag_no_peephole
#endif
#ifdef GENERATOR_FILE
extern int flag_peephole2;
#else
  int x_flag_peephole2;
#define flag_peephole2 global_options.x_flag_peephole2
#endif
#ifdef GENERATOR_FILE
extern int flag_plan9_extensions;
#else
  int x_flag_plan9_extensions;
#define flag_plan9_extensions global_options.x_flag_plan9_extensions
#endif
#ifdef GENERATOR_FILE
extern const char *flag_pmu_profile_generate;
#else
  const char *x_flag_pmu_profile_generate;
#define flag_pmu_profile_generate global_options.x_flag_pmu_profile_generate
#endif
#ifdef GENERATOR_FILE
extern const char *flag_pmu_profile_use;
#else
  const char *x_flag_pmu_profile_use;
#define flag_pmu_profile_use global_options.x_flag_pmu_profile_use
#endif
#ifdef GENERATOR_FILE
extern int post_ipa_mem_report;
#else
  int x_post_ipa_mem_report;
#define post_ipa_mem_report global_options.x_post_ipa_mem_report
#endif
#ifdef GENERATOR_FILE
extern int pre_ipa_mem_report;
#else
  int x_pre_ipa_mem_report;
#define pre_ipa_mem_report global_options.x_pre_ipa_mem_report
#endif
#ifdef GENERATOR_FILE
extern int flag_predictive_commoning;
#else
  int x_flag_predictive_commoning;
#define flag_predictive_commoning global_options.x_flag_predictive_commoning
#endif
#ifdef GENERATOR_FILE
extern int flag_prefetch_loop_arrays;
#else
  int x_flag_prefetch_loop_arrays;
#define flag_prefetch_loop_arrays global_options.x_flag_prefetch_loop_arrays
#endif
#ifdef GENERATOR_FILE
extern int flag_pretty_templates;
#else
  int x_flag_pretty_templates;
#define flag_pretty_templates global_options.x_flag_pretty_templates
#endif
#ifdef GENERATOR_FILE
extern int profile_flag;
#else
  int x_profile_flag;
#define profile_flag global_options.x_profile_flag
#endif
#ifdef GENERATOR_FILE
extern int profile_arc_flag;
#else
  int x_profile_arc_flag;
#define profile_arc_flag global_options.x_profile_arc_flag
#endif
#ifdef GENERATOR_FILE
extern int flag_profile_correction;
#else
  int x_flag_profile_correction;
#define flag_profile_correction global_options.x_flag_profile_correction
#endif
#ifdef GENERATOR_FILE
extern const char *profile_data_prefix;
#else
  const char *x_profile_data_prefix;
#define profile_data_prefix global_options.x_profile_data_prefix
#endif
#ifdef GENERATOR_FILE
extern int flag_profile_dump;
#else
  int x_flag_profile_dump;
#define flag_profile_dump global_options.x_flag_profile_dump
#endif
#ifdef GENERATOR_FILE
extern int flag_profile_generate_sampling;
#else
  int x_flag_profile_generate_sampling;
#define flag_profile_generate_sampling global_options.x_flag_profile_generate_sampling
#endif
#ifdef GENERATOR_FILE
extern int flag_profile_reusedist;
#else
  int x_flag_profile_reusedist;
#define flag_profile_reusedist global_options.x_flag_profile_reusedist
#endif
#ifdef GENERATOR_FILE
extern int flag_profile_use;
#else
  int x_flag_profile_use;
#define flag_profile_use global_options.x_flag_profile_use
#endif
#ifdef GENERATOR_FILE
extern int flag_profile_values;
#else
  int x_flag_profile_values;
#define flag_profile_values global_options.x_flag_profile_values
#endif
#ifdef GENERATOR_FILE
extern int flag_reciprocal_math;
#else
  int x_flag_reciprocal_math;
#define flag_reciprocal_math global_options.x_flag_reciprocal_math
#endif
#ifdef GENERATOR_FILE
extern int flag_record_gcc_switches;
#else
  int x_flag_record_gcc_switches;
#define flag_record_gcc_switches global_options.x_flag_record_gcc_switches
#endif
#ifdef GENERATOR_FILE
extern int flag_record_gcc_switches_in_elf;
#else
  int x_flag_record_gcc_switches_in_elf;
#define flag_record_gcc_switches_in_elf global_options.x_flag_record_gcc_switches_in_elf
#endif
#ifdef GENERATOR_FILE
extern int flag_reduced_reflection;
#else
  int x_flag_reduced_reflection;
#define flag_reduced_reflection global_options.x_flag_reduced_reflection
#endif
#ifdef GENERATOR_FILE
extern int flag_rename_registers;
#else
  int x_flag_rename_registers;
#define flag_rename_registers global_options.x_flag_rename_registers
#endif
#ifdef GENERATOR_FILE
extern int flag_reorder_blocks;
#else
  int x_flag_reorder_blocks;
#define flag_reorder_blocks global_options.x_flag_reorder_blocks
#endif
#ifdef GENERATOR_FILE
extern int flag_reorder_blocks_and_partition;
#else
  int x_flag_reorder_blocks_and_partition;
#define flag_reorder_blocks_and_partition global_options.x_flag_reorder_blocks_and_partition
#endif
#ifdef GENERATOR_FILE
extern int flag_reorder_functions;
#else
  int x_flag_reorder_functions;
#define flag_reorder_functions global_options.x_flag_reorder_functions
#endif
#ifdef GENERATOR_FILE
extern int flag_replace_objc_classes;
#else
  int x_flag_replace_objc_classes;
#define flag_replace_objc_classes global_options.x_flag_replace_objc_classes
#endif
#ifdef GENERATOR_FILE
extern int go_require_return_statement;
#else
  int x_go_require_return_statement;
#define go_require_return_statement global_options.x_go_require_return_statement
#endif
#ifdef GENERATOR_FILE
extern int flag_rerun_cse_after_loop;
#else
  int x_flag_rerun_cse_after_loop;
#define flag_rerun_cse_after_loop global_options.x_flag_rerun_cse_after_loop
#endif
#ifdef GENERATOR_FILE
extern int flag_resched_modulo_sched;
#else
  int x_flag_resched_modulo_sched;
#define flag_resched_modulo_sched global_options.x_flag_resched_modulo_sched
#endif
#ifdef GENERATOR_FILE
extern int flag_dyn_ipa;
#else
  int x_flag_dyn_ipa;
#define flag_dyn_ipa global_options.x_flag_dyn_ipa
#endif
#ifdef GENERATOR_FILE
extern int flag_ripa_disallow_asm_modules;
#else
  int x_flag_ripa_disallow_asm_modules;
#define flag_ripa_disallow_asm_modules global_options.x_flag_ripa_disallow_asm_modules
#endif
#ifdef GENERATOR_FILE
extern int flag_ripa_disallow_opt_mismatch;
#else
  int x_flag_ripa_disallow_opt_mismatch;
#define flag_ripa_disallow_opt_mismatch global_options.x_flag_ripa_disallow_opt_mismatch
#endif
#ifdef GENERATOR_FILE
extern int flag_ripa_no_promote_always_inline;
#else
  int x_flag_ripa_no_promote_always_inline;
#define flag_ripa_no_promote_always_inline global_options.x_flag_ripa_no_promote_always_inline
#endif
#ifdef GENERATOR_FILE
extern int flag_ripa_peel_size_limit;
#else
  int x_flag_ripa_peel_size_limit;
#define flag_ripa_peel_size_limit global_options.x_flag_ripa_peel_size_limit
#endif
#ifdef GENERATOR_FILE
extern int flag_ripa_unroll_size_limit;
#else
  int x_flag_ripa_unroll_size_limit;
#define flag_ripa_unroll_size_limit global_options.x_flag_ripa_unroll_size_limit
#endif
#ifdef GENERATOR_FILE
extern int flag_rounding_math;
#else
  int x_flag_rounding_math;
#define flag_rounding_math global_options.x_flag_rounding_math
#endif
#ifdef GENERATOR_FILE
extern int flag_rtti;
#else
  int x_flag_rtti;
#define flag_rtti global_options.x_flag_rtti
#endif
#ifdef GENERATOR_FILE
extern int flag_sched_critical_path_heuristic;
#else
  int x_flag_sched_critical_path_heuristic;
#define flag_sched_critical_path_heuristic global_options.x_flag_sched_critical_path_heuristic
#endif
#ifdef GENERATOR_FILE
extern int flag_sched_dep_count_heuristic;
#else
  int x_flag_sched_dep_count_heuristic;
#define flag_sched_dep_count_heuristic global_options.x_flag_sched_dep_count_heuristic
#endif
#ifdef GENERATOR_FILE
extern int flag_sched_group_heuristic;
#else
  int x_flag_sched_group_heuristic;
#define flag_sched_group_heuristic global_options.x_flag_sched_group_heuristic
#endif
#ifdef GENERATOR_FILE
extern int flag_schedule_interblock;
#else
  int x_flag_schedule_interblock;
#define flag_schedule_interblock global_options.x_flag_schedule_interblock
#endif
#ifdef GENERATOR_FILE
extern int flag_sched_last_insn_heuristic;
#else
  int x_flag_sched_last_insn_heuristic;
#define flag_sched_last_insn_heuristic global_options.x_flag_sched_last_insn_heuristic
#endif
#ifdef GENERATOR_FILE
extern int flag_sched_pressure;
#else
  int x_flag_sched_pressure;
#define flag_sched_pressure global_options.x_flag_sched_pressure
#endif
#ifdef GENERATOR_FILE
extern int flag_sched_rank_heuristic;
#else
  int x_flag_sched_rank_heuristic;
#define flag_sched_rank_heuristic global_options.x_flag_sched_rank_heuristic
#endif
#ifdef GENERATOR_FILE
extern int flag_schedule_speculative;
#else
  int x_flag_schedule_speculative;
#define flag_schedule_speculative global_options.x_flag_schedule_speculative
#endif
#ifdef GENERATOR_FILE
extern int flag_sched_spec_insn_heuristic;
#else
  int x_flag_sched_spec_insn_heuristic;
#define flag_sched_spec_insn_heuristic global_options.x_flag_sched_spec_insn_heuristic
#endif
#ifdef GENERATOR_FILE
extern int flag_schedule_speculative_load;
#else
  int x_flag_schedule_speculative_load;
#define flag_schedule_speculative_load global_options.x_flag_schedule_speculative_load
#endif
#ifdef GENERATOR_FILE
extern int flag_schedule_speculative_load_dangerous;
#else
  int x_flag_schedule_speculative_load_dangerous;
#define flag_schedule_speculative_load_dangerous global_options.x_flag_schedule_speculative_load_dangerous
#endif
#ifdef GENERATOR_FILE
extern int flag_sched_stalled_insns;
#else
  int x_flag_sched_stalled_insns;
#define flag_sched_stalled_insns global_options.x_flag_sched_stalled_insns
#endif
#ifdef GENERATOR_FILE
extern int flag_sched_stalled_insns_dep;
#else
  int x_flag_sched_stalled_insns_dep;
#define flag_sched_stalled_insns_dep global_options.x_flag_sched_stalled_insns_dep
#endif
#ifdef GENERATOR_FILE
extern int sched_verbose_param;
#else
  int x_sched_verbose_param;
#define sched_verbose_param global_options.x_sched_verbose_param
#endif
#ifdef GENERATOR_FILE
extern int flag_sched2_use_superblocks;
#else
  int x_flag_sched2_use_superblocks;
#define flag_sched2_use_superblocks global_options.x_flag_sched2_use_superblocks
#endif
#ifdef GENERATOR_FILE
extern int flag_schedule_insns;
#else
  int x_flag_schedule_insns;
#define flag_schedule_insns global_options.x_flag_schedule_insns
#endif
#ifdef GENERATOR_FILE
extern int flag_schedule_insns_after_reload;
#else
  int x_flag_schedule_insns_after_reload;
#define flag_schedule_insns_after_reload global_options.x_flag_schedule_insns_after_reload
#endif
#ifdef GENERATOR_FILE
extern int flag_section_anchors;
#else
  int x_flag_section_anchors;
#define flag_section_anchors global_options.x_flag_section_anchors
#endif
#ifdef GENERATOR_FILE
extern int flag_sel_sched_pipelining;
#else
  int x_flag_sel_sched_pipelining;
#define flag_sel_sched_pipelining global_options.x_flag_sel_sched_pipelining
#endif
#ifdef GENERATOR_FILE
extern int flag_sel_sched_pipelining_outer_loops;
#else
  int x_flag_sel_sched_pipelining_outer_loops;
#define flag_sel_sched_pipelining_outer_loops global_options.x_flag_sel_sched_pipelining_outer_loops
#endif
#ifdef GENERATOR_FILE
extern int flag_sel_sched_reschedule_pipelined;
#else
  int x_flag_sel_sched_reschedule_pipelined;
#define flag_sel_sched_reschedule_pipelined global_options.x_flag_sel_sched_reschedule_pipelined
#endif
#ifdef GENERATOR_FILE
extern int flag_selective_scheduling;
#else
  int x_flag_selective_scheduling;
#define flag_selective_scheduling global_options.x_flag_selective_scheduling
#endif
#ifdef GENERATOR_FILE
extern int flag_selective_scheduling2;
#else
  int x_flag_selective_scheduling2;
#define flag_selective_scheduling2 global_options.x_flag_selective_scheduling2
#endif
#ifdef GENERATOR_FILE
extern int flag_short_double;
#else
  int x_flag_short_double;
#define flag_short_double global_options.x_flag_short_double
#endif
#ifdef GENERATOR_FILE
extern int flag_short_enums;
#else
  int x_flag_short_enums;
#define flag_short_enums global_options.x_flag_short_enums
#endif
#ifdef GENERATOR_FILE
extern int flag_short_wchar;
#else
  int x_flag_short_wchar;
#define flag_short_wchar global_options.x_flag_short_wchar
#endif
#ifdef GENERATOR_FILE
extern int flag_show_column;
#else
  int x_flag_show_column;
#define flag_show_column global_options.x_flag_show_column
#endif
#ifdef GENERATOR_FILE
extern int flag_signaling_nans;
#else
  int x_flag_signaling_nans;
#define flag_signaling_nans global_options.x_flag_signaling_nans
#endif
#ifdef GENERATOR_FILE
extern int flag_signed_bitfields;
#else
  int x_flag_signed_bitfields;
#define flag_signed_bitfields global_options.x_flag_signed_bitfields
#endif
#ifdef GENERATOR_FILE
extern int flag_signed_char;
#else
  int x_flag_signed_char;
#define flag_signed_char global_options.x_flag_signed_char
#endif
#ifdef GENERATOR_FILE
extern int flag_signed_zeros;
#else
  int x_flag_signed_zeros;
#define flag_signed_zeros global_options.x_flag_signed_zeros
#endif
#ifdef GENERATOR_FILE
extern int flag_single_precision_constant;
#else
  int x_flag_single_precision_constant;
#define flag_single_precision_constant global_options.x_flag_single_precision_constant
#endif
#ifdef GENERATOR_FILE
extern int flag_sized_delete;
#else
  int x_flag_sized_delete;
#define flag_sized_delete global_options.x_flag_sized_delete
#endif
#ifdef GENERATOR_FILE
extern int flag_split_ivs_in_unroller;
#else
  int x_flag_split_ivs_in_unroller;
#define flag_split_ivs_in_unroller global_options.x_flag_split_ivs_in_unroller
#endif
#ifdef GENERATOR_FILE
extern int flag_split_stack;
#else
  int x_flag_split_stack;
#define flag_split_stack global_options.x_flag_split_stack
#endif
#ifdef GENERATOR_FILE
extern int flag_split_wide_types;
#else
  int x_flag_split_wide_types;
#define flag_split_wide_types global_options.x_flag_split_wide_types
#endif
#ifdef GENERATOR_FILE
extern int flag_stack_protect;
#else
  int x_flag_stack_protect;
#define flag_stack_protect global_options.x_flag_stack_protect
#endif
#ifdef GENERATOR_FILE
extern int flag_stack_usage;
#else
  int x_flag_stack_usage;
#define flag_stack_usage global_options.x_flag_stack_usage
#endif
#ifdef GENERATOR_FILE
extern int flag_detailed_statistics;
#else
  int x_flag_detailed_statistics;
#define flag_detailed_statistics global_options.x_flag_detailed_statistics
#endif
#ifdef GENERATOR_FILE
extern int flag_store_check;
#else
  int x_flag_store_check;
#define flag_store_check global_options.x_flag_store_check
#endif
#ifdef GENERATOR_FILE
extern int flag_strict_aliasing;
#else
  int x_flag_strict_aliasing;
#define flag_strict_aliasing global_options.x_flag_strict_aliasing
#endif
#ifdef GENERATOR_FILE
extern int flag_strict_enum_precision;
#else
  int x_flag_strict_enum_precision;
#define flag_strict_enum_precision global_options.x_flag_strict_enum_precision
#endif
#ifdef GENERATOR_FILE
extern int flag_strict_enums;
#else
  int x_flag_strict_enums;
#define flag_strict_enums global_options.x_flag_strict_enums
#endif
#ifdef GENERATOR_FILE
extern int flag_strict_overflow;
#else
  int x_flag_strict_overflow;
#define flag_strict_overflow global_options.x_flag_strict_overflow
#endif
#ifdef GENERATOR_FILE
extern int flag_strict_volatile_bitfields;
#else
  int x_flag_strict_volatile_bitfields;
#define flag_strict_volatile_bitfields global_options.x_flag_strict_volatile_bitfields
#endif
#ifdef GENERATOR_FILE
extern int flag_syntax_only;
#else
  int x_flag_syntax_only;
#define flag_syntax_only global_options.x_flag_syntax_only
#endif
#ifdef GENERATOR_FILE
extern int flag_test_coverage;
#else
  int x_flag_test_coverage;
#define flag_test_coverage global_options.x_flag_test_coverage
#endif
#ifdef GENERATOR_FILE
extern int flag_thread_jumps;
#else
  int x_flag_thread_jumps;
#define flag_thread_jumps global_options.x_flag_thread_jumps
#endif
#ifdef GENERATOR_FILE
extern int flag_threadsafe_statics;
#else
  int x_flag_threadsafe_statics;
#define flag_threadsafe_statics global_options.x_flag_threadsafe_statics
#endif
#ifdef GENERATOR_FILE
extern int time_report;
#else
  int x_time_report;
#define time_report global_options.x_time_report
#endif
#ifdef GENERATOR_FILE
extern enum tls_model flag_tls_default;
#else
  enum tls_model x_flag_tls_default;
#define flag_tls_default global_options.x_flag_tls_default
#endif
#ifdef GENERATOR_FILE
extern int flag_toplevel_reorder;
#else
  int x_flag_toplevel_reorder;
#define flag_toplevel_reorder global_options.x_flag_toplevel_reorder
#endif
#ifdef GENERATOR_FILE
extern int flag_tracer;
#else
  int x_flag_tracer;
#define flag_tracer global_options.x_flag_tracer
#endif
#ifdef GENERATOR_FILE
extern int flag_trapping_math;
#else
  int x_flag_trapping_math;
#define flag_trapping_math global_options.x_flag_trapping_math
#endif
#ifdef GENERATOR_FILE
extern int flag_trapv;
#else
  int x_flag_trapv;
#define flag_trapv global_options.x_flag_trapv
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_bit_ccp;
#else
  int x_flag_tree_bit_ccp;
#define flag_tree_bit_ccp global_options.x_flag_tree_bit_ccp
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_builtin_call_dce;
#else
  int x_flag_tree_builtin_call_dce;
#define flag_tree_builtin_call_dce global_options.x_flag_tree_builtin_call_dce
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_ccp;
#else
  int x_flag_tree_ccp;
#define flag_tree_ccp global_options.x_flag_tree_ccp
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_ch;
#else
  int x_flag_tree_ch;
#define flag_tree_ch global_options.x_flag_tree_ch
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_copy_prop;
#else
  int x_flag_tree_copy_prop;
#define flag_tree_copy_prop global_options.x_flag_tree_copy_prop
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_copyrename;
#else
  int x_flag_tree_copyrename;
#define flag_tree_copyrename global_options.x_flag_tree_copyrename
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_cselim;
#else
  int x_flag_tree_cselim;
#define flag_tree_cselim global_options.x_flag_tree_cselim
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_dce;
#else
  int x_flag_tree_dce;
#define flag_tree_dce global_options.x_flag_tree_dce
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_dom;
#else
  int x_flag_tree_dom;
#define flag_tree_dom global_options.x_flag_tree_dom
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_dse;
#else
  int x_flag_tree_dse;
#define flag_tree_dse global_options.x_flag_tree_dse
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_forwprop;
#else
  int x_flag_tree_forwprop;
#define flag_tree_forwprop global_options.x_flag_tree_forwprop
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_fre;
#else
  int x_flag_tree_fre;
#define flag_tree_fre global_options.x_flag_tree_fre
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_loop_distribute_patterns;
#else
  int x_flag_tree_loop_distribute_patterns;
#define flag_tree_loop_distribute_patterns global_options.x_flag_tree_loop_distribute_patterns
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_loop_distribution;
#else
  int x_flag_tree_loop_distribution;
#define flag_tree_loop_distribution global_options.x_flag_tree_loop_distribution
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_loop_if_convert;
#else
  int x_flag_tree_loop_if_convert;
#define flag_tree_loop_if_convert global_options.x_flag_tree_loop_if_convert
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_loop_if_convert_stores;
#else
  int x_flag_tree_loop_if_convert_stores;
#define flag_tree_loop_if_convert_stores global_options.x_flag_tree_loop_if_convert_stores
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_loop_im;
#else
  int x_flag_tree_loop_im;
#define flag_tree_loop_im global_options.x_flag_tree_loop_im
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_loop_ivcanon;
#else
  int x_flag_tree_loop_ivcanon;
#define flag_tree_loop_ivcanon global_options.x_flag_tree_loop_ivcanon
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_loop_optimize;
#else
  int x_flag_tree_loop_optimize;
#define flag_tree_loop_optimize global_options.x_flag_tree_loop_optimize
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_live_range_split;
#else
  int x_flag_tree_live_range_split;
#define flag_tree_live_range_split global_options.x_flag_tree_live_range_split
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_parallelize_loops;
#else
  int x_flag_tree_parallelize_loops;
#define flag_tree_parallelize_loops global_options.x_flag_tree_parallelize_loops
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_phiprop;
#else
  int x_flag_tree_phiprop;
#define flag_tree_phiprop global_options.x_flag_tree_phiprop
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_pre;
#else
  int x_flag_tree_pre;
#define flag_tree_pre global_options.x_flag_tree_pre
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_pta;
#else
  int x_flag_tree_pta;
#define flag_tree_pta global_options.x_flag_tree_pta
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_reassoc;
#else
  int x_flag_tree_reassoc;
#define flag_tree_reassoc global_options.x_flag_tree_reassoc
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_scev_cprop;
#else
  int x_flag_tree_scev_cprop;
#define flag_tree_scev_cprop global_options.x_flag_tree_scev_cprop
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_sink;
#else
  int x_flag_tree_sink;
#define flag_tree_sink global_options.x_flag_tree_sink
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_slp_vectorize;
#else
  int x_flag_tree_slp_vectorize;
#define flag_tree_slp_vectorize global_options.x_flag_tree_slp_vectorize
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_sra;
#else
  int x_flag_tree_sra;
#define flag_tree_sra global_options.x_flag_tree_sra
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_switch_conversion;
#else
  int x_flag_tree_switch_conversion;
#define flag_tree_switch_conversion global_options.x_flag_tree_switch_conversion
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_ter;
#else
  int x_flag_tree_ter;
#define flag_tree_ter global_options.x_flag_tree_ter
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_vect_loop_version;
#else
  int x_flag_tree_vect_loop_version;
#define flag_tree_vect_loop_version global_options.x_flag_tree_vect_loop_version
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_vectorize;
#else
  int x_flag_tree_vectorize;
#define flag_tree_vectorize global_options.x_flag_tree_vectorize
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_vrp;
#else
  int x_flag_tree_vrp;
#define flag_tree_vrp global_options.x_flag_tree_vrp
#endif
#ifdef GENERATOR_FILE
extern int flag_unit_at_a_time;
#else
  int x_flag_unit_at_a_time;
#define flag_unit_at_a_time global_options.x_flag_unit_at_a_time
#endif
#ifdef GENERATOR_FILE
extern int flag_unroll_all_loops;
#else
  int x_flag_unroll_all_loops;
#define flag_unroll_all_loops global_options.x_flag_unroll_all_loops
#endif
#ifdef GENERATOR_FILE
extern int flag_unroll_loops;
#else
  int x_flag_unroll_loops;
#define flag_unroll_loops global_options.x_flag_unroll_loops
#endif
#ifdef GENERATOR_FILE
extern int flag_unsafe_loop_optimizations;
#else
  int x_flag_unsafe_loop_optimizations;
#define flag_unsafe_loop_optimizations global_options.x_flag_unsafe_loop_optimizations
#endif
#ifdef GENERATOR_FILE
extern int flag_unsafe_math_optimizations;
#else
  int x_flag_unsafe_math_optimizations;
#define flag_unsafe_math_optimizations global_options.x_flag_unsafe_math_optimizations
#endif
#ifdef GENERATOR_FILE
extern int flag_unswitch_loops;
#else
  int x_flag_unswitch_loops;
#define flag_unswitch_loops global_options.x_flag_unswitch_loops
#endif
#ifdef GENERATOR_FILE
extern int flag_unwind_tables;
#else
  int x_flag_unwind_tables;
#define flag_unwind_tables global_options.x_flag_unwind_tables
#endif
#ifdef GENERATOR_FILE
extern int flag_use_atomic_builtins;
#else
  int x_flag_use_atomic_builtins;
#define flag_use_atomic_builtins global_options.x_flag_use_atomic_builtins
#endif
#ifdef GENERATOR_FILE
extern int flag_use_boehm_gc;
#else
  int x_flag_use_boehm_gc;
#define flag_use_boehm_gc global_options.x_flag_use_boehm_gc
#endif
#ifdef GENERATOR_FILE
extern int flag_use_cxa_atexit;
#else
  int x_flag_use_cxa_atexit;
#define flag_use_cxa_atexit global_options.x_flag_use_cxa_atexit
#endif
#ifdef GENERATOR_FILE
extern int flag_use_cxa_get_exception_ptr;
#else
  int x_flag_use_cxa_get_exception_ptr;
#define flag_use_cxa_get_exception_ptr global_options.x_flag_use_cxa_get_exception_ptr
#endif
#ifdef GENERATOR_FILE
extern int flag_use_divide_subroutine;
#else
  int x_flag_use_divide_subroutine;
#define flag_use_divide_subroutine global_options.x_flag_use_divide_subroutine
#endif
#ifdef GENERATOR_FILE
extern int flag_var_tracking;
#else
  int x_flag_var_tracking;
#define flag_var_tracking global_options.x_flag_var_tracking
#endif
#ifdef GENERATOR_FILE
extern int flag_var_tracking_assignments;
#else
  int x_flag_var_tracking_assignments;
#define flag_var_tracking_assignments global_options.x_flag_var_tracking_assignments
#endif
#ifdef GENERATOR_FILE
extern int flag_var_tracking_assignments_toggle;
#else
  int x_flag_var_tracking_assignments_toggle;
#define flag_var_tracking_assignments_toggle global_options.x_flag_var_tracking_assignments_toggle
#endif
#ifdef GENERATOR_FILE
extern int flag_var_tracking_uninit;
#else
  int x_flag_var_tracking_uninit;
#define flag_var_tracking_uninit global_options.x_flag_var_tracking_uninit
#endif
#ifdef GENERATOR_FILE
extern int flag_variable_expansion_in_unroller;
#else
  int x_flag_variable_expansion_in_unroller;
#define flag_variable_expansion_in_unroller global_options.x_flag_variable_expansion_in_unroller
#endif
#ifdef GENERATOR_FILE
extern int flag_vect_cost_model;
#else
  int x_flag_vect_cost_model;
#define flag_vect_cost_model global_options.x_flag_vect_cost_model
#endif
#ifdef GENERATOR_FILE
extern int flag_verbose_asm;
#else
  int x_flag_verbose_asm;
#define flag_verbose_asm global_options.x_flag_verbose_asm
#endif
#ifdef GENERATOR_FILE
extern int flag_visibility_ms_compat;
#else
  int x_flag_visibility_ms_compat;
#define flag_visibility_ms_compat global_options.x_flag_visibility_ms_compat
#endif
#ifdef GENERATOR_FILE
extern enum symbol_visibility default_visibility;
#else
  enum symbol_visibility x_default_visibility;
#define default_visibility global_options.x_default_visibility
#endif
#ifdef GENERATOR_FILE
extern int flag_value_profile_transformations;
#else
  int x_flag_value_profile_transformations;
#define flag_value_profile_transformations global_options.x_flag_value_profile_transformations
#endif
#ifdef GENERATOR_FILE
extern int flag_weak;
#else
  int x_flag_weak;
#define flag_weak global_options.x_flag_weak
#endif
#ifdef GENERATOR_FILE
extern int flag_web;
#else
  int x_flag_web;
#define flag_web global_options.x_flag_web
#endif
#ifdef GENERATOR_FILE
extern int flag_whole_program;
#else
  int x_flag_whole_program;
#define flag_whole_program global_options.x_flag_whole_program
#endif
#ifdef GENERATOR_FILE
extern int flag_working_directory;
#else
  int x_flag_working_directory;
#define flag_working_directory global_options.x_flag_working_directory
#endif
#ifdef GENERATOR_FILE
extern int flag_wpa;
#else
  int x_flag_wpa;
#define flag_wpa global_options.x_flag_wpa
#endif
#ifdef GENERATOR_FILE
extern int flag_wrapv;
#else
  int x_flag_wrapv;
#define flag_wrapv global_options.x_flag_wrapv
#endif
#ifdef GENERATOR_FILE
extern int flag_zee;
#else
  int x_flag_zee;
#define flag_zee global_options.x_flag_zee
#endif
#ifdef GENERATOR_FILE
extern int flag_zero_initialized_in_bss;
#else
  int x_flag_zero_initialized_in_bss;
#define flag_zero_initialized_in_bss global_options.x_flag_zero_initialized_in_bss
#endif
#ifdef GENERATOR_FILE
extern int flag_zero_link;
#else
  int x_flag_zero_link;
#define flag_zero_link global_options.x_flag_zero_link
#endif
#ifdef GENERATOR_FILE
extern int dwarf_version;
#else
  int x_dwarf_version;
#define dwarf_version global_options.x_dwarf_version
#endif
#ifdef GENERATOR_FILE
extern int flag_gen_declaration;
#else
  int x_flag_gen_declaration;
#define flag_gen_declaration global_options.x_flag_gen_declaration
#endif
#ifdef GENERATOR_FILE
extern int dwarf_strict;
#else
  int x_dwarf_strict;
#define dwarf_strict global_options.x_dwarf_strict
#endif
#ifdef GENERATOR_FILE
extern int flag_gtoggle;
#else
  int x_flag_gtoggle;
#define flag_gtoggle global_options.x_flag_gtoggle
#endif
#ifdef GENERATOR_FILE
extern const char *plugindir_string;
#else
  const char *x_plugindir_string;
#define plugindir_string global_options.x_plugindir_string
#endif
#ifdef GENERATOR_FILE
extern const char *target_abi_name;
#else
  const char *x_target_abi_name;
#define target_abi_name global_options.x_target_abi_name
#endif
#ifdef GENERATOR_FILE
extern int flag_android;
#else
  int x_flag_android;
#define flag_android global_options.x_flag_android
#endif
#ifdef GENERATOR_FILE
extern int linux_libc;
#else
  int x_linux_libc;
#define linux_libc global_options.x_linux_libc
#endif
#ifdef GENERATOR_FILE
extern int fix_cm3_ldrd;
#else
  int x_fix_cm3_ldrd;
#define fix_cm3_ldrd global_options.x_fix_cm3_ldrd
#endif
#ifdef GENERATOR_FILE
extern const char *target_float_abi_name;
#else
  const char *x_target_float_abi_name;
#define target_float_abi_name global_options.x_target_float_abi_name
#endif
#ifdef GENERATOR_FILE
extern const char *target_fp16_format_name;
#else
  const char *x_target_fp16_format_name;
#define target_fp16_format_name global_options.x_target_fp16_format_name
#endif
#ifdef GENERATOR_FILE
extern const char *target_fpe_name;
#else
  const char *x_target_fpe_name;
#define target_fpe_name global_options.x_target_fpe_name
#endif
#ifdef GENERATOR_FILE
extern const char *target_fpu_name;
#else
  const char *x_target_fpu_name;
#define target_fpu_name global_options.x_target_fpu_name
#endif
#ifdef GENERATOR_FILE
extern const char *arm_pic_register_string;
#else
  const char *x_arm_pic_register_string;
#define arm_pic_register_string global_options.x_arm_pic_register_string
#endif
#ifdef GENERATOR_FILE
extern const char *structure_size_string;
#else
  const char *x_structure_size_string;
#define structure_size_string global_options.x_structure_size_string
#endif
#ifdef GENERATOR_FILE
extern const char *target_thread_switch;
#else
  const char *x_target_thread_switch;
#define target_thread_switch global_options.x_target_thread_switch
#endif
#ifdef GENERATOR_FILE
extern int target_word_relocations;
#else
  int x_target_word_relocations;
#define target_word_relocations global_options.x_target_word_relocations
#endif
#ifdef GENERATOR_FILE
extern const char *asm_file_name;
#else
  const char *x_asm_file_name;
#define asm_file_name global_options.x_asm_file_name
#endif
#ifdef GENERATOR_FILE
extern int pass_exit_codes;
#else
  int x_pass_exit_codes;
#define pass_exit_codes global_options.x_pass_exit_codes
#endif
#ifdef GENERATOR_FILE
extern int pedantic;
#else
  int x_pedantic;
#define pedantic global_options.x_pedantic
#endif
#ifdef GENERATOR_FILE
extern int flag_pedantic_errors;
#else
  int x_flag_pedantic_errors;
#define flag_pedantic_errors global_options.x_flag_pedantic_errors
#endif
#ifdef GENERATOR_FILE
extern int use_pipes;
#else
  int x_use_pipes;
#define use_pipes global_options.x_use_pipes
#endif
#ifdef GENERATOR_FILE
extern const char *print_file_name;
#else
  const char *x_print_file_name;
#define print_file_name global_options.x_print_file_name
#endif
#ifdef GENERATOR_FILE
extern int print_multi_directory;
#else
  int x_print_multi_directory;
#define print_multi_directory global_options.x_print_multi_directory
#endif
#ifdef GENERATOR_FILE
extern int print_multi_lib;
#else
  int x_print_multi_lib;
#define print_multi_lib global_options.x_print_multi_lib
#endif
#ifdef GENERATOR_FILE
extern int print_multi_os_directory;
#else
  int x_print_multi_os_directory;
#define print_multi_os_directory global_options.x_print_multi_os_directory
#endif
#ifdef GENERATOR_FILE
extern const char *print_prog_name;
#else
  const char *x_print_prog_name;
#define print_prog_name global_options.x_print_prog_name
#endif
#ifdef GENERATOR_FILE
extern int print_search_dirs;
#else
  int x_print_search_dirs;
#define print_search_dirs global_options.x_print_search_dirs
#endif
#ifdef GENERATOR_FILE
extern int print_sysroot;
#else
  int x_print_sysroot;
#define print_sysroot global_options.x_print_sysroot
#endif
#ifdef GENERATOR_FILE
extern int print_sysroot_headers_suffix;
#else
  int x_print_sysroot_headers_suffix;
#define print_sysroot_headers_suffix global_options.x_print_sysroot_headers_suffix
#endif
#ifdef GENERATOR_FILE
extern int quiet_flag;
#else
  int x_quiet_flag;
#define quiet_flag global_options.x_quiet_flag
#endif
#ifdef GENERATOR_FILE
extern int report_times;
#else
  int x_report_times;
#define report_times global_options.x_report_times
#endif
#ifdef GENERATOR_FILE
extern int flag_undef;
#else
  int x_flag_undef;
#define flag_undef global_options.x_flag_undef
#endif
#ifdef GENERATOR_FILE
extern int verbose_flag;
#else
  int x_verbose_flag;
#define verbose_flag global_options.x_verbose_flag
#endif
#ifdef GENERATOR_FILE
extern int version_flag;
#else
  int x_version_flag;
#define version_flag global_options.x_version_flag
#endif
#ifdef GENERATOR_FILE
extern int inhibit_warnings;
#else
  int x_inhibit_warnings;
#define inhibit_warnings global_options.x_inhibit_warnings
#endif
#ifdef GENERATOR_FILE
extern const char *wrapper_string;
#else
  const char *x_wrapper_string;
#define wrapper_string global_options.x_wrapper_string
#endif
#ifndef GENERATOR_FILE
  const char *x_VAR_march_;
#define x_VAR_march_ do_not_use
#endif
#ifndef GENERATOR_FILE
  const char *x_VAR_mcpu_;
#define x_VAR_mcpu_ do_not_use
#endif
#ifndef GENERATOR_FILE
  int x_VAR_mhard_float;
#define x_VAR_mhard_float do_not_use
#endif
#ifndef GENERATOR_FILE
  int x_VAR_msoft_float;
#define x_VAR_msoft_float do_not_use
#endif
#ifndef GENERATOR_FILE
  const char *x_VAR_mtune_;
#define x_VAR_mtune_ do_not_use
#endif
#ifndef GENERATOR_FILE
  bool frontend_set_flag_associative_math;
#endif
#ifndef GENERATOR_FILE
  bool frontend_set_flag_cx_limited_range;
#endif
#ifndef GENERATOR_FILE
  bool frontend_set_flag_finite_math_only;
#endif
#ifndef GENERATOR_FILE
  bool frontend_set_flag_errno_math;
#endif
#ifndef GENERATOR_FILE
  bool frontend_set_flag_reciprocal_math;
#endif
#ifndef GENERATOR_FILE
  bool frontend_set_flag_rounding_math;
#endif
#ifndef GENERATOR_FILE
  bool frontend_set_flag_signaling_nans;
#endif
#ifndef GENERATOR_FILE
  bool frontend_set_flag_signed_zeros;
#endif
#ifndef GENERATOR_FILE
  bool frontend_set_flag_trapping_math;
#endif
#ifndef GENERATOR_FILE
  bool frontend_set_flag_unsafe_math_optimizations;
#endif
#ifndef GENERATOR_FILE
};
extern struct gcc_options global_options;
extern const struct gcc_options global_options_init;
extern struct gcc_options global_options_set;
#define target_flags_explicit global_options_set.x_target_flags
#endif
#endif

#if !defined(GCC_DRIVER) && !defined(IN_LIBGCC2) && !defined(IN_TARGET_LIBS)

/* Structure to save/restore optimization and target specific options.  */
struct GTY(()) cl_optimization
{
  int x_align_functions;
  int x_align_jumps;
  int x_align_labels;
  int x_align_loops;
  int x_flag_sched_stalled_insns;
  int x_flag_sched_stalled_insns_dep;
  enum fp_contract_mode x_flag_fp_contract_mode;
  unsigned char x_optimize;
  unsigned char x_optimize_size;
  signed char x_flag_asynchronous_unwind_tables;
  signed char x_flag_branch_on_count_reg;
  signed char x_flag_branch_probabilities;
  signed char x_flag_branch_target_load_optimize;
  signed char x_flag_branch_target_load_optimize2;
  signed char x_flag_btr_bb_exclusive;
  signed char x_flag_caller_saves;
  signed char x_flag_combine_stack_adjustments;
  signed char x_flag_no_common;
  signed char x_flag_compare_elim_after_reload;
  signed char x_flag_conserve_stack;
  signed char x_flag_cprop_registers;
  signed char x_flag_crossjumping;
  signed char x_flag_cse_follow_jumps;
  signed char x_flag_cx_fortran_rules;
  signed char x_flag_cx_limited_range;
  signed char x_flag_data_sections;
  signed char x_flag_dce;
  signed char x_flag_defer_pop;
  signed char x_flag_delayed_branch;
  signed char x_flag_delete_null_pointer_checks;
  signed char x_flag_devirtualize;
  signed char x_flag_dse;
  signed char x_flag_early_inlining;
  signed char x_flag_exceptions;
  signed char x_flag_expensive_optimizations;
  signed char x_flag_finite_math_only;
  signed char x_flag_float_store;
  signed char x_flag_forward_propagate;
  signed char x_flag_gcse;
  signed char x_flag_gcse_after_reload;
  signed char x_flag_gcse_las;
  signed char x_flag_gcse_lm;
  signed char x_flag_gcse_sm;
  signed char x_flag_graphite_identity;
  signed char x_flag_guess_branch_prob;
  signed char x_flag_if_conversion;
  signed char x_flag_if_conversion2;
  signed char x_flag_inline_functions;
  signed char x_flag_inline_functions_called_once;
  signed char x_flag_inline_hot_caller;
  signed char x_flag_inline_small_functions;
  signed char x_flag_ipa_cp;
  signed char x_flag_ipa_cp_clone;
  signed char x_flag_ipa_matrix_reorg;
  signed char x_flag_ipa_profile;
  signed char x_flag_ipa_pta;
  signed char x_flag_ipa_pure_const;
  signed char x_flag_ipa_reference;
  signed char x_flag_ipa_sra;
  signed char x_flag_ivopts;
  signed char x_flag_jump_tables;
  signed char x_flag_loop_block;
  signed char x_flag_loop_flatten;
  signed char x_flag_loop_interchange;
  signed char x_flag_loop_parallelize_all;
  signed char x_flag_loop_strip_mine;
  signed char x_flag_lto_report;
  signed char x_flag_ltrans;
  signed char x_flag_errno_math;
  signed char x_flag_merge_constants;
  signed char x_flag_modulo_sched;
  signed char x_flag_move_loop_invariants;
  signed char x_flag_non_call_exceptions;
  signed char x_flag_nothrow_opt;
  signed char x_flag_omit_frame_pointer;
  signed char x_flag_opt_info;
  signed char x_flag_regmove;
  signed char x_flag_optimize_sibling_calls;
  signed char x_flag_pack_struct;
  signed char x_flag_peel_loops;
  signed char x_flag_no_peephole;
  signed char x_flag_peephole2;
  signed char x_flag_predictive_commoning;
  signed char x_flag_prefetch_loop_arrays;
  signed char x_flag_profile_dump;
  signed char x_flag_pcc_struct_return;
  signed char x_flag_rename_registers;
  signed char x_flag_reorder_blocks;
  signed char x_flag_reorder_blocks_and_partition;
  signed char x_flag_reorder_functions;
  signed char x_flag_rerun_cse_after_loop;
  signed char x_flag_resched_modulo_sched;
  signed char x_flag_ripa_peel_size_limit;
  signed char x_flag_ripa_unroll_size_limit;
  signed char x_flag_rounding_math;
  signed char x_flag_rtti;
  signed char x_flag_sched_critical_path_heuristic;
  signed char x_flag_sched_dep_count_heuristic;
  signed char x_flag_sched_group_heuristic;
  signed char x_flag_schedule_interblock;
  signed char x_flag_sched_last_insn_heuristic;
  signed char x_flag_sched_pressure;
  signed char x_flag_sched_rank_heuristic;
  signed char x_flag_schedule_speculative;
  signed char x_flag_sched_spec_insn_heuristic;
  signed char x_flag_schedule_speculative_load;
  signed char x_flag_schedule_speculative_load_dangerous;
  signed char x_flag_sched2_use_superblocks;
  signed char x_flag_schedule_insns;
  signed char x_flag_schedule_insns_after_reload;
  signed char x_flag_section_anchors;
  signed char x_flag_sel_sched_pipelining;
  signed char x_flag_sel_sched_pipelining_outer_loops;
  signed char x_flag_sel_sched_reschedule_pipelined;
  signed char x_flag_selective_scheduling;
  signed char x_flag_selective_scheduling2;
  signed char x_flag_short_double;
  signed char x_flag_short_enums;
  signed char x_flag_short_wchar;
  signed char x_flag_signaling_nans;
  signed char x_flag_signed_zeros;
  signed char x_flag_single_precision_constant;
  signed char x_flag_sized_delete;
  signed char x_flag_split_ivs_in_unroller;
  signed char x_flag_split_wide_types;
  signed char x_flag_strict_aliasing;
  signed char x_flag_strict_enum_precision;
  signed char x_flag_strict_enums;
  signed char x_flag_thread_jumps;
  signed char x_flag_threadsafe_statics;
  signed char x_flag_toplevel_reorder;
  signed char x_flag_trapping_math;
  signed char x_flag_trapv;
  signed char x_flag_tree_bit_ccp;
  signed char x_flag_tree_builtin_call_dce;
  signed char x_flag_tree_ccp;
  signed char x_flag_tree_ch;
  signed char x_flag_tree_copy_prop;
  signed char x_flag_tree_copyrename;
  signed char x_flag_tree_cselim;
  signed char x_flag_tree_dce;
  signed char x_flag_tree_dom;
  signed char x_flag_tree_dse;
  signed char x_flag_tree_forwprop;
  signed char x_flag_tree_fre;
  signed char x_flag_tree_loop_distribute_patterns;
  signed char x_flag_tree_loop_distribution;
  signed char x_flag_tree_loop_if_convert;
  signed char x_flag_tree_loop_if_convert_stores;
  signed char x_flag_tree_loop_im;
  signed char x_flag_tree_loop_ivcanon;
  signed char x_flag_tree_loop_optimize;
  signed char x_flag_tree_live_range_split;
  signed char x_flag_tree_phiprop;
  signed char x_flag_tree_pre;
  signed char x_flag_tree_pta;
  signed char x_flag_tree_reassoc;
  signed char x_flag_tree_scev_cprop;
  signed char x_flag_tree_sink;
  signed char x_flag_tree_slp_vectorize;
  signed char x_flag_tree_sra;
  signed char x_flag_tree_switch_conversion;
  signed char x_flag_tree_ter;
  signed char x_flag_tree_vect_loop_version;
  signed char x_flag_tree_vectorize;
  signed char x_flag_tree_vrp;
  signed char x_flag_unit_at_a_time;
  signed char x_flag_unroll_all_loops;
  signed char x_flag_unroll_loops;
  signed char x_flag_unsafe_loop_optimizations;
  signed char x_flag_unsafe_math_optimizations;
  signed char x_flag_unswitch_loops;
  signed char x_flag_unwind_tables;
  signed char x_flag_var_tracking;
  signed char x_flag_var_tracking_assignments;
  signed char x_flag_var_tracking_assignments_toggle;
  signed char x_flag_var_tracking_uninit;
  signed char x_flag_variable_expansion_in_unroller;
  signed char x_flag_vect_cost_model;
  signed char x_flag_value_profile_transformations;
  signed char x_flag_web;
  signed char x_flag_whole_program;
  signed char x_flag_wpa;
  signed char x_flag_wrapv;
};

/* Structure to save/restore selected target specific options.  */
struct GTY(()) cl_target_option
{
  int x_target_flags;
};


/* Save optimization variables into a structure.  */
extern void cl_optimization_save (struct cl_optimization *, struct gcc_options *);

/* Restore optimization variables from a structure.  */
extern void cl_optimization_restore (struct gcc_options *, struct cl_optimization *);

/* Print optimization variables from a structure.  */
extern void cl_optimization_print (FILE *, int, struct cl_optimization *);

/* Save selected option variables into a structure.  */
extern void cl_target_option_save (struct cl_target_option *, struct gcc_options *);

/* Restore selected option variables from a structure.  */
extern void cl_target_option_restore (struct gcc_options *, struct cl_target_option *);

/* Print target option variables from a structure.  */
extern void cl_target_option_print (FILE *, int, struct cl_target_option *);
#endif

#define MASK_ABORT_NORETURN (1 << 0)
#define OPTION_MASK_ANDROID (1 << 0)
#define MASK_APCS_FLOAT (1 << 1)
#define MASK_APCS_FRAME (1 << 2)
#define MASK_APCS_REENT (1 << 3)
#define MASK_APCS_STACK (1 << 4)
#define MASK_BIG_END (1 << 5)
#define MASK_CALLEE_INTERWORKING (1 << 6)
#define MASK_CALLER_INTERWORKING (1 << 7)
#define MASK_CIRRUS_FIX_INVALID_INSNS (1 << 8)
#define MASK_FPE (1 << 9)
#define MASK_LONG_CALLS (1 << 10)
#define MASK_POKE_FUNCTION_NAME (1 << 11)
#define MASK_SCHED_PROLOG (1 << 12)
#define MASK_SINGLE_PIC_BASE (1 << 13)
#define MASK_THUMB (1 << 14)
#define MASK_INTERWORK (1 << 15)
#define MASK_TPCS_FRAME (1 << 16)
#define MASK_TPCS_LEAF_FRAME (1 << 17)
#define MASK_NEON_VECTORIZE_QUAD (1 << 18)
#define MASK_LITTLE_WORDS (1 << 19)

#define TARGET_ABORT_NORETURN ((target_flags & MASK_ABORT_NORETURN) != 0)
#define OPTION_ANDROID ((flag_android & OPTION_MASK_ANDROID) != 0)
#define TARGET_APCS_FLOAT ((target_flags & MASK_APCS_FLOAT) != 0)
#define TARGET_APCS_FRAME ((target_flags & MASK_APCS_FRAME) != 0)
#define TARGET_APCS_REENT ((target_flags & MASK_APCS_REENT) != 0)
#define TARGET_APCS_STACK ((target_flags & MASK_APCS_STACK) != 0)
#define TARGET_BIG_END ((target_flags & MASK_BIG_END) != 0)
#define TARGET_CALLEE_INTERWORKING ((target_flags & MASK_CALLEE_INTERWORKING) != 0)
#define TARGET_CALLER_INTERWORKING ((target_flags & MASK_CALLER_INTERWORKING) != 0)
#define TARGET_CIRRUS_FIX_INVALID_INSNS ((target_flags & MASK_CIRRUS_FIX_INVALID_INSNS) != 0)
#define TARGET_FPE ((target_flags & MASK_FPE) != 0)
#define TARGET_LONG_CALLS ((target_flags & MASK_LONG_CALLS) != 0)
#define TARGET_POKE_FUNCTION_NAME ((target_flags & MASK_POKE_FUNCTION_NAME) != 0)
#define TARGET_SCHED_PROLOG ((target_flags & MASK_SCHED_PROLOG) != 0)
#define TARGET_SINGLE_PIC_BASE ((target_flags & MASK_SINGLE_PIC_BASE) != 0)
#define TARGET_THUMB ((target_flags & MASK_THUMB) != 0)
#define TARGET_INTERWORK ((target_flags & MASK_INTERWORK) != 0)
#define TARGET_TPCS_FRAME ((target_flags & MASK_TPCS_FRAME) != 0)
#define TARGET_TPCS_LEAF_FRAME ((target_flags & MASK_TPCS_LEAF_FRAME) != 0)
#define TARGET_NEON_VECTORIZE_QUAD ((target_flags & MASK_NEON_VECTORIZE_QUAD) != 0)
#define TARGET_LITTLE_WORDS ((target_flags & MASK_LITTLE_WORDS) != 0)


#define CL_Ada        (1 << 0)
#define CL_C          (1 << 1)
#define CL_CXX        (1 << 2)
#define CL_Fortran    (1 << 3)
#define CL_Go         (1 << 4)
#define CL_Java       (1 << 5)
#define CL_LTO        (1 << 6)
#define CL_ObjC       (1 << 7)
#define CL_ObjCXX     (1 << 8)
#define CL_LANG_ALL   ((1 << 9) - 1)

enum opt_code
{
  OPT____ = 0,                               /* -### */
  /* OPT__CLASSPATH = 1, */                  /* --CLASSPATH */
  /* OPT__all_warnings = 2, */               /* --all-warnings */
  /* OPT__ansi = 3, */                       /* --ansi */
  /* OPT__assemble = 4, */                   /* --assemble */
  /* OPT__assert = 5, */                     /* --assert */
  /* OPT__assert_ = 6, */                    /* --assert= */
  /* OPT__bootclasspath = 7, */              /* --bootclasspath */
  /* OPT__canonical_prefixes = 8, */         /* --canonical-prefixes */
  /* OPT__classpath = 9, */                  /* --classpath */
  /* OPT__comments = 10, */                  /* --comments */
  /* OPT__comments_in_macros = 11, */        /* --comments-in-macros */
  /* OPT__compile = 12, */                   /* --compile */
  /* OPT__coverage = 13, */                  /* --coverage */
  /* OPT__debug = 14, */                     /* --debug */
  /* OPT__define_macro = 15, */              /* --define-macro */
  /* OPT__define_macro_ = 16, */             /* --define-macro= */
  /* OPT__dependencies = 17, */              /* --dependencies */
  /* OPT__dump = 18, */                      /* --dump */
  /* OPT__dump_ = 19, */                     /* --dump= */
  /* OPT__dumpbase = 20, */                  /* --dumpbase */
  /* OPT__dumpdir = 21, */                   /* --dumpdir */
  /* OPT__encoding = 22, */                  /* --encoding */
  /* OPT__entry = 23, */                     /* --entry */
  /* OPT__entry_ = 24, */                    /* --entry= */
  /* OPT__extdirs = 25, */                   /* --extdirs */
  /* OPT__extra_warnings = 26, */            /* --extra-warnings */
  /* OPT__for_assembler = 27, */             /* --for-assembler */
  /* OPT__for_assembler_ = 28, */            /* --for-assembler= */
  /* OPT__for_linker = 29, */                /* --for-linker */
  /* OPT__for_linker_ = 30, */               /* --for-linker= */
  /* OPT__force_link = 31, */                /* --force-link */
  /* OPT__force_link_ = 32, */               /* --force-link= */
  OPT__help = 33,                            /* --help */
  OPT__help_ = 34,                           /* --help= */
  /* OPT__imacros = 35, */                   /* --imacros */
  /* OPT__imacros_ = 36, */                  /* --imacros= */
  /* OPT__include = 37, */                   /* --include */
  /* OPT__include_barrier = 38, */           /* --include-barrier */
  /* OPT__include_directory = 39, */         /* --include-directory */
  /* OPT__include_directory_after = 40, */   /* --include-directory-after */
  /* OPT__include_directory_after_ = 41, */  /* --include-directory-after= */
  /* OPT__include_directory_ = 42, */        /* --include-directory= */
  /* OPT__include_prefix = 43, */            /* --include-prefix */
  /* OPT__include_prefix_ = 44, */           /* --include-prefix= */
  /* OPT__include_with_prefix = 45, */       /* --include-with-prefix */
  /* OPT__include_with_prefix_after = 46, */ /* --include-with-prefix-after */
  /* OPT__include_with_prefix_after_ = 47, *//* --include-with-prefix-after= */
  /* OPT__include_with_prefix_before = 48, *//* --include-with-prefix-before */
  /* OPT__include_with_prefix_before_ = 49, *//* --include-with-prefix-before= */
  /* OPT__include_with_prefix_ = 50, */      /* --include-with-prefix= */
  /* OPT__include_ = 51, */                  /* --include= */
  /* OPT__language = 52, */                  /* --language */
  /* OPT__language_ = 53, */                 /* --language= */
  /* OPT__library_directory = 54, */         /* --library-directory */
  /* OPT__library_directory_ = 55, */        /* --library-directory= */
  /* OPT__no_canonical_prefixes = 56, */     /* --no-canonical-prefixes */
  /* OPT__no_integrated_cpp = 57, */         /* --no-integrated-cpp */
  /* OPT__no_line_commands = 58, */          /* --no-line-commands */
  /* OPT__no_standard_includes = 59, */      /* --no-standard-includes */
  /* OPT__no_standard_libraries = 60, */     /* --no-standard-libraries */
  /* OPT__no_warnings = 61, */               /* --no-warnings */
  /* OPT__optimize = 62, */                  /* --optimize */
  /* OPT__output = 63, */                    /* --output */
  /* OPT__output_class_directory = 64, */    /* --output-class-directory */
  /* OPT__output_class_directory_ = 65, */   /* --output-class-directory= */
  OPT__output_pch_ = 66,                     /* --output-pch= */
  /* OPT__output_ = 67, */                   /* --output= */
  OPT__param = 68,                           /* --param */
  /* OPT__param_ = 69, */                    /* --param= */
  /* OPT__pass_exit_codes = 70, */           /* --pass-exit-codes */
  /* OPT__pedantic = 71, */                  /* --pedantic */
  /* OPT__pedantic_errors = 72, */           /* --pedantic-errors */
  /* OPT__pie = 73, */                       /* --pie */
  /* OPT__pipe = 74, */                      /* --pipe */
  /* OPT__prefix = 75, */                    /* --prefix */
  /* OPT__prefix_ = 76, */                   /* --prefix= */
  /* OPT__preprocess = 77, */                /* --preprocess */
  /* OPT__print_file_name = 78, */           /* --print-file-name */
  /* OPT__print_file_name_ = 79, */          /* --print-file-name= */
  /* OPT__print_libgcc_file_name = 80, */    /* --print-libgcc-file-name */
  /* OPT__print_missing_file_dependencies = 81, *//* --print-missing-file-dependencies */
  /* OPT__print_multi_directory = 82, */     /* --print-multi-directory */
  /* OPT__print_multi_lib = 83, */           /* --print-multi-lib */
  /* OPT__print_multi_os_directory = 84, */  /* --print-multi-os-directory */
  /* OPT__print_prog_name = 85, */           /* --print-prog-name */
  /* OPT__print_prog_name_ = 86, */          /* --print-prog-name= */
  /* OPT__print_search_dirs = 87, */         /* --print-search-dirs */
  /* OPT__print_sysroot = 88, */             /* --print-sysroot */
  /* OPT__print_sysroot_headers_suffix = 89, *//* --print-sysroot-headers-suffix */
  /* OPT__profile = 90, */                   /* --profile */
  /* OPT__resource = 91, */                  /* --resource */
  /* OPT__resource_ = 92, */                 /* --resource= */
  /* OPT__save_temps = 93, */                /* --save-temps */
  /* OPT__shared = 94, */                    /* --shared */
  /* OPT__specs = 95, */                     /* --specs */
  /* OPT__specs_ = 96, */                    /* --specs= */
  /* OPT__static = 97, */                    /* --static */
  /* OPT__symbolic = 98, */                  /* --symbolic */
  /* OPT__sysroot = 99, */                   /* --sysroot */
  OPT__sysroot_ = 100,                       /* --sysroot= */
  OPT__target_help = 101,                    /* --target-help */
  /* OPT__time = 102, */                     /* --time */
  /* OPT__trace_includes = 103, */           /* --trace-includes */
  /* OPT__traditional = 104, */              /* --traditional */
  /* OPT__traditional_cpp = 105, */          /* --traditional-cpp */
  /* OPT__trigraphs = 106, */                /* --trigraphs */
  /* OPT__undefine_macro = 107, */           /* --undefine-macro */
  /* OPT__undefine_macro_ = 108, */          /* --undefine-macro= */
  /* OPT__user_dependencies = 109, */        /* --user-dependencies */
  /* OPT__verbose = 110, */                  /* --verbose */
  OPT__version = 111,                        /* --version */
  /* OPT__write_dependencies = 112, */       /* --write-dependencies */
  /* OPT__write_user_dependencies = 113, */  /* --write-user-dependencies */
  OPT_A = 114,                               /* -A */
  OPT_B = 115,                               /* -B */
  OPT_C = 116,                               /* -C */
  OPT_CC = 117,                              /* -CC */
  /* OPT_CLASSPATH = 118, */                 /* -CLASSPATH */
  OPT_D = 119,                               /* -D */
  OPT_E = 120,                               /* -E */
  OPT_F = 121,                               /* -F */
  OPT_H = 122,                               /* -H */
  OPT_I = 123,                               /* -I */
  OPT_J = 124,                               /* -J */
  OPT_L = 125,                               /* -L */
  OPT_M = 126,                               /* -M */
  OPT_MD = 127,                              /* -MD */
  OPT_MD_ = 128,                             /* -MD_ */
  OPT_MF = 129,                              /* -MF */
  OPT_MG = 130,                              /* -MG */
  OPT_MM = 131,                              /* -MM */
  OPT_MMD = 132,                             /* -MMD */
  OPT_MMD_ = 133,                            /* -MMD_ */
  OPT_MP = 134,                              /* -MP */
  OPT_MQ = 135,                              /* -MQ */
  OPT_MT = 136,                              /* -MT */
  OPT_N = 137,                               /* -N */
  OPT_O = 138,                               /* -O */
  OPT_Ofast = 139,                           /* -Ofast */
  OPT_Os = 140,                              /* -Os */
  OPT_P = 141,                               /* -P */
  OPT_Q = 142,                               /* -Q */
  OPT_Qn = 143,                              /* -Qn */
  OPT_Qy = 144,                              /* -Qy */
  OPT_R = 145,                               /* -R */
  OPT_S = 146,                               /* -S */
  OPT_T = 147,                               /* -T */
  OPT_Tbss = 148,                            /* -Tbss */
  OPT_Tbss_ = 149,                           /* -Tbss= */
  OPT_Tdata = 150,                           /* -Tdata */
  OPT_Tdata_ = 151,                          /* -Tdata= */
  OPT_Ttext = 152,                           /* -Ttext */
  OPT_Ttext_ = 153,                          /* -Ttext= */
  OPT_U = 154,                               /* -U */
  /* OPT_W = 155, */                         /* -W */
  OPT_Wa_ = 156,                             /* -Wa, */
  OPT_Wabi = 157,                            /* -Wabi */
  OPT_Waddress = 158,                        /* -Waddress */
  OPT_Waggregate_return = 159,               /* -Waggregate-return */
  OPT_Waliasing = 160,                       /* -Waliasing */
  OPT_Walign_commons = 161,                  /* -Walign-commons */
  OPT_Wall = 162,                            /* -Wall */
  OPT_Wall_deprecation = 163,                /* -Wall-deprecation */
  OPT_Wall_javadoc = 164,                    /* -Wall-javadoc */
  OPT_Wampersand = 165,                      /* -Wampersand */
  OPT_Warray_bounds = 166,                   /* -Warray-bounds */
  OPT_Warray_temporaries = 167,              /* -Warray-temporaries */
  OPT_Wassert_identifier = 168,              /* -Wassert-identifier */
  OPT_Wassign_intercept = 169,               /* -Wassign-intercept */
  OPT_Wattributes = 170,                     /* -Wattributes */
  OPT_Wbad_function_cast = 171,              /* -Wbad-function-cast */
  OPT_Wboxing = 172,                         /* -Wboxing */
  OPT_Wbuiltin_macro_redefined = 173,        /* -Wbuiltin-macro-redefined */
  OPT_Wc___compat = 174,                     /* -Wc++-compat */
  OPT_Wc__0x_compat = 175,                   /* -Wc++0x-compat */
  /* OPT_Wc__11_compat = 176, */             /* -Wc++11-compat */
  OPT_Wcast_align = 177,                     /* -Wcast-align */
  OPT_Wcast_qual = 178,                      /* -Wcast-qual */
  OPT_Wchar_concat = 179,                    /* -Wchar-concat */
  OPT_Wchar_subscripts = 180,                /* -Wchar-subscripts */
  OPT_Wcharacter_truncation = 181,           /* -Wcharacter-truncation */
  OPT_Wclobbered = 182,                      /* -Wclobbered */
  OPT_Wcomment = 183,                        /* -Wcomment */
  /* OPT_Wcomments = 184, */                 /* -Wcomments */
  OPT_Wcondition_assign = 185,               /* -Wcondition-assign */
  OPT_Wconstructor_name = 186,               /* -Wconstructor-name */
  OPT_Wconversion = 187,                     /* -Wconversion */
  OPT_Wconversion_extra = 188,               /* -Wconversion-extra */
  OPT_Wconversion_null = 189,                /* -Wconversion-null */
  OPT_Wcoverage_mismatch = 190,              /* -Wcoverage-mismatch */
  OPT_Wcpp = 191,                            /* -Wcpp */
  OPT_Wctor_dtor_privacy = 192,              /* -Wctor-dtor-privacy */
  OPT_Wdeclaration_after_statement = 193,    /* -Wdeclaration-after-statement */
  OPT_Wdep_ann = 194,                        /* -Wdep-ann */
  OPT_Wdeprecated = 195,                     /* -Wdeprecated */
  OPT_Wdeprecated_declarations = 196,        /* -Wdeprecated-declarations */
  OPT_Wdisabled_optimization = 197,          /* -Wdisabled-optimization */
  OPT_Wdiscouraged = 198,                    /* -Wdiscouraged */
  OPT_Wdiv_by_zero = 199,                    /* -Wdiv-by-zero */
  OPT_Wdouble_promotion = 200,               /* -Wdouble-promotion */
  OPT_Weffc__ = 201,                         /* -Weffc++ */
  OPT_Wempty_block = 202,                    /* -Wempty-block */
  OPT_Wempty_body = 203,                     /* -Wempty-body */
  OPT_Wendif_labels = 204,                   /* -Wendif-labels */
  OPT_Wenum_compare = 205,                   /* -Wenum-compare */
  OPT_Wenum_identifier = 206,                /* -Wenum-identifier */
  OPT_Wenum_switch = 207,                    /* -Wenum-switch */
  OPT_Werror = 208,                          /* -Werror */
  /* OPT_Werror_implicit_function_declaration = 209, *//* -Werror-implicit-function-declaration */
  OPT_Werror_ = 210,                         /* -Werror= */
  OPT_Wextra = 211,                          /* -Wextra */
  OPT_Wextraneous_semicolon = 212,           /* -Wextraneous-semicolon */
  OPT_Wfallthrough = 213,                    /* -Wfallthrough */
  OPT_Wfatal_errors = 214,                   /* -Wfatal-errors */
  OPT_Wfield_hiding = 215,                   /* -Wfield-hiding */
  OPT_Wfinal_bound = 216,                    /* -Wfinal-bound */
  OPT_Wfinally = 217,                        /* -Wfinally */
  OPT_Wfloat_equal = 218,                    /* -Wfloat-equal */
  OPT_Wforbidden = 219,                      /* -Wforbidden */
  OPT_Wformat = 220,                         /* -Wformat */
  OPT_Wformat_contains_nul = 221,            /* -Wformat-contains-nul */
  OPT_Wformat_extra_args = 222,              /* -Wformat-extra-args */
  OPT_Wformat_nonliteral = 223,              /* -Wformat-nonliteral */
  OPT_Wformat_security = 224,                /* -Wformat-security */
  OPT_Wformat_y2k = 225,                     /* -Wformat-y2k */
  OPT_Wformat_zero_length = 226,             /* -Wformat-zero-length */
  OPT_Wformat_ = 227,                        /* -Wformat= */
  OPT_Wframe_larger_than_ = 228,             /* -Wframe-larger-than= */
  OPT_Whiding = 229,                         /* -Whiding */
  OPT_Wignored_qualifiers = 230,             /* -Wignored-qualifiers */
  OPT_Wimplicit = 231,                       /* -Wimplicit */
  OPT_Wimplicit_function_declaration = 232,  /* -Wimplicit-function-declaration */
  OPT_Wimplicit_int = 233,                   /* -Wimplicit-int */
  OPT_Wimplicit_interface = 234,             /* -Wimplicit-interface */
  OPT_Wimplicit_procedure = 235,             /* -Wimplicit-procedure */
  /* OPT_Wimport = 236, */                   /* -Wimport */
  OPT_Windirect_static = 237,                /* -Windirect-static */
  OPT_Winit_self = 238,                      /* -Winit-self */
  OPT_Winline = 239,                         /* -Winline */
  OPT_Wint_to_pointer_cast = 240,            /* -Wint-to-pointer-cast */
  OPT_Wintf_annotation = 241,                /* -Wintf-annotation */
  OPT_Wintf_non_inherited = 242,             /* -Wintf-non-inherited */
  OPT_Wintrinsic_shadow = 243,               /* -Wintrinsic-shadow */
  OPT_Wintrinsics_std = 244,                 /* -Wintrinsics-std */
  OPT_Winvalid_offsetof = 245,               /* -Winvalid-offsetof */
  OPT_Winvalid_pch = 246,                    /* -Winvalid-pch */
  OPT_Wjavadoc = 247,                        /* -Wjavadoc */
  OPT_Wjump_misses_init = 248,               /* -Wjump-misses-init */
  OPT_Wl_ = 249,                             /* -Wl, */
  /* OPT_Wlarger_than_ = 250, */             /* -Wlarger-than- */
  OPT_Wlarger_than_ = 251,                   /* -Wlarger-than= */
  OPT_Wline_truncation = 252,                /* -Wline-truncation */
  OPT_Wlocal_hiding = 253,                   /* -Wlocal-hiding */
  OPT_Wlogical_op = 254,                     /* -Wlogical-op */
  OPT_Wlong_long = 255,                      /* -Wlong-long */
  OPT_Wmain = 256,                           /* -Wmain */
  OPT_Wmasked_catch_block = 257,             /* -Wmasked-catch-block */
  OPT_Wmaybe_uninitialized = 258,            /* -Wmaybe-uninitialized */
  OPT_Wmissing_braces = 259,                 /* -Wmissing-braces */
  OPT_Wmissing_declarations = 260,           /* -Wmissing-declarations */
  OPT_Wmissing_field_initializers = 261,     /* -Wmissing-field-initializers */
  OPT_Wmissing_format_attribute = 262,       /* -Wmissing-format-attribute */
  OPT_Wmissing_include_dirs = 263,           /* -Wmissing-include-dirs */
  OPT_Wmissing_noreturn = 264,               /* -Wmissing-noreturn */
  OPT_Wmissing_parameter_type = 265,         /* -Wmissing-parameter-type */
  OPT_Wmissing_prototypes = 266,             /* -Wmissing-prototypes */
  OPT_Wmudflap = 267,                        /* -Wmudflap */
  OPT_Wmultichar = 268,                      /* -Wmultichar */
  OPT_Wnarrowing = 269,                      /* -Wnarrowing */
  OPT_Wnested_externs = 270,                 /* -Wnested-externs */
  OPT_Wnls = 271,                            /* -Wnls */
  OPT_Wno_effect_assign = 272,               /* -Wno-effect-assign */
  OPT_Wnoexcept = 273,                       /* -Wnoexcept */
  OPT_Wnon_template_friend = 274,            /* -Wnon-template-friend */
  OPT_Wnon_virtual_dtor = 275,               /* -Wnon-virtual-dtor */
  OPT_Wnonnull = 276,                        /* -Wnonnull */
  OPT_Wnormalized_ = 277,                    /* -Wnormalized= */
  OPT_Wnull = 278,                           /* -Wnull */
  OPT_Wold_style_cast = 279,                 /* -Wold-style-cast */
  OPT_Wold_style_declaration = 280,          /* -Wold-style-declaration */
  OPT_Wold_style_definition = 281,           /* -Wold-style-definition */
  OPT_Wout_of_date = 282,                    /* -Wout-of-date */
  OPT_Wover_ann = 283,                       /* -Wover-ann */
  OPT_Woverflow = 284,                       /* -Woverflow */
  OPT_Woverlength_strings = 285,             /* -Woverlength-strings */
  OPT_Woverloaded_virtual = 286,             /* -Woverloaded-virtual */
  OPT_Woverride_init = 287,                  /* -Woverride-init */
  OPT_Wp_ = 288,                             /* -Wp, */
  OPT_Wpacked = 289,                         /* -Wpacked */
  OPT_Wpacked_bitfield_compat = 290,         /* -Wpacked-bitfield-compat */
  OPT_Wpadded = 291,                         /* -Wpadded */
  OPT_Wparam_assign = 292,                   /* -Wparam-assign */
  OPT_Wparentheses = 293,                    /* -Wparentheses */
  OPT_Wpkg_default_method = 294,             /* -Wpkg-default-method */
  OPT_Wpmf_conversions = 295,                /* -Wpmf-conversions */
  OPT_Wpointer_arith = 296,                  /* -Wpointer-arith */
  OPT_Wpointer_sign = 297,                   /* -Wpointer-sign */
  OPT_Wpointer_to_int_cast = 298,            /* -Wpointer-to-int-cast */
  OPT_Wpragmas = 299,                        /* -Wpragmas */
  OPT_Wproperty_assign_default = 300,        /* -Wproperty-assign-default */
  OPT_Wprotocol = 301,                       /* -Wprotocol */
  OPT_Wpsabi = 302,                          /* -Wpsabi */
  OPT_Wraw = 303,                            /* -Wraw */
  OPT_Wreal_conversion = 304,                /* -Wreal-conversion */
  OPT_Wreal_q_constant = 305,                /* -Wreal-q-constant */
  OPT_Wredundant_decls = 306,                /* -Wredundant-decls */
  OPT_Wredundant_modifiers = 307,            /* -Wredundant-modifiers */
  OPT_Wreorder = 308,                        /* -Wreorder */
  OPT_Wreturn_type = 309,                    /* -Wreturn-type */
  OPT_Wripa_opt_mismatch = 310,              /* -Wripa-opt-mismatch */
  OPT_Wselector = 311,                       /* -Wselector */
  OPT_Wself_assign = 312,                    /* -Wself-assign */
  OPT_Wself_assign_non_pod = 313,            /* -Wself-assign-non-pod */
  OPT_Wsequence_point = 314,                 /* -Wsequence-point */
  OPT_Wserial = 315,                         /* -Wserial */
  OPT_Wshadow = 316,                         /* -Wshadow */
  OPT_Wshadow_compatible_local = 317,        /* -Wshadow-compatible-local */
  OPT_Wshadow_local = 318,                   /* -Wshadow-local */
  OPT_Wsign_compare = 319,                   /* -Wsign-compare */
  OPT_Wsign_conversion = 320,                /* -Wsign-conversion */
  OPT_Wsign_promo = 321,                     /* -Wsign-promo */
  OPT_Wspecial_param_hiding = 322,           /* -Wspecial-param-hiding */
  OPT_Wstack_protector = 323,                /* -Wstack-protector */
  OPT_Wstatic_access = 324,                  /* -Wstatic-access */
  OPT_Wstatic_receiver = 325,                /* -Wstatic-receiver */
  OPT_Wstrict_aliasing = 326,                /* -Wstrict-aliasing */
  OPT_Wstrict_aliasing_ = 327,               /* -Wstrict-aliasing= */
  OPT_Wstrict_null_sentinel = 328,           /* -Wstrict-null-sentinel */
  OPT_Wstrict_overflow = 329,                /* -Wstrict-overflow */
  OPT_Wstrict_overflow_ = 330,               /* -Wstrict-overflow= */
  OPT_Wstrict_prototypes = 331,              /* -Wstrict-prototypes */
  OPT_Wstrict_selector_match = 332,          /* -Wstrict-selector-match */
  OPT_Wsuggest_attribute_const = 333,        /* -Wsuggest-attribute=const */
  OPT_Wsuggest_attribute_noreturn = 334,     /* -Wsuggest-attribute=noreturn */
  OPT_Wsuggest_attribute_pure = 335,         /* -Wsuggest-attribute=pure */
  OPT_Wsuppress = 336,                       /* -Wsuppress */
  OPT_Wsurprising = 337,                     /* -Wsurprising */
  OPT_Wswitch = 338,                         /* -Wswitch */
  OPT_Wswitch_default = 339,                 /* -Wswitch-default */
  OPT_Wswitch_enum = 340,                    /* -Wswitch-enum */
  OPT_Wsync_nand = 341,                      /* -Wsync-nand */
  OPT_Wsynth = 342,                          /* -Wsynth */
  OPT_Wsynthetic_access = 343,               /* -Wsynthetic-access */
  OPT_Wsystem_headers = 344,                 /* -Wsystem-headers */
  OPT_Wtabs = 345,                           /* -Wtabs */
  OPT_Wtasks = 346,                          /* -Wtasks */
  OPT_Wthread_attr_bind_param = 347,         /* -Wthread-attr-bind-param */
  OPT_Wthread_mismatched_lock_acq_rel = 348, /* -Wthread-mismatched-lock-acq-rel */
  OPT_Wthread_mismatched_lock_order = 349,   /* -Wthread-mismatched-lock-order */
  OPT_Wthread_reentrant_lock = 350,          /* -Wthread-reentrant-lock */
  OPT_Wthread_safety = 351,                  /* -Wthread-safety */
  OPT_Wthread_unguarded_func = 352,          /* -Wthread-unguarded-func */
  OPT_Wthread_unguarded_var = 353,           /* -Wthread-unguarded-var */
  OPT_Wthread_unsupported_lock_name = 354,   /* -Wthread-unsupported-lock-name */
  OPT_Wthread_warn_optimization = 355,       /* -Wthread-warn-optimization */
  OPT_Wtraditional = 356,                    /* -Wtraditional */
  OPT_Wtraditional_conversion = 357,         /* -Wtraditional-conversion */
  OPT_Wtrampolines = 358,                    /* -Wtrampolines */
  OPT_Wtrigraphs = 359,                      /* -Wtrigraphs */
  OPT_Wtype_hiding = 360,                    /* -Wtype-hiding */
  OPT_Wtype_limits = 361,                    /* -Wtype-limits */
  OPT_Wuncheck = 362,                        /* -Wuncheck */
  OPT_Wundeclared_selector = 363,            /* -Wundeclared-selector */
  OPT_Wundef = 364,                          /* -Wundef */
  OPT_Wunderflow = 365,                      /* -Wunderflow */
  OPT_Wuninitialized = 366,                  /* -Wuninitialized */
  OPT_Wunknown_pragmas = 367,                /* -Wunknown-pragmas */
  OPT_Wunnecessary_else = 368,               /* -Wunnecessary-else */
  OPT_Wunqualified_field = 369,              /* -Wunqualified-field */
  /* OPT_Wunreachable_code = 370, */         /* -Wunreachable-code */
  OPT_Wunsafe_loop_optimizations = 371,      /* -Wunsafe-loop-optimizations */
  OPT_Wunsuffixed_float_constants = 372,     /* -Wunsuffixed-float-constants */
  OPT_Wunused = 373,                         /* -Wunused */
  OPT_Wunused_argument = 374,                /* -Wunused-argument */
  OPT_Wunused_but_set_parameter = 375,       /* -Wunused-but-set-parameter */
  OPT_Wunused_but_set_variable = 376,        /* -Wunused-but-set-variable */
  OPT_Wunused_dummy_argument = 377,          /* -Wunused-dummy-argument */
  OPT_Wunused_function = 378,                /* -Wunused-function */
  OPT_Wunused_import = 379,                  /* -Wunused-import */
  OPT_Wunused_label = 380,                   /* -Wunused-label */
  OPT_Wunused_local = 381,                   /* -Wunused-local */
  OPT_Wunused_macros = 382,                  /* -Wunused-macros */
  OPT_Wunused_parameter = 383,               /* -Wunused-parameter */
  OPT_Wunused_private = 384,                 /* -Wunused-private */
  OPT_Wunused_result = 385,                  /* -Wunused-result */
  OPT_Wunused_thrown = 386,                  /* -Wunused-thrown */
  OPT_Wunused_value = 387,                   /* -Wunused-value */
  OPT_Wunused_variable = 388,                /* -Wunused-variable */
  OPT_Wuseless_type_check = 389,             /* -Wuseless-type-check */
  OPT_Wvarargs_cast = 390,                   /* -Wvarargs-cast */
  OPT_Wvariadic_macros = 391,                /* -Wvariadic-macros */
  OPT_Wvla = 392,                            /* -Wvla */
  OPT_Wvolatile_register_var = 393,          /* -Wvolatile-register-var */
  OPT_Wwarning_token = 394,                  /* -Wwarning-token */
  OPT_Wwrite_strings = 395,                  /* -Wwrite-strings */
  OPT_Xassembler = 396,                      /* -Xassembler */
  OPT_Xlinker = 397,                         /* -Xlinker */
  OPT_Xpreprocessor = 398,                   /* -Xpreprocessor */
  OPT_Z = 399,                               /* -Z */
  OPT_ansi = 400,                            /* -ansi */
  OPT_aux_info = 401,                        /* -aux-info */
  /* OPT_aux_info_ = 402, */                 /* -aux-info= */
  OPT_auxbase = 403,                         /* -auxbase */
  OPT_auxbase_strip = 404,                   /* -auxbase-strip */
  /* OPT_bootclasspath = 405, */             /* -bootclasspath */
  OPT_c = 406,                               /* -c */
  OPT_canonical_prefixes = 407,              /* -canonical-prefixes */
  /* OPT_classpath = 408, */                 /* -classpath */
  OPT_coverage = 409,                        /* -coverage */
  OPT_cpp = 410,                             /* -cpp */
  OPT_cpp_ = 411,                            /* -cpp= */
  OPT_d = 412,                               /* -d */
  OPT_dumpbase = 413,                        /* -dumpbase */
  OPT_dumpdir = 414,                         /* -dumpdir */
  OPT_dumpmachine = 415,                     /* -dumpmachine */
  OPT_dumpspecs = 416,                       /* -dumpspecs */
  OPT_dumpversion = 417,                     /* -dumpversion */
  OPT_e = 418,                               /* -e */
  /* OPT_encoding = 419, */                  /* -encoding */
  OPT_export_dynamic = 420,                  /* -export-dynamic */
  OPT_extdirs = 421,                         /* -extdirs */
  /* OPT_fCLASSPATH_ = 422, */               /* -fCLASSPATH= */
  OPT_fPIC = 423,                            /* -fPIC */
  OPT_fPIE = 424,                            /* -fPIE */
  OPT_fRTS_ = 425,                           /* -fRTS= */
  OPT_fabi_version_ = 426,                   /* -fabi-version= */
  OPT_faccess_control = 427,                 /* -faccess-control */
  OPT_falign_commons = 428,                  /* -falign-commons */
  OPT_falign_functions = 429,                /* -falign-functions */
  OPT_falign_functions_ = 430,               /* -falign-functions= */
  OPT_falign_jumps = 431,                    /* -falign-jumps */
  OPT_falign_jumps_ = 432,                   /* -falign-jumps= */
  OPT_falign_labels = 433,                   /* -falign-labels */
  OPT_falign_labels_ = 434,                  /* -falign-labels= */
  OPT_falign_loops = 435,                    /* -falign-loops */
  OPT_falign_loops_ = 436,                   /* -falign-loops= */
  OPT_fall_intrinsics = 437,                 /* -fall-intrinsics */
  /* OPT_fall_virtual = 438, */              /* -fall-virtual */
  OPT_fallow_leading_underscore = 439,       /* -fallow-leading-underscore */
  /* OPT_falt_external_templates = 440, */   /* -falt-external-templates */
  /* OPT_fargument_alias = 441, */           /* -fargument-alias */
  /* OPT_fargument_noalias = 442, */         /* -fargument-noalias */
  /* OPT_fargument_noalias_anything = 443, *//* -fargument-noalias-anything */
  /* OPT_fargument_noalias_global = 444, */  /* -fargument-noalias-global */
  OPT_fasm = 445,                            /* -fasm */
  OPT_fassert = 446,                         /* -fassert */
  OPT_fassociative_math = 447,               /* -fassociative-math */
  OPT_fassume_compiled = 448,                /* -fassume-compiled */
  OPT_fassume_compiled_ = 449,               /* -fassume-compiled= */
  OPT_fasynchronous_unwind_tables = 450,     /* -fasynchronous-unwind-tables */
  OPT_fauto_inc_dec = 451,                   /* -fauto-inc-dec */
  OPT_fautomatic = 452,                      /* -fautomatic */
  OPT_faux_classpath = 453,                  /* -faux-classpath */
  OPT_fbackslash = 454,                      /* -fbackslash */
  OPT_fbacktrace = 455,                      /* -fbacktrace */
  OPT_fblas_matmul_limit_ = 456,             /* -fblas-matmul-limit= */
  OPT_fbootclasspath_ = 457,                 /* -fbootclasspath= */
  OPT_fbootstrap_classes = 458,              /* -fbootstrap-classes */
  OPT_fbounds_check = 459,                   /* -fbounds-check */
  OPT_fbranch_count_reg = 460,               /* -fbranch-count-reg */
  OPT_fbranch_probabilities = 461,           /* -fbranch-probabilities */
  OPT_fbranch_target_load_optimize = 462,    /* -fbranch-target-load-optimize */
  OPT_fbranch_target_load_optimize2 = 463,   /* -fbranch-target-load-optimize2 */
  OPT_fbtr_bb_exclusive = 464,               /* -fbtr-bb-exclusive */
  OPT_fbuiltin = 465,                        /* -fbuiltin */
  OPT_fbuiltin_ = 466,                       /* -fbuiltin- */
  OPT_fcall_saved_ = 467,                    /* -fcall-saved- */
  OPT_fcall_used_ = 468,                     /* -fcall-used- */
  OPT_fcaller_saves = 469,                   /* -fcaller-saves */
  OPT_fcallgraph_profiles_sections = 470,    /* -fcallgraph-profiles-sections */
  OPT_fcheck_array_temporaries = 471,        /* -fcheck-array-temporaries */
  OPT_fcheck_data_deps = 472,                /* -fcheck-data-deps */
  OPT_fcheck_new = 473,                      /* -fcheck-new */
  OPT_fcheck_references = 474,               /* -fcheck-references */
  OPT_fcheck_ = 475,                         /* -fcheck= */
  OPT_fclasspath_ = 476,                     /* -fclasspath= */
  OPT_fclone_hot_version_paths = 477,        /* -fclone-hot-version-paths */
  OPT_fcoarray_ = 478,                       /* -fcoarray= */
  OPT_fcombine_stack_adjustments = 479,      /* -fcombine-stack-adjustments */
  OPT_fcommon = 480,                         /* -fcommon */
  OPT_fcompare_debug = 481,                  /* -fcompare-debug */
  OPT_fcompare_debug_second = 482,           /* -fcompare-debug-second */
  OPT_fcompare_debug_ = 483,                 /* -fcompare-debug= */
  OPT_fcompare_elim = 484,                   /* -fcompare-elim */
  OPT_fcompile_resource_ = 485,              /* -fcompile-resource= */
  OPT_fcond_mismatch = 486,                  /* -fcond-mismatch */
  OPT_fconserve_space = 487,                 /* -fconserve-space */
  OPT_fconserve_stack = 488,                 /* -fconserve-stack */
  OPT_fconstant_string_class_ = 489,         /* -fconstant-string-class= */
  OPT_fconstexpr_depth_ = 490,               /* -fconstexpr-depth= */
  OPT_fconvert_big_endian = 491,             /* -fconvert=big-endian */
  OPT_fconvert_little_endian = 492,          /* -fconvert=little-endian */
  OPT_fconvert_native = 493,                 /* -fconvert=native */
  OPT_fconvert_swap = 494,                   /* -fconvert=swap */
  OPT_fcprop_registers = 495,                /* -fcprop-registers */
  OPT_fcray_pointer = 496,                   /* -fcray-pointer */
  OPT_fcrossjumping = 497,                   /* -fcrossjumping */
  OPT_fcse_follow_jumps = 498,               /* -fcse-follow-jumps */
  /* OPT_fcse_skip_blocks = 499, */          /* -fcse-skip-blocks */
  OPT_fcx_fortran_rules = 500,               /* -fcx-fortran-rules */
  OPT_fcx_limited_range = 501,               /* -fcx-limited-range */
  OPT_fd_lines_as_code = 502,                /* -fd-lines-as-code */
  OPT_fd_lines_as_comments = 503,            /* -fd-lines-as-comments */
  OPT_fdata_sections = 504,                  /* -fdata-sections */
  OPT_fdbg_cnt_list = 505,                   /* -fdbg-cnt-list */
  OPT_fdbg_cnt_ = 506,                       /* -fdbg-cnt= */
  OPT_fdce = 507,                            /* -fdce */
  OPT_fdebug_prefix_map_ = 508,              /* -fdebug-prefix-map= */
  OPT_fdeduce_init_list = 509,               /* -fdeduce-init-list */
  OPT_fdefault_double_8 = 510,               /* -fdefault-double-8 */
  /* OPT_fdefault_inline = 511, */           /* -fdefault-inline */
  OPT_fdefault_integer_8 = 512,              /* -fdefault-integer-8 */
  OPT_fdefault_real_8 = 513,                 /* -fdefault-real-8 */
  OPT_fdefer_pop = 514,                      /* -fdefer-pop */
  OPT_fdelayed_branch = 515,                 /* -fdelayed-branch */
  OPT_fdelete_null_pointer_checks = 516,     /* -fdelete-null-pointer-checks */
  OPT_fdevirtualize = 517,                   /* -fdevirtualize */
  OPT_fdiagnostics_show_location_ = 518,     /* -fdiagnostics-show-location= */
  OPT_fdiagnostics_show_option = 519,        /* -fdiagnostics-show-option */
  OPT_fdirectives_only = 520,                /* -fdirectives-only */
  OPT_fdisable_ = 521,                       /* -fdisable- */
  OPT_fdisable_assertions = 522,             /* -fdisable-assertions */
  OPT_fdisable_assertions_ = 523,            /* -fdisable-assertions= */
  OPT_fdollar_ok = 524,                      /* -fdollar-ok */
  OPT_fdollars_in_identifiers = 525,         /* -fdollars-in-identifiers */
  OPT_fdse = 526,                            /* -fdse */
  OPT_fdump_ = 527,                          /* -fdump- */
  OPT_fdump_core = 528,                      /* -fdump-core */
  OPT_fdump_final_insns = 529,               /* -fdump-final-insns */
  OPT_fdump_final_insns_ = 530,              /* -fdump-final-insns= */
  OPT_fdump_fortran_optimized = 531,         /* -fdump-fortran-optimized */
  OPT_fdump_fortran_original = 532,          /* -fdump-fortran-original */
  OPT_fdump_go_spec_ = 533,                  /* -fdump-go-spec= */
  OPT_fdump_noaddr = 534,                    /* -fdump-noaddr */
  OPT_fdump_parse_tree = 535,                /* -fdump-parse-tree */
  OPT_fdump_passes = 536,                    /* -fdump-passes */
  OPT_fdump_unnumbered = 537,                /* -fdump-unnumbered */
  OPT_fdump_unnumbered_links = 538,          /* -fdump-unnumbered-links */
  OPT_fdwarf2_cfi_asm = 539,                 /* -fdwarf2-cfi-asm */
  OPT_fearly_inlining = 540,                 /* -fearly-inlining */
  OPT_felide_constructors = 541,             /* -felide-constructors */
  OPT_feliminate_dwarf2_dups = 542,          /* -feliminate-dwarf2-dups */
  OPT_feliminate_unused_debug_symbols = 543, /* -feliminate-unused-debug-symbols */
  OPT_feliminate_unused_debug_types = 544,   /* -feliminate-unused-debug-types */
  OPT_femit_class_debug_always = 545,        /* -femit-class-debug-always */
  OPT_femit_class_file = 546,                /* -femit-class-file */
  OPT_femit_class_files = 547,               /* -femit-class-files */
  OPT_femit_struct_debug_baseonly = 548,     /* -femit-struct-debug-baseonly */
  OPT_femit_struct_debug_detailed_ = 549,    /* -femit-struct-debug-detailed= */
  OPT_femit_struct_debug_reduced = 550,      /* -femit-struct-debug-reduced */
  OPT_fenable_ = 551,                        /* -fenable- */
  OPT_fenable_assertions = 552,              /* -fenable-assertions */
  OPT_fenable_assertions_ = 553,             /* -fenable-assertions= */
  OPT_fenable_icf_debug = 554,               /* -fenable-icf-debug */
  OPT_fencoding_ = 555,                      /* -fencoding= */
  OPT_fenforce_eh_specs = 556,               /* -fenforce-eh-specs */
  /* OPT_fenum_int_equiv = 557, */           /* -fenum-int-equiv */
  OPT_fexceptions = 558,                     /* -fexceptions */
  OPT_fexcess_precision_ = 559,              /* -fexcess-precision= */
  OPT_fexec_charset_ = 560,                  /* -fexec-charset= */
  OPT_fexpensive_optimizations = 561,        /* -fexpensive-optimizations */
  OPT_fextdirs_ = 562,                       /* -fextdirs= */
  OPT_fextended_identifiers = 563,           /* -fextended-identifiers */
  OPT_fexternal_blas = 564,                  /* -fexternal-blas */
  /* OPT_fexternal_templates = 565, */       /* -fexternal-templates */
  OPT_ff2c = 566,                            /* -ff2c */
  OPT_ffast_math = 567,                      /* -ffast-math */
  OPT_ffilelist_file = 568,                  /* -ffilelist-file */
  OPT_ffinite_math_only = 569,               /* -ffinite-math-only */
  OPT_ffixed_ = 570,                         /* -ffixed- */
  OPT_ffixed_form = 571,                     /* -ffixed-form */
  OPT_ffixed_line_length_ = 572,             /* -ffixed-line-length- */
  OPT_ffixed_line_length_none = 573,         /* -ffixed-line-length-none */
  OPT_ffloat_store = 574,                    /* -ffloat-store */
  OPT_ffor_scope = 575,                      /* -ffor-scope */
  /* OPT_fforce_addr = 576, */               /* -fforce-addr */
  OPT_fforce_classes_archive_check = 577,    /* -fforce-classes-archive-check */
  OPT_fforward_propagate = 578,              /* -fforward-propagate */
  OPT_ffp_contract_ = 579,                   /* -ffp-contract= */
  OPT_ffpe_trap_ = 580,                      /* -ffpe-trap= */
  OPT_ffree_form = 581,                      /* -ffree-form */
  OPT_ffree_line_length_ = 582,              /* -ffree-line-length- */
  OPT_ffree_line_length_none = 583,          /* -ffree-line-length-none */
  OPT_ffreestanding = 584,                   /* -ffreestanding */
  OPT_ffriend_injection = 585,               /* -ffriend-injection */
  OPT_ffunction_cse = 586,                   /* -ffunction-cse */
  OPT_ffunction_sections = 587,              /* -ffunction-sections */
  OPT_fgcse = 588,                           /* -fgcse */
  OPT_fgcse_after_reload = 589,              /* -fgcse-after-reload */
  OPT_fgcse_las = 590,                       /* -fgcse-las */
  OPT_fgcse_lm = 591,                        /* -fgcse-lm */
  OPT_fgcse_sm = 592,                        /* -fgcse-sm */
  OPT_fgnu_keywords = 593,                   /* -fgnu-keywords */
  OPT_fgnu_runtime = 594,                    /* -fgnu-runtime */
  OPT_fgnu89_inline = 595,                   /* -fgnu89-inline */
  OPT_fgo_dump_ = 596,                       /* -fgo-dump- */
  OPT_fgo_prefix_ = 597,                     /* -fgo-prefix= */
  OPT_fgraphite = 598,                       /* -fgraphite */
  OPT_fgraphite_identity = 599,              /* -fgraphite-identity */
  OPT_fguess_branch_probability = 600,       /* -fguess-branch-probability */
  /* OPT_fguiding_decls = 601, */            /* -fguiding-decls */
  /* OPT_fhandle_exceptions = 602, */        /* -fhandle-exceptions */
  OPT_fhash_synchronization = 603,           /* -fhash-synchronization */
  /* OPT_fhelp = 604, */                     /* -fhelp */
  /* OPT_fhelp_ = 605, */                    /* -fhelp= */
  /* OPT_fhonor_std = 606, */                /* -fhonor-std */
  OPT_fhosted = 607,                         /* -fhosted */
  /* OPT_fhuge_objects = 608, */             /* -fhuge-objects */
  OPT_fident = 609,                          /* -fident */
  OPT_fif_conversion = 610,                  /* -fif-conversion */
  OPT_fif_conversion2 = 611,                 /* -fif-conversion2 */
  OPT_fimplement_inlines = 612,              /* -fimplement-inlines */
  OPT_fimplicit_inline_templates = 613,      /* -fimplicit-inline-templates */
  OPT_fimplicit_none = 614,                  /* -fimplicit-none */
  OPT_fimplicit_templates = 615,             /* -fimplicit-templates */
  OPT_findirect_classes = 616,               /* -findirect-classes */
  OPT_findirect_dispatch = 617,              /* -findirect-dispatch */
  OPT_findirect_inlining = 618,              /* -findirect-inlining */
  OPT_finhibit_size_directive = 619,         /* -finhibit-size-directive */
  OPT_finit_character_ = 620,                /* -finit-character= */
  OPT_finit_integer_ = 621,                  /* -finit-integer= */
  OPT_finit_local_zero = 622,                /* -finit-local-zero */
  OPT_finit_logical_ = 623,                  /* -finit-logical= */
  OPT_finit_real_ = 624,                     /* -finit-real= */
  OPT_finline = 625,                         /* -finline */
  OPT_finline_functions = 626,               /* -finline-functions */
  OPT_finline_functions_called_once = 627,   /* -finline-functions-called-once */
  OPT_finline_hot_caller = 628,              /* -finline-hot-caller */
  /* OPT_finline_limit_ = 629, */            /* -finline-limit- */
  OPT_finline_limit_ = 630,                  /* -finline-limit= */
  OPT_finline_small_functions = 631,         /* -finline-small-functions */
  OPT_finput_charset_ = 632,                 /* -finput-charset= */
  OPT_finstrument_functions = 633,           /* -finstrument-functions */
  OPT_finstrument_functions_exclude_file_list_ = 634,/* -finstrument-functions-exclude-file-list= */
  OPT_finstrument_functions_exclude_function_list_ = 635,/* -finstrument-functions-exclude-function-list= */
  OPT_fintrinsic_modules_path = 636,         /* -fintrinsic-modules-path */
  OPT_fipa_cp = 637,                         /* -fipa-cp */
  OPT_fipa_cp_clone = 638,                   /* -fipa-cp-clone */
  OPT_fipa_matrix_reorg = 639,               /* -fipa-matrix-reorg */
  OPT_fipa_profile = 640,                    /* -fipa-profile */
  OPT_fipa_pta = 641,                        /* -fipa-pta */
  OPT_fipa_pure_const = 642,                 /* -fipa-pure-const */
  OPT_fipa_reference = 643,                  /* -fipa-reference */
  OPT_fipa_sra = 644,                        /* -fipa-sra */
  OPT_fipa_struct_reorg = 645,               /* -fipa-struct-reorg */
  OPT_fira_algorithm_ = 646,                 /* -fira-algorithm= */
  OPT_fira_loop_pressure = 647,              /* -fira-loop-pressure */
  OPT_fira_region_ = 648,                    /* -fira-region= */
  OPT_fira_share_save_slots = 649,           /* -fira-share-save-slots */
  OPT_fira_share_spill_slots = 650,          /* -fira-share-spill-slots */
  OPT_fira_verbose_ = 651,                   /* -fira-verbose= */
  OPT_fivopts = 652,                         /* -fivopts */
  OPT_fjni = 653,                            /* -fjni */
  OPT_fjump_tables = 654,                    /* -fjump-tables */
  OPT_fkeep_inline_dllexport = 655,          /* -fkeep-inline-dllexport */
  OPT_fkeep_inline_functions = 656,          /* -fkeep-inline-functions */
  OPT_fkeep_static_consts = 657,             /* -fkeep-static-consts */
  /* OPT_flabels_ok = 658, */                /* -flabels-ok */
  OPT_flax_vector_conversions = 659,         /* -flax-vector-conversions */
  OPT_fleading_underscore = 660,             /* -fleading-underscore */
  OPT_floop_block = 661,                     /* -floop-block */
  OPT_floop_flatten = 662,                   /* -floop-flatten */
  OPT_floop_interchange = 663,               /* -floop-interchange */
  /* OPT_floop_optimize = 664, */            /* -floop-optimize */
  OPT_floop_parallelize_all = 665,           /* -floop-parallelize-all */
  OPT_floop_strip_mine = 666,                /* -floop-strip-mine */
  OPT_flto = 667,                            /* -flto */
  OPT_flto_compression_level_ = 668,         /* -flto-compression-level= */
  OPT_flto_partition_1to1 = 669,             /* -flto-partition=1to1 */
  OPT_flto_partition_balanced = 670,         /* -flto-partition=balanced */
  OPT_flto_partition_none = 671,             /* -flto-partition=none */
  OPT_flto_report = 672,                     /* -flto-report */
  OPT_flto_ = 673,                           /* -flto= */
  OPT_fltrans = 674,                         /* -fltrans */
  OPT_fltrans_output_list_ = 675,            /* -fltrans-output-list= */
  OPT_fmain_ = 676,                          /* -fmain= */
  OPT_fmath_errno = 677,                     /* -fmath-errno */
  OPT_fmax_array_constructor_ = 678,         /* -fmax-array-constructor= */
  OPT_fmax_errors_ = 679,                    /* -fmax-errors= */
  OPT_fmax_identifier_length_ = 680,         /* -fmax-identifier-length= */
  OPT_fmax_stack_var_size_ = 681,            /* -fmax-stack-var-size= */
  OPT_fmax_subrecord_length_ = 682,          /* -fmax-subrecord-length= */
  OPT_fmem_report = 683,                     /* -fmem-report */
  OPT_fmerge_all_constants = 684,            /* -fmerge-all-constants */
  OPT_fmerge_constants = 685,                /* -fmerge-constants */
  OPT_fmerge_debug_strings = 686,            /* -fmerge-debug-strings */
  OPT_fmessage_length_ = 687,                /* -fmessage-length= */
  OPT_fmodule_private = 688,                 /* -fmodule-private */
  OPT_fmodulo_sched = 689,                   /* -fmodulo-sched */
  OPT_fmodulo_sched_allow_regmoves = 690,    /* -fmodulo-sched-allow-regmoves */
  OPT_fmove_loop_invariants = 691,           /* -fmove-loop-invariants */
  OPT_fms_extensions = 692,                  /* -fms-extensions */
  OPT_fmudflap = 693,                        /* -fmudflap */
  OPT_fmudflapir = 694,                      /* -fmudflapir */
  OPT_fmudflapth = 695,                      /* -fmudflapth */
  /* OPT_fname_mangling_version_ = 696, */   /* -fname-mangling-version- */
  /* OPT_fnew_abi = 697, */                  /* -fnew-abi */
  OPT_fnext_runtime = 698,                   /* -fnext-runtime */
  OPT_fnil_receivers = 699,                  /* -fnil-receivers */
  OPT_fnon_call_exceptions = 700,            /* -fnon-call-exceptions */
  OPT_fnonansi_builtins = 701,               /* -fnonansi-builtins */
  /* OPT_fnonnull_objects = 702, */          /* -fnonnull-objects */
  OPT_fnothrow_opt = 703,                    /* -fnothrow-opt */
  OPT_fobjc_abi_version_ = 704,              /* -fobjc-abi-version= */
  OPT_fobjc_call_cxx_cdtors = 705,           /* -fobjc-call-cxx-cdtors */
  OPT_fobjc_direct_dispatch = 706,           /* -fobjc-direct-dispatch */
  OPT_fobjc_exceptions = 707,                /* -fobjc-exceptions */
  OPT_fobjc_gc = 708,                        /* -fobjc-gc */
  OPT_fobjc_nilcheck = 709,                  /* -fobjc-nilcheck */
  OPT_fobjc_sjlj_exceptions = 710,           /* -fobjc-sjlj-exceptions */
  OPT_fobjc_std_objc1 = 711,                 /* -fobjc-std=objc1 */
  OPT_fomit_frame_pointer = 712,             /* -fomit-frame-pointer */
  OPT_fopenmp = 713,                         /* -fopenmp */
  OPT_foperator_names = 714,                 /* -foperator-names */
  OPT_fopt_info = 715,                       /* -fopt-info */
  OPT_fopt_info_ = 716,                      /* -fopt-info= */
  OPT_foptimize_locality = 717,              /* -foptimize-locality */
  OPT_foptimize_register_move = 718,         /* -foptimize-register-move */
  OPT_foptimize_sibling_calls = 719,         /* -foptimize-sibling-calls */
  OPT_foptimize_static_class_initialization = 720,/* -foptimize-static-class-initialization */
  /* OPT_foptional_diags = 721, */           /* -foptional-diags */
  OPT_foutput_class_dir_ = 722,              /* -foutput-class-dir= */
  OPT_fpack_derived = 723,                   /* -fpack-derived */
  OPT_fpack_struct = 724,                    /* -fpack-struct */
  OPT_fpack_struct_ = 725,                   /* -fpack-struct= */
  OPT_fpartial_inlining = 726,               /* -fpartial-inlining */
  OPT_fpcc_struct_return = 727,              /* -fpcc-struct-return */
  OPT_fpch_deps = 728,                       /* -fpch-deps */
  OPT_fpch_preprocess = 729,                 /* -fpch-preprocess */
  OPT_fpeel_loops = 730,                     /* -fpeel-loops */
  OPT_fpeephole = 731,                       /* -fpeephole */
  OPT_fpeephole2 = 732,                      /* -fpeephole2 */
  OPT_fpermissive = 733,                     /* -fpermissive */
  OPT_fpic = 734,                            /* -fpic */
  OPT_fpie = 735,                            /* -fpie */
  OPT_fplan9_extensions = 736,               /* -fplan9-extensions */
  OPT_fplugin_arg_ = 737,                    /* -fplugin-arg- */
  OPT_fplugin_ = 738,                        /* -fplugin= */
  OPT_fpmu_profile_generate_ = 739,          /* -fpmu-profile-generate= */
  OPT_fpmu_profile_use_ = 740,               /* -fpmu-profile-use= */
  OPT_fpost_ipa_mem_report = 741,            /* -fpost-ipa-mem-report */
  OPT_fpre_ipa_mem_report = 742,             /* -fpre-ipa-mem-report */
  OPT_fpredictive_commoning = 743,           /* -fpredictive-commoning */
  OPT_fprefetch_loop_arrays = 744,           /* -fprefetch-loop-arrays */
  OPT_fpreprocessed = 745,                   /* -fpreprocessed */
  OPT_fpretty_templates = 746,               /* -fpretty-templates */
  OPT_fprofile = 747,                        /* -fprofile */
  OPT_fprofile_arcs = 748,                   /* -fprofile-arcs */
  OPT_fprofile_correction = 749,             /* -fprofile-correction */
  OPT_fprofile_dir_ = 750,                   /* -fprofile-dir= */
  OPT_fprofile_dump = 751,                   /* -fprofile-dump */
  OPT_fprofile_generate = 752,               /* -fprofile-generate */
  OPT_fprofile_generate_sampling = 753,      /* -fprofile-generate-sampling */
  OPT_fprofile_generate_ = 754,              /* -fprofile-generate= */
  OPT_fprofile_reusedist = 755,              /* -fprofile-reusedist */
  OPT_fprofile_use = 756,                    /* -fprofile-use */
  OPT_fprofile_use_ = 757,                   /* -fprofile-use= */
  OPT_fprofile_values = 758,                 /* -fprofile-values */
  OPT_fprotect_parens = 759,                 /* -fprotect-parens */
  OPT_frandom_seed = 760,                    /* -frandom-seed */
  OPT_frandom_seed_ = 761,                   /* -frandom-seed= */
  OPT_frange_check = 762,                    /* -frange-check */
  OPT_frealloc_lhs = 763,                    /* -frealloc-lhs */
  OPT_freciprocal_math = 764,                /* -freciprocal-math */
  OPT_frecord_gcc_switches = 765,            /* -frecord-gcc-switches */
  OPT_frecord_gcc_switches_in_elf = 766,     /* -frecord-gcc-switches-in-elf */
  OPT_frecord_marker_4 = 767,                /* -frecord-marker=4 */
  OPT_frecord_marker_8 = 768,                /* -frecord-marker=8 */
  OPT_frecursive = 769,                      /* -frecursive */
  OPT_freduced_reflection = 770,             /* -freduced-reflection */
  OPT_freg_struct_return = 771,              /* -freg-struct-return */
  OPT_fregmove = 772,                        /* -fregmove */
  OPT_frename_registers = 773,               /* -frename-registers */
  OPT_freorder_blocks = 774,                 /* -freorder-blocks */
  OPT_freorder_blocks_and_partition = 775,   /* -freorder-blocks-and-partition */
  OPT_freorder_functions = 776,              /* -freorder-functions */
  OPT_frepack_arrays = 777,                  /* -frepack-arrays */
  OPT_freplace_objc_classes = 778,           /* -freplace-objc-classes */
  OPT_frepo = 779,                           /* -frepo */
  OPT_frequire_return_statement = 780,       /* -frequire-return-statement */
  OPT_frerun_cse_after_loop = 781,           /* -frerun-cse-after-loop */
  /* OPT_frerun_loop_opt = 782, */           /* -frerun-loop-opt */
  OPT_freschedule_modulo_scheduled_loops = 783,/* -freschedule-modulo-scheduled-loops */
  OPT_fresolution_ = 784,                    /* -fresolution= */
  OPT_fripa = 785,                           /* -fripa */
  OPT_fripa_disallow_asm_modules = 786,      /* -fripa-disallow-asm-modules */
  OPT_fripa_disallow_opt_mismatch = 787,     /* -fripa-disallow-opt-mismatch */
  OPT_fripa_no_promote_always_inline_func = 788,/* -fripa-no-promote-always-inline-func */
  OPT_fripa_peel_size_limit = 789,           /* -fripa-peel-size-limit */
  OPT_fripa_unroll_size_limit = 790,         /* -fripa-unroll-size-limit */
  OPT_frounding_math = 791,                  /* -frounding-math */
  OPT_frtti = 792,                           /* -frtti */
  OPT_fsaw_java_file = 793,                  /* -fsaw-java-file */
  OPT_fsched_critical_path_heuristic = 794,  /* -fsched-critical-path-heuristic */
  OPT_fsched_dep_count_heuristic = 795,      /* -fsched-dep-count-heuristic */
  OPT_fsched_group_heuristic = 796,          /* -fsched-group-heuristic */
  OPT_fsched_interblock = 797,               /* -fsched-interblock */
  OPT_fsched_last_insn_heuristic = 798,      /* -fsched-last-insn-heuristic */
  OPT_fsched_pressure = 799,                 /* -fsched-pressure */
  OPT_fsched_rank_heuristic = 800,           /* -fsched-rank-heuristic */
  OPT_fsched_spec = 801,                     /* -fsched-spec */
  OPT_fsched_spec_insn_heuristic = 802,      /* -fsched-spec-insn-heuristic */
  OPT_fsched_spec_load = 803,                /* -fsched-spec-load */
  OPT_fsched_spec_load_dangerous = 804,      /* -fsched-spec-load-dangerous */
  OPT_fsched_stalled_insns = 805,            /* -fsched-stalled-insns */
  OPT_fsched_stalled_insns_dep = 806,        /* -fsched-stalled-insns-dep */
  OPT_fsched_stalled_insns_dep_ = 807,       /* -fsched-stalled-insns-dep= */
  OPT_fsched_stalled_insns_ = 808,           /* -fsched-stalled-insns= */
  OPT_fsched_verbose_ = 809,                 /* -fsched-verbose= */
  OPT_fsched2_use_superblocks = 810,         /* -fsched2-use-superblocks */
  /* OPT_fsched2_use_traces = 811, */        /* -fsched2-use-traces */
  OPT_fschedule_insns = 812,                 /* -fschedule-insns */
  OPT_fschedule_insns2 = 813,                /* -fschedule-insns2 */
  OPT_fsecond_underscore = 814,              /* -fsecond-underscore */
  OPT_fsection_anchors = 815,                /* -fsection-anchors */
  /* OPT_fsee = 816, */                      /* -fsee */
  OPT_fsel_sched_pipelining = 817,           /* -fsel-sched-pipelining */
  OPT_fsel_sched_pipelining_outer_loops = 818,/* -fsel-sched-pipelining-outer-loops */
  OPT_fsel_sched_reschedule_pipelined = 819, /* -fsel-sched-reschedule-pipelined */
  OPT_fselective_scheduling = 820,           /* -fselective-scheduling */
  OPT_fselective_scheduling2 = 821,          /* -fselective-scheduling2 */
  OPT_fshort_double = 822,                   /* -fshort-double */
  OPT_fshort_enums = 823,                    /* -fshort-enums */
  OPT_fshort_wchar = 824,                    /* -fshort-wchar */
  OPT_fshow_column = 825,                    /* -fshow-column */
  OPT_fsign_zero = 826,                      /* -fsign-zero */
  OPT_fsignaling_nans = 827,                 /* -fsignaling-nans */
  OPT_fsigned_bitfields = 828,               /* -fsigned-bitfields */
  OPT_fsigned_char = 829,                    /* -fsigned-char */
  OPT_fsigned_zeros = 830,                   /* -fsigned-zeros */
  OPT_fsingle_precision_constant = 831,      /* -fsingle-precision-constant */
  OPT_fsized_delete = 832,                   /* -fsized-delete */
  OPT_fsource_filename_ = 833,               /* -fsource-filename= */
  OPT_fsource_ = 834,                        /* -fsource= */
  OPT_fsplit_ivs_in_unroller = 835,          /* -fsplit-ivs-in-unroller */
  OPT_fsplit_stack = 836,                    /* -fsplit-stack */
  OPT_fsplit_wide_types = 837,               /* -fsplit-wide-types */
  /* OPT_fsquangle = 838, */                 /* -fsquangle */
  /* OPT_fstack_check = 839, */              /* -fstack-check */
  OPT_fstack_check_ = 840,                   /* -fstack-check= */
  OPT_fstack_limit = 841,                    /* -fstack-limit */
  OPT_fstack_limit_register_ = 842,          /* -fstack-limit-register= */
  OPT_fstack_limit_symbol_ = 843,            /* -fstack-limit-symbol= */
  OPT_fstack_protector = 844,                /* -fstack-protector */
  OPT_fstack_protector_all = 845,            /* -fstack-protector-all */
  OPT_fstack_protector_strong = 846,         /* -fstack-protector-strong */
  OPT_fstack_usage = 847,                    /* -fstack-usage */
  OPT_fstats = 848,                          /* -fstats */
  OPT_fstore_check = 849,                    /* -fstore-check */
  /* OPT_fstrength_reduce = 850, */          /* -fstrength-reduce */
  OPT_fstrict_aliasing = 851,                /* -fstrict-aliasing */
  OPT_fstrict_enum_precision = 852,          /* -fstrict-enum-precision */
  OPT_fstrict_enums = 853,                   /* -fstrict-enums */
  OPT_fstrict_overflow = 854,                /* -fstrict-overflow */
  /* OPT_fstrict_prototype = 855, */         /* -fstrict-prototype */
  OPT_fstrict_volatile_bitfields = 856,      /* -fstrict-volatile-bitfields */
  OPT_fsyntax_only = 857,                    /* -fsyntax-only */
  OPT_ftabstop_ = 858,                       /* -ftabstop= */
  /* OPT_ftarget_help = 859, */              /* -ftarget-help */
  OPT_ftarget_ = 860,                        /* -ftarget= */
  /* OPT_ftemplate_depth_ = 861, */          /* -ftemplate-depth- */
  OPT_ftemplate_depth_ = 862,                /* -ftemplate-depth= */
  OPT_ftest_coverage = 863,                  /* -ftest-coverage */
  /* OPT_fthis_is_variable = 864, */         /* -fthis-is-variable */
  OPT_fthread_jumps = 865,                   /* -fthread-jumps */
  OPT_fthreadsafe_statics = 866,             /* -fthreadsafe-statics */
  OPT_ftime_report = 867,                    /* -ftime-report */
  OPT_ftls_model_ = 868,                     /* -ftls-model= */
  OPT_ftoplevel_reorder = 869,               /* -ftoplevel-reorder */
  OPT_ftracer = 870,                         /* -ftracer */
  OPT_ftrapping_math = 871,                  /* -ftrapping-math */
  OPT_ftrapv = 872,                          /* -ftrapv */
  OPT_ftree_bit_ccp = 873,                   /* -ftree-bit-ccp */
  OPT_ftree_builtin_call_dce = 874,          /* -ftree-builtin-call-dce */
  OPT_ftree_ccp = 875,                       /* -ftree-ccp */
  OPT_ftree_ch = 876,                        /* -ftree-ch */
  OPT_ftree_copy_prop = 877,                 /* -ftree-copy-prop */
  OPT_ftree_copyrename = 878,                /* -ftree-copyrename */
  OPT_ftree_cselim = 879,                    /* -ftree-cselim */
  OPT_ftree_dce = 880,                       /* -ftree-dce */
  OPT_ftree_dominator_opts = 881,            /* -ftree-dominator-opts */
  OPT_ftree_dse = 882,                       /* -ftree-dse */
  OPT_ftree_forwprop = 883,                  /* -ftree-forwprop */
  OPT_ftree_fre = 884,                       /* -ftree-fre */
  OPT_ftree_loop_distribute_patterns = 885,  /* -ftree-loop-distribute-patterns */
  OPT_ftree_loop_distribution = 886,         /* -ftree-loop-distribution */
  OPT_ftree_loop_if_convert = 887,           /* -ftree-loop-if-convert */
  OPT_ftree_loop_if_convert_stores = 888,    /* -ftree-loop-if-convert-stores */
  OPT_ftree_loop_im = 889,                   /* -ftree-loop-im */
  OPT_ftree_loop_ivcanon = 890,              /* -ftree-loop-ivcanon */
  /* OPT_ftree_loop_linear = 891, */         /* -ftree-loop-linear */
  OPT_ftree_loop_optimize = 892,             /* -ftree-loop-optimize */
  OPT_ftree_lrs = 893,                       /* -ftree-lrs */
  OPT_ftree_parallelize_loops_ = 894,        /* -ftree-parallelize-loops= */
  OPT_ftree_phiprop = 895,                   /* -ftree-phiprop */
  OPT_ftree_pre = 896,                       /* -ftree-pre */
  OPT_ftree_pta = 897,                       /* -ftree-pta */
  OPT_ftree_reassoc = 898,                   /* -ftree-reassoc */
  /* OPT_ftree_salias = 899, */              /* -ftree-salias */
  OPT_ftree_scev_cprop = 900,                /* -ftree-scev-cprop */
  OPT_ftree_sink = 901,                      /* -ftree-sink */
  OPT_ftree_slp_vectorize = 902,             /* -ftree-slp-vectorize */
  OPT_ftree_sra = 903,                       /* -ftree-sra */
  /* OPT_ftree_store_ccp = 904, */           /* -ftree-store-ccp */
  /* OPT_ftree_store_copy_prop = 905, */     /* -ftree-store-copy-prop */
  OPT_ftree_switch_conversion = 906,         /* -ftree-switch-conversion */
  OPT_ftree_ter = 907,                       /* -ftree-ter */
  OPT_ftree_vect_loop_version = 908,         /* -ftree-vect-loop-version */
  OPT_ftree_vectorize = 909,                 /* -ftree-vectorize */
  OPT_ftree_vectorizer_verbose_ = 910,       /* -ftree-vectorizer-verbose= */
  OPT_ftree_vrp = 911,                       /* -ftree-vrp */
  OPT_funderscoring = 912,                   /* -funderscoring */
  OPT_funit_at_a_time = 913,                 /* -funit-at-a-time */
  OPT_funroll_all_loops = 914,               /* -funroll-all-loops */
  OPT_funroll_loops = 915,                   /* -funroll-loops */
  OPT_funsafe_loop_optimizations = 916,      /* -funsafe-loop-optimizations */
  OPT_funsafe_math_optimizations = 917,      /* -funsafe-math-optimizations */
  OPT_funsigned_bitfields = 918,             /* -funsigned-bitfields */
  OPT_funsigned_char = 919,                  /* -funsigned-char */
  OPT_funswitch_loops = 920,                 /* -funswitch-loops */
  OPT_funwind_tables = 921,                  /* -funwind-tables */
  OPT_fuse_atomic_builtins = 922,            /* -fuse-atomic-builtins */
  OPT_fuse_boehm_gc = 923,                   /* -fuse-boehm-gc */
  OPT_fuse_cxa_atexit = 924,                 /* -fuse-cxa-atexit */
  OPT_fuse_cxa_get_exception_ptr = 925,      /* -fuse-cxa-get-exception-ptr */
  OPT_fuse_divide_subroutine = 926,          /* -fuse-divide-subroutine */
  OPT_fuse_ld_ = 927,                        /* -fuse-ld= */
  OPT_fuse_linker_plugin = 928,              /* -fuse-linker-plugin */
  OPT_fvar_tracking = 929,                   /* -fvar-tracking */
  OPT_fvar_tracking_assignments = 930,       /* -fvar-tracking-assignments */
  OPT_fvar_tracking_assignments_toggle = 931,/* -fvar-tracking-assignments-toggle */
  OPT_fvar_tracking_uninit = 932,            /* -fvar-tracking-uninit */
  OPT_fvariable_expansion_in_unroller = 933, /* -fvariable-expansion-in-unroller */
  OPT_fvect_cost_model = 934,                /* -fvect-cost-model */
  OPT_fverbose_asm = 935,                    /* -fverbose-asm */
  /* OPT_fversion = 936, */                  /* -fversion */
  OPT_fvisibility_inlines_hidden = 937,      /* -fvisibility-inlines-hidden */
  OPT_fvisibility_ms_compat = 938,           /* -fvisibility-ms-compat */
  OPT_fvisibility_ = 939,                    /* -fvisibility= */
  OPT_fvpt = 940,                            /* -fvpt */
  /* OPT_fvtable_gc = 941, */                /* -fvtable-gc */
  /* OPT_fvtable_thunks = 942, */            /* -fvtable-thunks */
  OPT_fweak = 943,                           /* -fweak */
  OPT_fweb = 944,                            /* -fweb */
  OPT_fwhole_file = 945,                     /* -fwhole-file */
  OPT_fwhole_program = 946,                  /* -fwhole-program */
  OPT_fwide_exec_charset_ = 947,             /* -fwide-exec-charset= */
  OPT_fworking_directory = 948,              /* -fworking-directory */
  OPT_fwpa = 949,                            /* -fwpa */
  OPT_fwrapv = 950,                          /* -fwrapv */
  /* OPT_fxref = 951, */                     /* -fxref */
  OPT_fzee = 952,                            /* -fzee */
  OPT_fzero_initialized_in_bss = 953,        /* -fzero-initialized-in-bss */
  OPT_fzero_link = 954,                      /* -fzero-link */
  OPT_g = 955,                               /* -g */
  OPT_gant = 956,                            /* -gant */
  OPT_gcoff = 957,                           /* -gcoff */
  OPT_gdwarf_ = 958,                         /* -gdwarf- */
  OPT_gen_decls = 959,                       /* -gen-decls */
  OPT_ggdb = 960,                            /* -ggdb */
  OPT_gmlt = 961,                            /* -gmlt */
  OPT_gnat = 962,                            /* -gnat */
  OPT_gnatO = 963,                           /* -gnatO */
  OPT_gno_strict_dwarf = 964,                /* -gno-strict-dwarf */
  OPT_gstabs = 965,                          /* -gstabs */
  OPT_gstabs_ = 966,                         /* -gstabs+ */
  OPT_gstrict_dwarf = 967,                   /* -gstrict-dwarf */
  OPT_gtoggle = 968,                         /* -gtoggle */
  OPT_gvms = 969,                            /* -gvms */
  OPT_gxcoff = 970,                          /* -gxcoff */
  OPT_gxcoff_ = 971,                         /* -gxcoff+ */
  OPT_h = 972,                               /* -h */
  OPT_idirafter = 973,                       /* -idirafter */
  OPT_imacros = 974,                         /* -imacros */
  OPT_imultilib = 975,                       /* -imultilib */
  OPT_include = 976,                         /* -include */
  OPT_iplugindir_ = 977,                     /* -iplugindir= */
  OPT_iprefix = 978,                         /* -iprefix */
  OPT_iquote = 979,                          /* -iquote */
  OPT_isysroot = 980,                        /* -isysroot */
  OPT_isystem = 981,                         /* -isystem */
  OPT_iwithprefix = 982,                     /* -iwithprefix */
  OPT_iwithprefixbefore = 983,               /* -iwithprefixbefore */
  OPT_k8 = 984,                              /* -k8 */
  OPT_l = 985,                               /* -l */
  OPT_lang_asm = 986,                        /* -lang-asm */
  OPT_mabi_ = 987,                           /* -mabi= */
  OPT_mabort_on_noreturn = 988,              /* -mabort-on-noreturn */
  OPT_mandroid = 989,                        /* -mandroid */
  OPT_mapcs = 990,                           /* -mapcs */
  OPT_mapcs_float = 991,                     /* -mapcs-float */
  OPT_mapcs_frame = 992,                     /* -mapcs-frame */
  OPT_mapcs_reentrant = 993,                 /* -mapcs-reentrant */
  OPT_mapcs_stack_check = 994,               /* -mapcs-stack-check */
  OPT_march_ = 995,                          /* -march= */
  OPT_marm = 996,                            /* -marm */
  OPT_mbig_endian = 997,                     /* -mbig-endian */
  OPT_mbionic = 998,                         /* -mbionic */
  OPT_mcallee_super_interworking = 999,      /* -mcallee-super-interworking */
  OPT_mcaller_super_interworking = 1000,     /* -mcaller-super-interworking */
  OPT_mcirrus_fix_invalid_insns = 1001,      /* -mcirrus-fix-invalid-insns */
  OPT_mcpu_ = 1002,                          /* -mcpu= */
  OPT_mfix_cortex_m3_ldrd = 1003,            /* -mfix-cortex-m3-ldrd */
  OPT_mfloat_abi_ = 1004,                    /* -mfloat-abi= */
  OPT_mfp16_format_ = 1005,                  /* -mfp16-format= */
  OPT_mfp_ = 1006,                           /* -mfp= */
  OPT_mfpe = 1007,                           /* -mfpe */
  OPT_mfpe_ = 1008,                          /* -mfpe= */
  OPT_mfpu_ = 1009,                          /* -mfpu= */
  OPT_mglibc = 1010,                         /* -mglibc */
  OPT_mhard_float = 1011,                    /* -mhard-float */
  OPT_mlittle_endian = 1012,                 /* -mlittle-endian */
  OPT_mlong_calls = 1013,                    /* -mlong-calls */
  OPT_mpic_register_ = 1014,                 /* -mpic-register= */
  OPT_mpoke_function_name = 1015,            /* -mpoke-function-name */
  OPT_msched_prolog = 1016,                  /* -msched-prolog */
  OPT_msingle_pic_base = 1017,               /* -msingle-pic-base */
  OPT_msoft_float = 1018,                    /* -msoft-float */
  OPT_mstructure_size_boundary_ = 1019,      /* -mstructure-size-boundary= */
  OPT_mthumb = 1020,                         /* -mthumb */
  OPT_mthumb_interwork = 1021,               /* -mthumb-interwork */
  OPT_mtp_ = 1022,                           /* -mtp= */
  OPT_mtpcs_frame = 1023,                    /* -mtpcs-frame */
  OPT_mtpcs_leaf_frame = 1024,               /* -mtpcs-leaf-frame */
  OPT_mtune_ = 1025,                         /* -mtune= */
  OPT_muclibc = 1026,                        /* -muclibc */
  OPT_mvectorize_with_neon_quad = 1027,      /* -mvectorize-with-neon-quad */
  OPT_mword_relocations = 1028,              /* -mword-relocations */
  OPT_mwords_little_endian = 1029,           /* -mwords-little-endian */
  OPT_n = 1030,                              /* -n */
  OPT_no_canonical_prefixes = 1031,          /* -no-canonical-prefixes */
  OPT_no_integrated_cpp = 1032,              /* -no-integrated-cpp */
  OPT_nocpp = 1033,                          /* -nocpp */
  OPT_nodefaultlibs = 1034,                  /* -nodefaultlibs */
  OPT_nostartfiles = 1035,                   /* -nostartfiles */
  OPT_nostdinc = 1036,                       /* -nostdinc */
  OPT_nostdinc__ = 1037,                     /* -nostdinc++ */
  OPT_nostdlib = 1038,                       /* -nostdlib */
  OPT_o = 1039,                              /* -o */
  OPT_p = 1040,                              /* -p */
  OPT_pass_exit_codes = 1041,                /* -pass-exit-codes */
  OPT_pedantic = 1042,                       /* -pedantic */
  OPT_pedantic_errors = 1043,                /* -pedantic-errors */
  OPT_pg = 1044,                             /* -pg */
  OPT_pie = 1045,                            /* -pie */
  OPT_pipe = 1046,                           /* -pipe */
  OPT_posix = 1047,                          /* -posix */
  OPT_print_file_name_ = 1048,               /* -print-file-name= */
  OPT_print_libgcc_file_name = 1049,         /* -print-libgcc-file-name */
  OPT_print_multi_directory = 1050,          /* -print-multi-directory */
  OPT_print_multi_lib = 1051,                /* -print-multi-lib */
  OPT_print_multi_os_directory = 1052,       /* -print-multi-os-directory */
  OPT_print_objc_runtime_info = 1053,        /* -print-objc-runtime-info */
  OPT_print_prog_name_ = 1054,               /* -print-prog-name= */
  OPT_print_search_dirs = 1055,              /* -print-search-dirs */
  OPT_print_sysroot = 1056,                  /* -print-sysroot */
  OPT_print_sysroot_headers_suffix = 1057,   /* -print-sysroot-headers-suffix */
  OPT_profile = 1058,                        /* -profile */
  OPT_pthread = 1059,                        /* -pthread */
  OPT_quiet = 1060,                          /* -quiet */
  OPT_r = 1061,                              /* -r */
  OPT_rdynamic = 1062,                       /* -rdynamic */
  OPT_remap = 1063,                          /* -remap */
  OPT_s = 1064,                              /* -s */
  OPT_s_bc_abi = 1065,                       /* -s-bc-abi */
  OPT_save_temps = 1066,                     /* -save-temps */
  OPT_save_temps_ = 1067,                    /* -save-temps= */
  OPT_shared = 1068,                         /* -shared */
  OPT_shared_libgcc = 1069,                  /* -shared-libgcc */
  /* OPT_specs = 1070, */                    /* -specs */
  OPT_specs_ = 1071,                         /* -specs= */
  OPT_static = 1072,                         /* -static */
  OPT_static_libgcc = 1073,                  /* -static-libgcc */
  OPT_static_libgcj = 1074,                  /* -static-libgcj */
  OPT_static_libgfortran = 1075,             /* -static-libgfortran */
  OPT_static_libgo = 1076,                   /* -static-libgo */
  OPT_static_libstdc__ = 1077,               /* -static-libstdc++ */
  /* OPT_std_c__03 = 1078, */                /* -std=c++03 */
  /* OPT_std_c__0x = 1079, */                /* -std=c++0x */
  OPT_std_c__11 = 1080,                      /* -std=c++11 */
  OPT_std_c__98 = 1081,                      /* -std=c++98 */
  OPT_std_c1x = 1082,                        /* -std=c1x */
  /* OPT_std_c89 = 1083, */                  /* -std=c89 */
  OPT_std_c90 = 1084,                        /* -std=c90 */
  OPT_std_c99 = 1085,                        /* -std=c99 */
  /* OPT_std_c9x = 1086, */                  /* -std=c9x */
  OPT_std_f2003 = 1087,                      /* -std=f2003 */
  OPT_std_f2008 = 1088,                      /* -std=f2008 */
  OPT_std_f95 = 1089,                        /* -std=f95 */
  OPT_std_gnu = 1090,                        /* -std=gnu */
  /* OPT_std_gnu__03 = 1091, */              /* -std=gnu++03 */
  /* OPT_std_gnu__0x = 1092, */              /* -std=gnu++0x */
  OPT_std_gnu__11 = 1093,                    /* -std=gnu++11 */
  OPT_std_gnu__98 = 1094,                    /* -std=gnu++98 */
  OPT_std_gnu1x = 1095,                      /* -std=gnu1x */
  /* OPT_std_gnu89 = 1096, */                /* -std=gnu89 */
  OPT_std_gnu90 = 1097,                      /* -std=gnu90 */
  OPT_std_gnu99 = 1098,                      /* -std=gnu99 */
  /* OPT_std_gnu9x = 1099, */                /* -std=gnu9x */
  /* OPT_std_iso9899_1990 = 1100, */         /* -std=iso9899:1990 */
  OPT_std_iso9899_199409 = 1101,             /* -std=iso9899:199409 */
  /* OPT_std_iso9899_1999 = 1102, */         /* -std=iso9899:1999 */
  /* OPT_std_iso9899_199x = 1103, */         /* -std=iso9899:199x */
  OPT_std_legacy = 1104,                     /* -std=legacy */
  OPT_symbolic = 1105,                       /* -symbolic */
  OPT_t = 1106,                              /* -t */
  OPT_time = 1107,                           /* -time */
  OPT_time_ = 1108,                          /* -time= */
  OPT_tno_android_cc = 1109,                 /* -tno-android-cc */
  OPT_tno_android_ld = 1110,                 /* -tno-android-ld */
  OPT_traditional = 1111,                    /* -traditional */
  OPT_traditional_cpp = 1112,                /* -traditional-cpp */
  OPT_trigraphs = 1113,                      /* -trigraphs */
  OPT_u = 1114,                              /* -u */
  OPT_undef = 1115,                          /* -undef */
  OPT_v = 1116,                              /* -v */
  OPT_version = 1117,                        /* -version */
  OPT_w = 1118,                              /* -w */
  OPT_wrapper = 1119,                        /* -wrapper */
  OPT_x = 1120,                              /* -x */
  OPT_z = 1121,                              /* -z */
  N_OPTS,
  OPT_SPECIAL_unknown,
  OPT_SPECIAL_ignore,
  OPT_SPECIAL_program_name,
  OPT_SPECIAL_input_file
};

#endif /* OPTIONS_H */
